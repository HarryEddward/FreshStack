name: Apply Docker Swarm Secrets to VPS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Manage SSL Secrets on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          envs: SSL_CERT,SSL_KEY
          script: |
            set -e

            TEMP_DIR="/tmp/certs"
            sudo rm -rf "$TEMP_DIR"
            sudo mkdir -p "$TEMP_DIR"
            sudo chmod 777 "$TEMP_DIR"

            # Guardar certificados y clave desde variables de entorno
            echo "$SSL_CERT" | sudo tee "$TEMP_DIR/fullchain.crt" > /dev/null
            echo "$SSL_KEY" | sudo tee "$TEMP_DIR/cafebuy.key" > /dev/null

            compute_hash() {
              sha256sum "$1" | cut -d' ' -f1
            }

            get_secret_hash() {
              local secret_name="$1"
              local temp_file="$TEMP_DIR/$secret_name.current"
              if sudo docker secret inspect "$secret_name" >/dev/null 2>&1; then
                # Extraer correctamente la data del secreto
                sudo docker secret inspect "$secret_name" --format '{{.Spec.Data}}' | base64 -d > "$temp_file" || true
                if [ -f "$temp_file" ]; then
                  compute_hash "$temp_file"
                else
                  echo ""
                fi
              else
                echo ""
              fi
            }

            NEW_CERT_HASH=$(compute_hash "$TEMP_DIR/fullchain.crt")
            NEW_KEY_HASH=$(compute_hash "$TEMP_DIR/cafebuy.key")

            update_secret() {
              local name="$1"
              local file="$2"
              local new_hash="$3"
              local current_hash
              current_hash=$(get_secret_hash "$name")
              
              if [ -z "$current_hash" ]; then
                echo "Creando secreto $name..."
                sudo docker secret create "$name" "$file" || echo "Secreto $name ya existe, continuando..."
              elif [ "$new_hash" != "$current_hash" ]; then
                echo "Actualizando secreto $name..."
                sudo docker secret rm "$name" || true
                sudo docker secret create "$name" "$file"
              else
                echo "Secreto $name sin cambios, omitiendo."
              fi
            }

            update_secret "ssl_cert" "$TEMP_DIR/fullchain.crt" "$NEW_CERT_HASH"
            update_secret "ssl_key" "$TEMP_DIR/cafebuy.key" "$NEW_KEY_HASH"

            sudo rm -rf "$TEMP_DIR"
            echo "Completado: $(date)"
