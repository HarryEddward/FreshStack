name: Apply Docker Swarm Secrets to VPS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Apply secrets to Swarm
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script: |
            set -e

            echo "üì• Actualizando secretos en Docker Swarm..."

            # Lista de secretos que quieres desplegar (nombre en GitHub -> nombre en Docker Swarm)
            declare -A secrets=(
              [SSL_CERT]=ssl_cert
              [SSL_KEY]=ssl_key
              [FRESH_SESSION_SECRET]=fresh_session_secret
              [JENKINS_SECRET_KEY]=jenkins_secret_key
              [KEYCLOAK_CLIENT_BACKEND_SERVER_SECRET]=keycloak_client_backend_server_secret
              [POSTGRESQL_PASSWORD]=postgresql_password
              [POSTGRESQL_USERNAME]=postgresql_username
              [SEAWEEDFS_S3_ACCESS_KEY]=seaweedfs_s3_access_key
              [SEAWEEDFS_S3_SECRET_KEY]=seaweedfs_s3_secret_key
              [STRIPE_PUBLISHABLE_KEY]=stripe_publishable_key
              [STRIPE_SECRET_KEY]=stripe_secret_key
            )

            # Detener el servicio que usa los secretos
            echo "‚è∏Ô∏è Deteniendo servicio para actualizar secretos..."
            sudo docker service rm cafebuy-traefik_traefik || true
            sleep 10

            # Iterar sobre todos los secretos definidos arriba
            for gh_secret in "${!secrets[@]}"; do
              swarm_secret="${secrets[$gh_secret]}"

              echo "üîê Procesando secreto: $swarm_secret"

              # Eliminar el secreto existente
              sudo docker secret rm "$swarm_secret" || true

              # Esperar a que se borre de verdad antes de recrearlo
              retries=10
              while sudo docker secret ls --format '{{.Name}}' | grep -q "^$swarm_secret$"; do
                echo "‚è≥ Esperando a que se elimine $swarm_secret..."
                sleep 1
                retries=$((retries-1))
                if [ $retries -le 0 ]; then
                  echo "‚ùå Timeout: el secreto $swarm_secret no se pudo eliminar"
                  exit 1
                fi
              done

              # Crear el secreto nuevo con el valor desde GitHub Actions
              secret_value="${!gh_secret}"
              echo "$secret_value" | sudo docker secret create "$swarm_secret" -
              echo "‚úÖ Secreto actualizado: $swarm_secret"
            done

            echo "‚úÖ Todos los secretos actualizados sin duplicados"
            echo "üöÄ Despliegue completado: $(date)"