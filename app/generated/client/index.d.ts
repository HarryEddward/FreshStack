
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model BusinessBankInformation
 * 
 */
export type BusinessBankInformation = $Result.DefaultSelection<Prisma.$BusinessBankInformationPayload>
/**
 * Model BusinessPaymentHistoryDetail
 * 
 */
export type BusinessPaymentHistoryDetail = $Result.DefaultSelection<Prisma.$BusinessPaymentHistoryDetailPayload>
/**
 * Model BusinessLicense
 * 
 */
export type BusinessLicense = $Result.DefaultSelection<Prisma.$BusinessLicensePayload>
/**
 * Model BusinessPayingCompany
 * 
 */
export type BusinessPayingCompany = $Result.DefaultSelection<Prisma.$BusinessPayingCompanyPayload>
/**
 * Model ClientOrder
 * 
 */
export type ClientOrder = $Result.DefaultSelection<Prisma.$ClientOrderPayload>
/**
 * Model ClientOrderTicket
 * 
 */
export type ClientOrderTicket = $Result.DefaultSelection<Prisma.$ClientOrderTicketPayload>
/**
 * Model ClientOrderTransaction
 * 
 */
export type ClientOrderTransaction = $Result.DefaultSelection<Prisma.$ClientOrderTransactionPayload>
/**
 * Model BusinessSupplierPicture
 * 
 */
export type BusinessSupplierPicture = $Result.DefaultSelection<Prisma.$BusinessSupplierPicturePayload>
/**
 * Model BusinessMenu
 * 
 */
export type BusinessMenu = $Result.DefaultSelection<Prisma.$BusinessMenuPayload>
/**
 * Model BusinessMenuCategory
 * 
 */
export type BusinessMenuCategory = $Result.DefaultSelection<Prisma.$BusinessMenuCategoryPayload>
/**
 * Model BusinessProduct
 * 
 */
export type BusinessProduct = $Result.DefaultSelection<Prisma.$BusinessProductPayload>
/**
 * Model BusinessGeneralSalesReportAI
 * 
 */
export type BusinessGeneralSalesReportAI = $Result.DefaultSelection<Prisma.$BusinessGeneralSalesReportAIPayload>
/**
 * Model BusinessGeneralWarehouseReportAI
 * 
 */
export type BusinessGeneralWarehouseReportAI = $Result.DefaultSelection<Prisma.$BusinessGeneralWarehouseReportAIPayload>
/**
 * Model BusinessWarehouseReplenishmentReportAI
 * 
 */
export type BusinessWarehouseReplenishmentReportAI = $Result.DefaultSelection<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
/**
 * Model business_commercial_relationship_documents_attached
 * 
 */
export type business_commercial_relationship_documents_attached = $Result.DefaultSelection<Prisma.$business_commercial_relationship_documents_attachedPayload>
/**
 * Model business_commercial_relationships
 * 
 */
export type business_commercial_relationships = $Result.DefaultSelection<Prisma.$business_commercial_relationshipsPayload>
/**
 * Model business_compliance
 * 
 */
export type business_compliance = $Result.DefaultSelection<Prisma.$business_compliancePayload>
/**
 * Model business_configurations
 * 
 */
export type business_configurations = $Result.DefaultSelection<Prisma.$business_configurationsPayload>
/**
 * Model business_employees
 * 
 */
export type business_employees = $Result.DefaultSelection<Prisma.$business_employeesPayload>
/**
 * Model business_employees_clock_records
 * 
 */
export type business_employees_clock_records = $Result.DefaultSelection<Prisma.$business_employees_clock_recordsPayload>
/**
 * Model business_payment_history
 * 
 */
export type business_payment_history = $Result.DefaultSelection<Prisma.$business_payment_historyPayload>
/**
 * Model business_phone_ids
 * 
 */
export type business_phone_ids = $Result.DefaultSelection<Prisma.$business_phone_idsPayload>
/**
 * Model business_supplier_information
 * 
 */
export type business_supplier_information = $Result.DefaultSelection<Prisma.$business_supplier_informationPayload>
/**
 * Model business_supporting_documents
 * 
 */
export type business_supporting_documents = $Result.DefaultSelection<Prisma.$business_supporting_documentsPayload>
/**
 * Model business_supporting_documents_attached
 * 
 */
export type business_supporting_documents_attached = $Result.DefaultSelection<Prisma.$business_supporting_documents_attachedPayload>
/**
 * Model businesses
 * 
 */
export type businesses = $Result.DefaultSelection<Prisma.$businessesPayload>
/**
 * Model client_order_product_lines
 * 
 */
export type client_order_product_lines = $Result.DefaultSelection<Prisma.$client_order_product_linesPayload>
/**
 * Model client_order_thermal_printers
 * 
 */
export type client_order_thermal_printers = $Result.DefaultSelection<Prisma.$client_order_thermal_printersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const LicenseType: {
  MONTHLY: 'MONTHLY',
  LIFETIME: 'LIFETIME'
};

export type LicenseType = (typeof LicenseType)[keyof typeof LicenseType]


export const LicensePlan: {
  STANDARD: 'STANDARD',
  PREMIUM: 'PREMIUM',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

export type LicensePlan = (typeof LicensePlan)[keyof typeof LicensePlan]


export const LicenseStatus: {
  ACTIVE: 'ACTIVE',
  CANCELED: 'CANCELED',
  EXPIRED: 'EXPIRED'
};

export type LicenseStatus = (typeof LicenseStatus)[keyof typeof LicenseStatus]


export const OrderStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  CANCELED: 'CANCELED',
  REFUNDED: 'REFUNDED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const TransactionStatus: {
  SUCCESSFUL: 'SUCCESSFUL',
  FAILED: 'FAILED',
  PENDING: 'PENDING'
};

export type TransactionStatus = (typeof TransactionStatus)[keyof typeof TransactionStatus]


export const PaymentMethod: {
  DEBIT_CARD: 'DEBIT_CARD',
  CREDIT_CARD: 'CREDIT_CARD',
  CASH: 'CASH',
  OTHER: 'OTHER'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]

}

export type LicenseType = $Enums.LicenseType

export const LicenseType: typeof $Enums.LicenseType

export type LicensePlan = $Enums.LicensePlan

export const LicensePlan: typeof $Enums.LicensePlan

export type LicenseStatus = $Enums.LicenseStatus

export const LicenseStatus: typeof $Enums.LicenseStatus

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type TransactionStatus = $Enums.TransactionStatus

export const TransactionStatus: typeof $Enums.TransactionStatus

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more BusinessBankInformations
 * const businessBankInformations = await prisma.businessBankInformation.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more BusinessBankInformations
   * const businessBankInformations = await prisma.businessBankInformation.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.businessBankInformation`: Exposes CRUD operations for the **BusinessBankInformation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessBankInformations
    * const businessBankInformations = await prisma.businessBankInformation.findMany()
    * ```
    */
  get businessBankInformation(): Prisma.BusinessBankInformationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessPaymentHistoryDetail`: Exposes CRUD operations for the **BusinessPaymentHistoryDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessPaymentHistoryDetails
    * const businessPaymentHistoryDetails = await prisma.businessPaymentHistoryDetail.findMany()
    * ```
    */
  get businessPaymentHistoryDetail(): Prisma.BusinessPaymentHistoryDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessLicense`: Exposes CRUD operations for the **BusinessLicense** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessLicenses
    * const businessLicenses = await prisma.businessLicense.findMany()
    * ```
    */
  get businessLicense(): Prisma.BusinessLicenseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessPayingCompany`: Exposes CRUD operations for the **BusinessPayingCompany** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessPayingCompanies
    * const businessPayingCompanies = await prisma.businessPayingCompany.findMany()
    * ```
    */
  get businessPayingCompany(): Prisma.BusinessPayingCompanyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientOrder`: Exposes CRUD operations for the **ClientOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientOrders
    * const clientOrders = await prisma.clientOrder.findMany()
    * ```
    */
  get clientOrder(): Prisma.ClientOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientOrderTicket`: Exposes CRUD operations for the **ClientOrderTicket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientOrderTickets
    * const clientOrderTickets = await prisma.clientOrderTicket.findMany()
    * ```
    */
  get clientOrderTicket(): Prisma.ClientOrderTicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientOrderTransaction`: Exposes CRUD operations for the **ClientOrderTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientOrderTransactions
    * const clientOrderTransactions = await prisma.clientOrderTransaction.findMany()
    * ```
    */
  get clientOrderTransaction(): Prisma.ClientOrderTransactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessSupplierPicture`: Exposes CRUD operations for the **BusinessSupplierPicture** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessSupplierPictures
    * const businessSupplierPictures = await prisma.businessSupplierPicture.findMany()
    * ```
    */
  get businessSupplierPicture(): Prisma.BusinessSupplierPictureDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessMenu`: Exposes CRUD operations for the **BusinessMenu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessMenus
    * const businessMenus = await prisma.businessMenu.findMany()
    * ```
    */
  get businessMenu(): Prisma.BusinessMenuDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessMenuCategory`: Exposes CRUD operations for the **BusinessMenuCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessMenuCategories
    * const businessMenuCategories = await prisma.businessMenuCategory.findMany()
    * ```
    */
  get businessMenuCategory(): Prisma.BusinessMenuCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessProduct`: Exposes CRUD operations for the **BusinessProduct** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessProducts
    * const businessProducts = await prisma.businessProduct.findMany()
    * ```
    */
  get businessProduct(): Prisma.BusinessProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessGeneralSalesReportAI`: Exposes CRUD operations for the **BusinessGeneralSalesReportAI** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessGeneralSalesReportAIS
    * const businessGeneralSalesReportAIS = await prisma.businessGeneralSalesReportAI.findMany()
    * ```
    */
  get businessGeneralSalesReportAI(): Prisma.BusinessGeneralSalesReportAIDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessGeneralWarehouseReportAI`: Exposes CRUD operations for the **BusinessGeneralWarehouseReportAI** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessGeneralWarehouseReportAIS
    * const businessGeneralWarehouseReportAIS = await prisma.businessGeneralWarehouseReportAI.findMany()
    * ```
    */
  get businessGeneralWarehouseReportAI(): Prisma.BusinessGeneralWarehouseReportAIDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businessWarehouseReplenishmentReportAI`: Exposes CRUD operations for the **BusinessWarehouseReplenishmentReportAI** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessWarehouseReplenishmentReportAIS
    * const businessWarehouseReplenishmentReportAIS = await prisma.businessWarehouseReplenishmentReportAI.findMany()
    * ```
    */
  get businessWarehouseReplenishmentReportAI(): Prisma.BusinessWarehouseReplenishmentReportAIDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_commercial_relationship_documents_attached`: Exposes CRUD operations for the **business_commercial_relationship_documents_attached** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_commercial_relationship_documents_attacheds
    * const business_commercial_relationship_documents_attacheds = await prisma.business_commercial_relationship_documents_attached.findMany()
    * ```
    */
  get business_commercial_relationship_documents_attached(): Prisma.business_commercial_relationship_documents_attachedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_commercial_relationships`: Exposes CRUD operations for the **business_commercial_relationships** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_commercial_relationships
    * const business_commercial_relationships = await prisma.business_commercial_relationships.findMany()
    * ```
    */
  get business_commercial_relationships(): Prisma.business_commercial_relationshipsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_compliance`: Exposes CRUD operations for the **business_compliance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_compliances
    * const business_compliances = await prisma.business_compliance.findMany()
    * ```
    */
  get business_compliance(): Prisma.business_complianceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_configurations`: Exposes CRUD operations for the **business_configurations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_configurations
    * const business_configurations = await prisma.business_configurations.findMany()
    * ```
    */
  get business_configurations(): Prisma.business_configurationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_employees`: Exposes CRUD operations for the **business_employees** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_employees
    * const business_employees = await prisma.business_employees.findMany()
    * ```
    */
  get business_employees(): Prisma.business_employeesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_employees_clock_records`: Exposes CRUD operations for the **business_employees_clock_records** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_employees_clock_records
    * const business_employees_clock_records = await prisma.business_employees_clock_records.findMany()
    * ```
    */
  get business_employees_clock_records(): Prisma.business_employees_clock_recordsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_payment_history`: Exposes CRUD operations for the **business_payment_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_payment_histories
    * const business_payment_histories = await prisma.business_payment_history.findMany()
    * ```
    */
  get business_payment_history(): Prisma.business_payment_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_phone_ids`: Exposes CRUD operations for the **business_phone_ids** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_phone_ids
    * const business_phone_ids = await prisma.business_phone_ids.findMany()
    * ```
    */
  get business_phone_ids(): Prisma.business_phone_idsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_supplier_information`: Exposes CRUD operations for the **business_supplier_information** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_supplier_informations
    * const business_supplier_informations = await prisma.business_supplier_information.findMany()
    * ```
    */
  get business_supplier_information(): Prisma.business_supplier_informationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_supporting_documents`: Exposes CRUD operations for the **business_supporting_documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_supporting_documents
    * const business_supporting_documents = await prisma.business_supporting_documents.findMany()
    * ```
    */
  get business_supporting_documents(): Prisma.business_supporting_documentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business_supporting_documents_attached`: Exposes CRUD operations for the **business_supporting_documents_attached** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Business_supporting_documents_attacheds
    * const business_supporting_documents_attacheds = await prisma.business_supporting_documents_attached.findMany()
    * ```
    */
  get business_supporting_documents_attached(): Prisma.business_supporting_documents_attachedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.businesses`: Exposes CRUD operations for the **businesses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Businesses
    * const businesses = await prisma.businesses.findMany()
    * ```
    */
  get businesses(): Prisma.businessesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.client_order_product_lines`: Exposes CRUD operations for the **client_order_product_lines** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Client_order_product_lines
    * const client_order_product_lines = await prisma.client_order_product_lines.findMany()
    * ```
    */
  get client_order_product_lines(): Prisma.client_order_product_linesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.client_order_thermal_printers`: Exposes CRUD operations for the **client_order_thermal_printers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Client_order_thermal_printers
    * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findMany()
    * ```
    */
  get client_order_thermal_printers(): Prisma.client_order_thermal_printersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.0
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    BusinessBankInformation: 'BusinessBankInformation',
    BusinessPaymentHistoryDetail: 'BusinessPaymentHistoryDetail',
    BusinessLicense: 'BusinessLicense',
    BusinessPayingCompany: 'BusinessPayingCompany',
    ClientOrder: 'ClientOrder',
    ClientOrderTicket: 'ClientOrderTicket',
    ClientOrderTransaction: 'ClientOrderTransaction',
    BusinessSupplierPicture: 'BusinessSupplierPicture',
    BusinessMenu: 'BusinessMenu',
    BusinessMenuCategory: 'BusinessMenuCategory',
    BusinessProduct: 'BusinessProduct',
    BusinessGeneralSalesReportAI: 'BusinessGeneralSalesReportAI',
    BusinessGeneralWarehouseReportAI: 'BusinessGeneralWarehouseReportAI',
    BusinessWarehouseReplenishmentReportAI: 'BusinessWarehouseReplenishmentReportAI',
    business_commercial_relationship_documents_attached: 'business_commercial_relationship_documents_attached',
    business_commercial_relationships: 'business_commercial_relationships',
    business_compliance: 'business_compliance',
    business_configurations: 'business_configurations',
    business_employees: 'business_employees',
    business_employees_clock_records: 'business_employees_clock_records',
    business_payment_history: 'business_payment_history',
    business_phone_ids: 'business_phone_ids',
    business_supplier_information: 'business_supplier_information',
    business_supporting_documents: 'business_supporting_documents',
    business_supporting_documents_attached: 'business_supporting_documents_attached',
    businesses: 'businesses',
    client_order_product_lines: 'client_order_product_lines',
    client_order_thermal_printers: 'client_order_thermal_printers'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "businessBankInformation" | "businessPaymentHistoryDetail" | "businessLicense" | "businessPayingCompany" | "clientOrder" | "clientOrderTicket" | "clientOrderTransaction" | "businessSupplierPicture" | "businessMenu" | "businessMenuCategory" | "businessProduct" | "businessGeneralSalesReportAI" | "businessGeneralWarehouseReportAI" | "businessWarehouseReplenishmentReportAI" | "business_commercial_relationship_documents_attached" | "business_commercial_relationships" | "business_compliance" | "business_configurations" | "business_employees" | "business_employees_clock_records" | "business_payment_history" | "business_phone_ids" | "business_supplier_information" | "business_supporting_documents" | "business_supporting_documents_attached" | "businesses" | "client_order_product_lines" | "client_order_thermal_printers"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      BusinessBankInformation: {
        payload: Prisma.$BusinessBankInformationPayload<ExtArgs>
        fields: Prisma.BusinessBankInformationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessBankInformationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessBankInformationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>
          }
          findFirst: {
            args: Prisma.BusinessBankInformationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessBankInformationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>
          }
          findMany: {
            args: Prisma.BusinessBankInformationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>[]
          }
          create: {
            args: Prisma.BusinessBankInformationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>
          }
          createMany: {
            args: Prisma.BusinessBankInformationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessBankInformationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>[]
          }
          delete: {
            args: Prisma.BusinessBankInformationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>
          }
          update: {
            args: Prisma.BusinessBankInformationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>
          }
          deleteMany: {
            args: Prisma.BusinessBankInformationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessBankInformationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessBankInformationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>[]
          }
          upsert: {
            args: Prisma.BusinessBankInformationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessBankInformationPayload>
          }
          aggregate: {
            args: Prisma.BusinessBankInformationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessBankInformation>
          }
          groupBy: {
            args: Prisma.BusinessBankInformationGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessBankInformationGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessBankInformationCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessBankInformationCountAggregateOutputType> | number
          }
        }
      }
      BusinessPaymentHistoryDetail: {
        payload: Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>
        fields: Prisma.BusinessPaymentHistoryDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessPaymentHistoryDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessPaymentHistoryDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>
          }
          findFirst: {
            args: Prisma.BusinessPaymentHistoryDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessPaymentHistoryDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>
          }
          findMany: {
            args: Prisma.BusinessPaymentHistoryDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>[]
          }
          create: {
            args: Prisma.BusinessPaymentHistoryDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>
          }
          createMany: {
            args: Prisma.BusinessPaymentHistoryDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessPaymentHistoryDetailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>[]
          }
          delete: {
            args: Prisma.BusinessPaymentHistoryDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>
          }
          update: {
            args: Prisma.BusinessPaymentHistoryDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>
          }
          deleteMany: {
            args: Prisma.BusinessPaymentHistoryDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessPaymentHistoryDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessPaymentHistoryDetailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>[]
          }
          upsert: {
            args: Prisma.BusinessPaymentHistoryDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPaymentHistoryDetailPayload>
          }
          aggregate: {
            args: Prisma.BusinessPaymentHistoryDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessPaymentHistoryDetail>
          }
          groupBy: {
            args: Prisma.BusinessPaymentHistoryDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessPaymentHistoryDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessPaymentHistoryDetailCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessPaymentHistoryDetailCountAggregateOutputType> | number
          }
        }
      }
      BusinessLicense: {
        payload: Prisma.$BusinessLicensePayload<ExtArgs>
        fields: Prisma.BusinessLicenseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessLicenseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessLicenseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>
          }
          findFirst: {
            args: Prisma.BusinessLicenseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessLicenseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>
          }
          findMany: {
            args: Prisma.BusinessLicenseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>[]
          }
          create: {
            args: Prisma.BusinessLicenseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>
          }
          createMany: {
            args: Prisma.BusinessLicenseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessLicenseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>[]
          }
          delete: {
            args: Prisma.BusinessLicenseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>
          }
          update: {
            args: Prisma.BusinessLicenseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>
          }
          deleteMany: {
            args: Prisma.BusinessLicenseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessLicenseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessLicenseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>[]
          }
          upsert: {
            args: Prisma.BusinessLicenseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessLicensePayload>
          }
          aggregate: {
            args: Prisma.BusinessLicenseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessLicense>
          }
          groupBy: {
            args: Prisma.BusinessLicenseGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessLicenseGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessLicenseCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessLicenseCountAggregateOutputType> | number
          }
        }
      }
      BusinessPayingCompany: {
        payload: Prisma.$BusinessPayingCompanyPayload<ExtArgs>
        fields: Prisma.BusinessPayingCompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessPayingCompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessPayingCompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>
          }
          findFirst: {
            args: Prisma.BusinessPayingCompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessPayingCompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>
          }
          findMany: {
            args: Prisma.BusinessPayingCompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>[]
          }
          create: {
            args: Prisma.BusinessPayingCompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>
          }
          createMany: {
            args: Prisma.BusinessPayingCompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessPayingCompanyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>[]
          }
          delete: {
            args: Prisma.BusinessPayingCompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>
          }
          update: {
            args: Prisma.BusinessPayingCompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>
          }
          deleteMany: {
            args: Prisma.BusinessPayingCompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessPayingCompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessPayingCompanyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>[]
          }
          upsert: {
            args: Prisma.BusinessPayingCompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayingCompanyPayload>
          }
          aggregate: {
            args: Prisma.BusinessPayingCompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessPayingCompany>
          }
          groupBy: {
            args: Prisma.BusinessPayingCompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessPayingCompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessPayingCompanyCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessPayingCompanyCountAggregateOutputType> | number
          }
        }
      }
      ClientOrder: {
        payload: Prisma.$ClientOrderPayload<ExtArgs>
        fields: Prisma.ClientOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>
          }
          findFirst: {
            args: Prisma.ClientOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>
          }
          findMany: {
            args: Prisma.ClientOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>[]
          }
          create: {
            args: Prisma.ClientOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>
          }
          createMany: {
            args: Prisma.ClientOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>[]
          }
          delete: {
            args: Prisma.ClientOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>
          }
          update: {
            args: Prisma.ClientOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>
          }
          deleteMany: {
            args: Prisma.ClientOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>[]
          }
          upsert: {
            args: Prisma.ClientOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderPayload>
          }
          aggregate: {
            args: Prisma.ClientOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientOrder>
          }
          groupBy: {
            args: Prisma.ClientOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientOrderCountArgs<ExtArgs>
            result: $Utils.Optional<ClientOrderCountAggregateOutputType> | number
          }
        }
      }
      ClientOrderTicket: {
        payload: Prisma.$ClientOrderTicketPayload<ExtArgs>
        fields: Prisma.ClientOrderTicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientOrderTicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientOrderTicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>
          }
          findFirst: {
            args: Prisma.ClientOrderTicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientOrderTicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>
          }
          findMany: {
            args: Prisma.ClientOrderTicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>[]
          }
          create: {
            args: Prisma.ClientOrderTicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>
          }
          createMany: {
            args: Prisma.ClientOrderTicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientOrderTicketCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>[]
          }
          delete: {
            args: Prisma.ClientOrderTicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>
          }
          update: {
            args: Prisma.ClientOrderTicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>
          }
          deleteMany: {
            args: Prisma.ClientOrderTicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientOrderTicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientOrderTicketUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>[]
          }
          upsert: {
            args: Prisma.ClientOrderTicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTicketPayload>
          }
          aggregate: {
            args: Prisma.ClientOrderTicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientOrderTicket>
          }
          groupBy: {
            args: Prisma.ClientOrderTicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientOrderTicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientOrderTicketCountArgs<ExtArgs>
            result: $Utils.Optional<ClientOrderTicketCountAggregateOutputType> | number
          }
        }
      }
      ClientOrderTransaction: {
        payload: Prisma.$ClientOrderTransactionPayload<ExtArgs>
        fields: Prisma.ClientOrderTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientOrderTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientOrderTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>
          }
          findFirst: {
            args: Prisma.ClientOrderTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientOrderTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>
          }
          findMany: {
            args: Prisma.ClientOrderTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>[]
          }
          create: {
            args: Prisma.ClientOrderTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>
          }
          createMany: {
            args: Prisma.ClientOrderTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientOrderTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>[]
          }
          delete: {
            args: Prisma.ClientOrderTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>
          }
          update: {
            args: Prisma.ClientOrderTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>
          }
          deleteMany: {
            args: Prisma.ClientOrderTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientOrderTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientOrderTransactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>[]
          }
          upsert: {
            args: Prisma.ClientOrderTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientOrderTransactionPayload>
          }
          aggregate: {
            args: Prisma.ClientOrderTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientOrderTransaction>
          }
          groupBy: {
            args: Prisma.ClientOrderTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientOrderTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientOrderTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<ClientOrderTransactionCountAggregateOutputType> | number
          }
        }
      }
      BusinessSupplierPicture: {
        payload: Prisma.$BusinessSupplierPicturePayload<ExtArgs>
        fields: Prisma.BusinessSupplierPictureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessSupplierPictureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessSupplierPictureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>
          }
          findFirst: {
            args: Prisma.BusinessSupplierPictureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessSupplierPictureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>
          }
          findMany: {
            args: Prisma.BusinessSupplierPictureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>[]
          }
          create: {
            args: Prisma.BusinessSupplierPictureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>
          }
          createMany: {
            args: Prisma.BusinessSupplierPictureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessSupplierPictureCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>[]
          }
          delete: {
            args: Prisma.BusinessSupplierPictureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>
          }
          update: {
            args: Prisma.BusinessSupplierPictureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>
          }
          deleteMany: {
            args: Prisma.BusinessSupplierPictureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessSupplierPictureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessSupplierPictureUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>[]
          }
          upsert: {
            args: Prisma.BusinessSupplierPictureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessSupplierPicturePayload>
          }
          aggregate: {
            args: Prisma.BusinessSupplierPictureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessSupplierPicture>
          }
          groupBy: {
            args: Prisma.BusinessSupplierPictureGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessSupplierPictureGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessSupplierPictureCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessSupplierPictureCountAggregateOutputType> | number
          }
        }
      }
      BusinessMenu: {
        payload: Prisma.$BusinessMenuPayload<ExtArgs>
        fields: Prisma.BusinessMenuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessMenuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessMenuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>
          }
          findFirst: {
            args: Prisma.BusinessMenuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessMenuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>
          }
          findMany: {
            args: Prisma.BusinessMenuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>[]
          }
          create: {
            args: Prisma.BusinessMenuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>
          }
          createMany: {
            args: Prisma.BusinessMenuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessMenuCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>[]
          }
          delete: {
            args: Prisma.BusinessMenuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>
          }
          update: {
            args: Prisma.BusinessMenuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>
          }
          deleteMany: {
            args: Prisma.BusinessMenuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessMenuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessMenuUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>[]
          }
          upsert: {
            args: Prisma.BusinessMenuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuPayload>
          }
          aggregate: {
            args: Prisma.BusinessMenuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessMenu>
          }
          groupBy: {
            args: Prisma.BusinessMenuGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessMenuGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessMenuCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessMenuCountAggregateOutputType> | number
          }
        }
      }
      BusinessMenuCategory: {
        payload: Prisma.$BusinessMenuCategoryPayload<ExtArgs>
        fields: Prisma.BusinessMenuCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessMenuCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessMenuCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>
          }
          findFirst: {
            args: Prisma.BusinessMenuCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessMenuCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>
          }
          findMany: {
            args: Prisma.BusinessMenuCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>[]
          }
          create: {
            args: Prisma.BusinessMenuCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>
          }
          createMany: {
            args: Prisma.BusinessMenuCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessMenuCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>[]
          }
          delete: {
            args: Prisma.BusinessMenuCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>
          }
          update: {
            args: Prisma.BusinessMenuCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>
          }
          deleteMany: {
            args: Prisma.BusinessMenuCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessMenuCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessMenuCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>[]
          }
          upsert: {
            args: Prisma.BusinessMenuCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessMenuCategoryPayload>
          }
          aggregate: {
            args: Prisma.BusinessMenuCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessMenuCategory>
          }
          groupBy: {
            args: Prisma.BusinessMenuCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessMenuCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessMenuCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessMenuCategoryCountAggregateOutputType> | number
          }
        }
      }
      BusinessProduct: {
        payload: Prisma.$BusinessProductPayload<ExtArgs>
        fields: Prisma.BusinessProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>
          }
          findFirst: {
            args: Prisma.BusinessProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>
          }
          findMany: {
            args: Prisma.BusinessProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>[]
          }
          create: {
            args: Prisma.BusinessProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>
          }
          createMany: {
            args: Prisma.BusinessProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>[]
          }
          delete: {
            args: Prisma.BusinessProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>
          }
          update: {
            args: Prisma.BusinessProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>
          }
          deleteMany: {
            args: Prisma.BusinessProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>[]
          }
          upsert: {
            args: Prisma.BusinessProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessProductPayload>
          }
          aggregate: {
            args: Prisma.BusinessProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessProduct>
          }
          groupBy: {
            args: Prisma.BusinessProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessProductCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessProductCountAggregateOutputType> | number
          }
        }
      }
      BusinessGeneralSalesReportAI: {
        payload: Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>
        fields: Prisma.BusinessGeneralSalesReportAIFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessGeneralSalesReportAIFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessGeneralSalesReportAIFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>
          }
          findFirst: {
            args: Prisma.BusinessGeneralSalesReportAIFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessGeneralSalesReportAIFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>
          }
          findMany: {
            args: Prisma.BusinessGeneralSalesReportAIFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>[]
          }
          create: {
            args: Prisma.BusinessGeneralSalesReportAICreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>
          }
          createMany: {
            args: Prisma.BusinessGeneralSalesReportAICreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessGeneralSalesReportAICreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>[]
          }
          delete: {
            args: Prisma.BusinessGeneralSalesReportAIDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>
          }
          update: {
            args: Prisma.BusinessGeneralSalesReportAIUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>
          }
          deleteMany: {
            args: Prisma.BusinessGeneralSalesReportAIDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessGeneralSalesReportAIUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessGeneralSalesReportAIUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>[]
          }
          upsert: {
            args: Prisma.BusinessGeneralSalesReportAIUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralSalesReportAIPayload>
          }
          aggregate: {
            args: Prisma.BusinessGeneralSalesReportAIAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessGeneralSalesReportAI>
          }
          groupBy: {
            args: Prisma.BusinessGeneralSalesReportAIGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessGeneralSalesReportAIGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessGeneralSalesReportAICountArgs<ExtArgs>
            result: $Utils.Optional<BusinessGeneralSalesReportAICountAggregateOutputType> | number
          }
        }
      }
      BusinessGeneralWarehouseReportAI: {
        payload: Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>
        fields: Prisma.BusinessGeneralWarehouseReportAIFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessGeneralWarehouseReportAIFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessGeneralWarehouseReportAIFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>
          }
          findFirst: {
            args: Prisma.BusinessGeneralWarehouseReportAIFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessGeneralWarehouseReportAIFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>
          }
          findMany: {
            args: Prisma.BusinessGeneralWarehouseReportAIFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>[]
          }
          create: {
            args: Prisma.BusinessGeneralWarehouseReportAICreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>
          }
          createMany: {
            args: Prisma.BusinessGeneralWarehouseReportAICreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessGeneralWarehouseReportAICreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>[]
          }
          delete: {
            args: Prisma.BusinessGeneralWarehouseReportAIDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>
          }
          update: {
            args: Prisma.BusinessGeneralWarehouseReportAIUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>
          }
          deleteMany: {
            args: Prisma.BusinessGeneralWarehouseReportAIDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessGeneralWarehouseReportAIUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessGeneralWarehouseReportAIUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>[]
          }
          upsert: {
            args: Prisma.BusinessGeneralWarehouseReportAIUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessGeneralWarehouseReportAIPayload>
          }
          aggregate: {
            args: Prisma.BusinessGeneralWarehouseReportAIAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessGeneralWarehouseReportAI>
          }
          groupBy: {
            args: Prisma.BusinessGeneralWarehouseReportAIGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessGeneralWarehouseReportAIGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessGeneralWarehouseReportAICountArgs<ExtArgs>
            result: $Utils.Optional<BusinessGeneralWarehouseReportAICountAggregateOutputType> | number
          }
        }
      }
      BusinessWarehouseReplenishmentReportAI: {
        payload: Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>
        fields: Prisma.BusinessWarehouseReplenishmentReportAIFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
          }
          findFirst: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
          }
          findMany: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>[]
          }
          create: {
            args: Prisma.BusinessWarehouseReplenishmentReportAICreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
          }
          createMany: {
            args: Prisma.BusinessWarehouseReplenishmentReportAICreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessWarehouseReplenishmentReportAICreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>[]
          }
          delete: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
          }
          update: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
          }
          deleteMany: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>[]
          }
          upsert: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload>
          }
          aggregate: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessWarehouseReplenishmentReportAI>
          }
          groupBy: {
            args: Prisma.BusinessWarehouseReplenishmentReportAIGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessWarehouseReplenishmentReportAIGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessWarehouseReplenishmentReportAICountArgs<ExtArgs>
            result: $Utils.Optional<BusinessWarehouseReplenishmentReportAICountAggregateOutputType> | number
          }
        }
      }
      business_commercial_relationship_documents_attached: {
        payload: Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>
        fields: Prisma.business_commercial_relationship_documents_attachedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_commercial_relationship_documents_attachedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_commercial_relationship_documents_attachedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>
          }
          findFirst: {
            args: Prisma.business_commercial_relationship_documents_attachedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_commercial_relationship_documents_attachedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>
          }
          findMany: {
            args: Prisma.business_commercial_relationship_documents_attachedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>[]
          }
          create: {
            args: Prisma.business_commercial_relationship_documents_attachedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>
          }
          createMany: {
            args: Prisma.business_commercial_relationship_documents_attachedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_commercial_relationship_documents_attachedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>[]
          }
          delete: {
            args: Prisma.business_commercial_relationship_documents_attachedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>
          }
          update: {
            args: Prisma.business_commercial_relationship_documents_attachedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>
          }
          deleteMany: {
            args: Prisma.business_commercial_relationship_documents_attachedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_commercial_relationship_documents_attachedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_commercial_relationship_documents_attachedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>[]
          }
          upsert: {
            args: Prisma.business_commercial_relationship_documents_attachedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationship_documents_attachedPayload>
          }
          aggregate: {
            args: Prisma.Business_commercial_relationship_documents_attachedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_commercial_relationship_documents_attached>
          }
          groupBy: {
            args: Prisma.business_commercial_relationship_documents_attachedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_commercial_relationship_documents_attachedGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_commercial_relationship_documents_attachedCountArgs<ExtArgs>
            result: $Utils.Optional<Business_commercial_relationship_documents_attachedCountAggregateOutputType> | number
          }
        }
      }
      business_commercial_relationships: {
        payload: Prisma.$business_commercial_relationshipsPayload<ExtArgs>
        fields: Prisma.business_commercial_relationshipsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_commercial_relationshipsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_commercial_relationshipsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>
          }
          findFirst: {
            args: Prisma.business_commercial_relationshipsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_commercial_relationshipsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>
          }
          findMany: {
            args: Prisma.business_commercial_relationshipsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>[]
          }
          create: {
            args: Prisma.business_commercial_relationshipsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>
          }
          createMany: {
            args: Prisma.business_commercial_relationshipsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_commercial_relationshipsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>[]
          }
          delete: {
            args: Prisma.business_commercial_relationshipsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>
          }
          update: {
            args: Prisma.business_commercial_relationshipsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>
          }
          deleteMany: {
            args: Prisma.business_commercial_relationshipsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_commercial_relationshipsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_commercial_relationshipsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>[]
          }
          upsert: {
            args: Prisma.business_commercial_relationshipsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_commercial_relationshipsPayload>
          }
          aggregate: {
            args: Prisma.Business_commercial_relationshipsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_commercial_relationships>
          }
          groupBy: {
            args: Prisma.business_commercial_relationshipsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_commercial_relationshipsGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_commercial_relationshipsCountArgs<ExtArgs>
            result: $Utils.Optional<Business_commercial_relationshipsCountAggregateOutputType> | number
          }
        }
      }
      business_compliance: {
        payload: Prisma.$business_compliancePayload<ExtArgs>
        fields: Prisma.business_complianceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_complianceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_complianceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>
          }
          findFirst: {
            args: Prisma.business_complianceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_complianceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>
          }
          findMany: {
            args: Prisma.business_complianceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>[]
          }
          create: {
            args: Prisma.business_complianceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>
          }
          createMany: {
            args: Prisma.business_complianceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_complianceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>[]
          }
          delete: {
            args: Prisma.business_complianceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>
          }
          update: {
            args: Prisma.business_complianceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>
          }
          deleteMany: {
            args: Prisma.business_complianceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_complianceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_complianceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>[]
          }
          upsert: {
            args: Prisma.business_complianceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_compliancePayload>
          }
          aggregate: {
            args: Prisma.Business_complianceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_compliance>
          }
          groupBy: {
            args: Prisma.business_complianceGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_complianceGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_complianceCountArgs<ExtArgs>
            result: $Utils.Optional<Business_complianceCountAggregateOutputType> | number
          }
        }
      }
      business_configurations: {
        payload: Prisma.$business_configurationsPayload<ExtArgs>
        fields: Prisma.business_configurationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_configurationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_configurationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>
          }
          findFirst: {
            args: Prisma.business_configurationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_configurationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>
          }
          findMany: {
            args: Prisma.business_configurationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>[]
          }
          create: {
            args: Prisma.business_configurationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>
          }
          createMany: {
            args: Prisma.business_configurationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_configurationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>[]
          }
          delete: {
            args: Prisma.business_configurationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>
          }
          update: {
            args: Prisma.business_configurationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>
          }
          deleteMany: {
            args: Prisma.business_configurationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_configurationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_configurationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>[]
          }
          upsert: {
            args: Prisma.business_configurationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_configurationsPayload>
          }
          aggregate: {
            args: Prisma.Business_configurationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_configurations>
          }
          groupBy: {
            args: Prisma.business_configurationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_configurationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_configurationsCountArgs<ExtArgs>
            result: $Utils.Optional<Business_configurationsCountAggregateOutputType> | number
          }
        }
      }
      business_employees: {
        payload: Prisma.$business_employeesPayload<ExtArgs>
        fields: Prisma.business_employeesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_employeesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_employeesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>
          }
          findFirst: {
            args: Prisma.business_employeesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_employeesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>
          }
          findMany: {
            args: Prisma.business_employeesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>[]
          }
          create: {
            args: Prisma.business_employeesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>
          }
          createMany: {
            args: Prisma.business_employeesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_employeesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>[]
          }
          delete: {
            args: Prisma.business_employeesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>
          }
          update: {
            args: Prisma.business_employeesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>
          }
          deleteMany: {
            args: Prisma.business_employeesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_employeesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_employeesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>[]
          }
          upsert: {
            args: Prisma.business_employeesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employeesPayload>
          }
          aggregate: {
            args: Prisma.Business_employeesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_employees>
          }
          groupBy: {
            args: Prisma.business_employeesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_employeesGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_employeesCountArgs<ExtArgs>
            result: $Utils.Optional<Business_employeesCountAggregateOutputType> | number
          }
        }
      }
      business_employees_clock_records: {
        payload: Prisma.$business_employees_clock_recordsPayload<ExtArgs>
        fields: Prisma.business_employees_clock_recordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_employees_clock_recordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_employees_clock_recordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>
          }
          findFirst: {
            args: Prisma.business_employees_clock_recordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_employees_clock_recordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>
          }
          findMany: {
            args: Prisma.business_employees_clock_recordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>[]
          }
          create: {
            args: Prisma.business_employees_clock_recordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>
          }
          createMany: {
            args: Prisma.business_employees_clock_recordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_employees_clock_recordsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>[]
          }
          delete: {
            args: Prisma.business_employees_clock_recordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>
          }
          update: {
            args: Prisma.business_employees_clock_recordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>
          }
          deleteMany: {
            args: Prisma.business_employees_clock_recordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_employees_clock_recordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_employees_clock_recordsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>[]
          }
          upsert: {
            args: Prisma.business_employees_clock_recordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_employees_clock_recordsPayload>
          }
          aggregate: {
            args: Prisma.Business_employees_clock_recordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_employees_clock_records>
          }
          groupBy: {
            args: Prisma.business_employees_clock_recordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_employees_clock_recordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_employees_clock_recordsCountArgs<ExtArgs>
            result: $Utils.Optional<Business_employees_clock_recordsCountAggregateOutputType> | number
          }
        }
      }
      business_payment_history: {
        payload: Prisma.$business_payment_historyPayload<ExtArgs>
        fields: Prisma.business_payment_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_payment_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_payment_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>
          }
          findFirst: {
            args: Prisma.business_payment_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_payment_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>
          }
          findMany: {
            args: Prisma.business_payment_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>[]
          }
          create: {
            args: Prisma.business_payment_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>
          }
          createMany: {
            args: Prisma.business_payment_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_payment_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>[]
          }
          delete: {
            args: Prisma.business_payment_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>
          }
          update: {
            args: Prisma.business_payment_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>
          }
          deleteMany: {
            args: Prisma.business_payment_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_payment_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_payment_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>[]
          }
          upsert: {
            args: Prisma.business_payment_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_payment_historyPayload>
          }
          aggregate: {
            args: Prisma.Business_payment_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_payment_history>
          }
          groupBy: {
            args: Prisma.business_payment_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_payment_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_payment_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Business_payment_historyCountAggregateOutputType> | number
          }
        }
      }
      business_phone_ids: {
        payload: Prisma.$business_phone_idsPayload<ExtArgs>
        fields: Prisma.business_phone_idsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_phone_idsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_phone_idsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>
          }
          findFirst: {
            args: Prisma.business_phone_idsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_phone_idsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>
          }
          findMany: {
            args: Prisma.business_phone_idsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>[]
          }
          create: {
            args: Prisma.business_phone_idsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>
          }
          createMany: {
            args: Prisma.business_phone_idsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_phone_idsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>[]
          }
          delete: {
            args: Prisma.business_phone_idsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>
          }
          update: {
            args: Prisma.business_phone_idsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>
          }
          deleteMany: {
            args: Prisma.business_phone_idsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_phone_idsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_phone_idsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>[]
          }
          upsert: {
            args: Prisma.business_phone_idsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_phone_idsPayload>
          }
          aggregate: {
            args: Prisma.Business_phone_idsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_phone_ids>
          }
          groupBy: {
            args: Prisma.business_phone_idsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_phone_idsGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_phone_idsCountArgs<ExtArgs>
            result: $Utils.Optional<Business_phone_idsCountAggregateOutputType> | number
          }
        }
      }
      business_supplier_information: {
        payload: Prisma.$business_supplier_informationPayload<ExtArgs>
        fields: Prisma.business_supplier_informationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_supplier_informationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_supplier_informationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>
          }
          findFirst: {
            args: Prisma.business_supplier_informationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_supplier_informationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>
          }
          findMany: {
            args: Prisma.business_supplier_informationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>[]
          }
          create: {
            args: Prisma.business_supplier_informationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>
          }
          createMany: {
            args: Prisma.business_supplier_informationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_supplier_informationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>[]
          }
          delete: {
            args: Prisma.business_supplier_informationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>
          }
          update: {
            args: Prisma.business_supplier_informationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>
          }
          deleteMany: {
            args: Prisma.business_supplier_informationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_supplier_informationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_supplier_informationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>[]
          }
          upsert: {
            args: Prisma.business_supplier_informationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supplier_informationPayload>
          }
          aggregate: {
            args: Prisma.Business_supplier_informationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_supplier_information>
          }
          groupBy: {
            args: Prisma.business_supplier_informationGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_supplier_informationGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_supplier_informationCountArgs<ExtArgs>
            result: $Utils.Optional<Business_supplier_informationCountAggregateOutputType> | number
          }
        }
      }
      business_supporting_documents: {
        payload: Prisma.$business_supporting_documentsPayload<ExtArgs>
        fields: Prisma.business_supporting_documentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_supporting_documentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_supporting_documentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>
          }
          findFirst: {
            args: Prisma.business_supporting_documentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_supporting_documentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>
          }
          findMany: {
            args: Prisma.business_supporting_documentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>[]
          }
          create: {
            args: Prisma.business_supporting_documentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>
          }
          createMany: {
            args: Prisma.business_supporting_documentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_supporting_documentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>[]
          }
          delete: {
            args: Prisma.business_supporting_documentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>
          }
          update: {
            args: Prisma.business_supporting_documentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>
          }
          deleteMany: {
            args: Prisma.business_supporting_documentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_supporting_documentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_supporting_documentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>[]
          }
          upsert: {
            args: Prisma.business_supporting_documentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documentsPayload>
          }
          aggregate: {
            args: Prisma.Business_supporting_documentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_supporting_documents>
          }
          groupBy: {
            args: Prisma.business_supporting_documentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_supporting_documentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_supporting_documentsCountArgs<ExtArgs>
            result: $Utils.Optional<Business_supporting_documentsCountAggregateOutputType> | number
          }
        }
      }
      business_supporting_documents_attached: {
        payload: Prisma.$business_supporting_documents_attachedPayload<ExtArgs>
        fields: Prisma.business_supporting_documents_attachedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.business_supporting_documents_attachedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.business_supporting_documents_attachedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>
          }
          findFirst: {
            args: Prisma.business_supporting_documents_attachedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.business_supporting_documents_attachedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>
          }
          findMany: {
            args: Prisma.business_supporting_documents_attachedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>[]
          }
          create: {
            args: Prisma.business_supporting_documents_attachedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>
          }
          createMany: {
            args: Prisma.business_supporting_documents_attachedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.business_supporting_documents_attachedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>[]
          }
          delete: {
            args: Prisma.business_supporting_documents_attachedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>
          }
          update: {
            args: Prisma.business_supporting_documents_attachedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>
          }
          deleteMany: {
            args: Prisma.business_supporting_documents_attachedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.business_supporting_documents_attachedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.business_supporting_documents_attachedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>[]
          }
          upsert: {
            args: Prisma.business_supporting_documents_attachedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$business_supporting_documents_attachedPayload>
          }
          aggregate: {
            args: Prisma.Business_supporting_documents_attachedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness_supporting_documents_attached>
          }
          groupBy: {
            args: Prisma.business_supporting_documents_attachedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Business_supporting_documents_attachedGroupByOutputType>[]
          }
          count: {
            args: Prisma.business_supporting_documents_attachedCountArgs<ExtArgs>
            result: $Utils.Optional<Business_supporting_documents_attachedCountAggregateOutputType> | number
          }
        }
      }
      businesses: {
        payload: Prisma.$businessesPayload<ExtArgs>
        fields: Prisma.businessesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.businessesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.businessesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>
          }
          findFirst: {
            args: Prisma.businessesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.businessesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>
          }
          findMany: {
            args: Prisma.businessesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>[]
          }
          create: {
            args: Prisma.businessesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>
          }
          createMany: {
            args: Prisma.businessesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.businessesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>[]
          }
          delete: {
            args: Prisma.businessesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>
          }
          update: {
            args: Prisma.businessesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>
          }
          deleteMany: {
            args: Prisma.businessesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.businessesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.businessesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>[]
          }
          upsert: {
            args: Prisma.businessesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$businessesPayload>
          }
          aggregate: {
            args: Prisma.BusinessesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinesses>
          }
          groupBy: {
            args: Prisma.businessesGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessesGroupByOutputType>[]
          }
          count: {
            args: Prisma.businessesCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessesCountAggregateOutputType> | number
          }
        }
      }
      client_order_product_lines: {
        payload: Prisma.$client_order_product_linesPayload<ExtArgs>
        fields: Prisma.client_order_product_linesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.client_order_product_linesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.client_order_product_linesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>
          }
          findFirst: {
            args: Prisma.client_order_product_linesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.client_order_product_linesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>
          }
          findMany: {
            args: Prisma.client_order_product_linesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>[]
          }
          create: {
            args: Prisma.client_order_product_linesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>
          }
          createMany: {
            args: Prisma.client_order_product_linesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.client_order_product_linesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>[]
          }
          delete: {
            args: Prisma.client_order_product_linesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>
          }
          update: {
            args: Prisma.client_order_product_linesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>
          }
          deleteMany: {
            args: Prisma.client_order_product_linesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.client_order_product_linesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.client_order_product_linesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>[]
          }
          upsert: {
            args: Prisma.client_order_product_linesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_product_linesPayload>
          }
          aggregate: {
            args: Prisma.Client_order_product_linesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient_order_product_lines>
          }
          groupBy: {
            args: Prisma.client_order_product_linesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Client_order_product_linesGroupByOutputType>[]
          }
          count: {
            args: Prisma.client_order_product_linesCountArgs<ExtArgs>
            result: $Utils.Optional<Client_order_product_linesCountAggregateOutputType> | number
          }
        }
      }
      client_order_thermal_printers: {
        payload: Prisma.$client_order_thermal_printersPayload<ExtArgs>
        fields: Prisma.client_order_thermal_printersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.client_order_thermal_printersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.client_order_thermal_printersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>
          }
          findFirst: {
            args: Prisma.client_order_thermal_printersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.client_order_thermal_printersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>
          }
          findMany: {
            args: Prisma.client_order_thermal_printersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>[]
          }
          create: {
            args: Prisma.client_order_thermal_printersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>
          }
          createMany: {
            args: Prisma.client_order_thermal_printersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.client_order_thermal_printersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>[]
          }
          delete: {
            args: Prisma.client_order_thermal_printersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>
          }
          update: {
            args: Prisma.client_order_thermal_printersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>
          }
          deleteMany: {
            args: Prisma.client_order_thermal_printersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.client_order_thermal_printersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.client_order_thermal_printersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>[]
          }
          upsert: {
            args: Prisma.client_order_thermal_printersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$client_order_thermal_printersPayload>
          }
          aggregate: {
            args: Prisma.Client_order_thermal_printersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient_order_thermal_printers>
          }
          groupBy: {
            args: Prisma.client_order_thermal_printersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Client_order_thermal_printersGroupByOutputType>[]
          }
          count: {
            args: Prisma.client_order_thermal_printersCountArgs<ExtArgs>
            result: $Utils.Optional<Client_order_thermal_printersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    businessBankInformation?: BusinessBankInformationOmit
    businessPaymentHistoryDetail?: BusinessPaymentHistoryDetailOmit
    businessLicense?: BusinessLicenseOmit
    businessPayingCompany?: BusinessPayingCompanyOmit
    clientOrder?: ClientOrderOmit
    clientOrderTicket?: ClientOrderTicketOmit
    clientOrderTransaction?: ClientOrderTransactionOmit
    businessSupplierPicture?: BusinessSupplierPictureOmit
    businessMenu?: BusinessMenuOmit
    businessMenuCategory?: BusinessMenuCategoryOmit
    businessProduct?: BusinessProductOmit
    businessGeneralSalesReportAI?: BusinessGeneralSalesReportAIOmit
    businessGeneralWarehouseReportAI?: BusinessGeneralWarehouseReportAIOmit
    businessWarehouseReplenishmentReportAI?: BusinessWarehouseReplenishmentReportAIOmit
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedOmit
    business_commercial_relationships?: business_commercial_relationshipsOmit
    business_compliance?: business_complianceOmit
    business_configurations?: business_configurationsOmit
    business_employees?: business_employeesOmit
    business_employees_clock_records?: business_employees_clock_recordsOmit
    business_payment_history?: business_payment_historyOmit
    business_phone_ids?: business_phone_idsOmit
    business_supplier_information?: business_supplier_informationOmit
    business_supporting_documents?: business_supporting_documentsOmit
    business_supporting_documents_attached?: business_supporting_documents_attachedOmit
    businesses?: businessesOmit
    client_order_product_lines?: client_order_product_linesOmit
    client_order_thermal_printers?: client_order_thermal_printersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BusinessPaymentHistoryDetailCountOutputType
   */

  export type BusinessPaymentHistoryDetailCountOutputType = {
    business_payment_history: number
  }

  export type BusinessPaymentHistoryDetailCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_payment_history?: boolean | BusinessPaymentHistoryDetailCountOutputTypeCountBusiness_payment_historyArgs
  }

  // Custom InputTypes
  /**
   * BusinessPaymentHistoryDetailCountOutputType without action
   */
  export type BusinessPaymentHistoryDetailCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetailCountOutputType
     */
    select?: BusinessPaymentHistoryDetailCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BusinessPaymentHistoryDetailCountOutputType without action
   */
  export type BusinessPaymentHistoryDetailCountOutputTypeCountBusiness_payment_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_payment_historyWhereInput
  }


  /**
   * Count Type ClientOrderCountOutputType
   */

  export type ClientOrderCountOutputType = {
    client_order_product_lines: number
    client_order_transactions: number
  }

  export type ClientOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client_order_product_lines?: boolean | ClientOrderCountOutputTypeCountClient_order_product_linesArgs
    client_order_transactions?: boolean | ClientOrderCountOutputTypeCountClient_order_transactionsArgs
  }

  // Custom InputTypes
  /**
   * ClientOrderCountOutputType without action
   */
  export type ClientOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderCountOutputType
     */
    select?: ClientOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientOrderCountOutputType without action
   */
  export type ClientOrderCountOutputTypeCountClient_order_product_linesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: client_order_product_linesWhereInput
  }

  /**
   * ClientOrderCountOutputType without action
   */
  export type ClientOrderCountOutputTypeCountClient_order_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderTransactionWhereInput
  }


  /**
   * Count Type BusinessMenuCountOutputType
   */

  export type BusinessMenuCountOutputType = {
    business_menu_categories: number
    business_products: number
  }

  export type BusinessMenuCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_menu_categories?: boolean | BusinessMenuCountOutputTypeCountBusiness_menu_categoriesArgs
    business_products?: boolean | BusinessMenuCountOutputTypeCountBusiness_productsArgs
  }

  // Custom InputTypes
  /**
   * BusinessMenuCountOutputType without action
   */
  export type BusinessMenuCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCountOutputType
     */
    select?: BusinessMenuCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BusinessMenuCountOutputType without action
   */
  export type BusinessMenuCountOutputTypeCountBusiness_menu_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessMenuCategoryWhereInput
  }

  /**
   * BusinessMenuCountOutputType without action
   */
  export type BusinessMenuCountOutputTypeCountBusiness_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessProductWhereInput
  }


  /**
   * Count Type Business_commercial_relationshipsCountOutputType
   */

  export type Business_commercial_relationshipsCountOutputType = {
    business_commercial_relationship_documents_attached: number
  }

  export type Business_commercial_relationshipsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_commercial_relationship_documents_attached?: boolean | Business_commercial_relationshipsCountOutputTypeCountBusiness_commercial_relationship_documents_attachedArgs
  }

  // Custom InputTypes
  /**
   * Business_commercial_relationshipsCountOutputType without action
   */
  export type Business_commercial_relationshipsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business_commercial_relationshipsCountOutputType
     */
    select?: Business_commercial_relationshipsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Business_commercial_relationshipsCountOutputType without action
   */
  export type Business_commercial_relationshipsCountOutputTypeCountBusiness_commercial_relationship_documents_attachedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_commercial_relationship_documents_attachedWhereInput
  }


  /**
   * Count Type Business_employeesCountOutputType
   */

  export type Business_employeesCountOutputType = {
    business_employees_clock_records: number
  }

  export type Business_employeesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_employees_clock_records?: boolean | Business_employeesCountOutputTypeCountBusiness_employees_clock_recordsArgs
  }

  // Custom InputTypes
  /**
   * Business_employeesCountOutputType without action
   */
  export type Business_employeesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business_employeesCountOutputType
     */
    select?: Business_employeesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Business_employeesCountOutputType without action
   */
  export type Business_employeesCountOutputTypeCountBusiness_employees_clock_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_employees_clock_recordsWhereInput
  }


  /**
   * Count Type Business_supplier_informationCountOutputType
   */

  export type Business_supplier_informationCountOutputType = {
    business_supplier_pictures: number
  }

  export type Business_supplier_informationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_supplier_pictures?: boolean | Business_supplier_informationCountOutputTypeCountBusiness_supplier_picturesArgs
  }

  // Custom InputTypes
  /**
   * Business_supplier_informationCountOutputType without action
   */
  export type Business_supplier_informationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business_supplier_informationCountOutputType
     */
    select?: Business_supplier_informationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Business_supplier_informationCountOutputType without action
   */
  export type Business_supplier_informationCountOutputTypeCountBusiness_supplier_picturesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessSupplierPictureWhereInput
  }


  /**
   * Count Type BusinessesCountOutputType
   */

  export type BusinessesCountOutputType = {
    business_employees: number
    business_employees_clock_records: number
    business_general_sales_reports_ai: number
    business_general_warehouse_reports_ai: number
    business_licenses: number
    business_menu_categories: number
    business_menus: number
    business_payment_history: number
    business_payment_history_details: number
    business_phone_ids: number
    business_products: number
    business_supplier_information: number
    business_supplier_pictures: number
    business_supporting_documents_attached: number
    business_warehouse_replenishment_reports_ai: number
    client_order_product_lines: number
    client_order_thermal_printers: number
    client_order_tickets: number
    client_order_transactions: number
    client_orders: number
  }

  export type BusinessesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_employees?: boolean | BusinessesCountOutputTypeCountBusiness_employeesArgs
    business_employees_clock_records?: boolean | BusinessesCountOutputTypeCountBusiness_employees_clock_recordsArgs
    business_general_sales_reports_ai?: boolean | BusinessesCountOutputTypeCountBusiness_general_sales_reports_aiArgs
    business_general_warehouse_reports_ai?: boolean | BusinessesCountOutputTypeCountBusiness_general_warehouse_reports_aiArgs
    business_licenses?: boolean | BusinessesCountOutputTypeCountBusiness_licensesArgs
    business_menu_categories?: boolean | BusinessesCountOutputTypeCountBusiness_menu_categoriesArgs
    business_menus?: boolean | BusinessesCountOutputTypeCountBusiness_menusArgs
    business_payment_history?: boolean | BusinessesCountOutputTypeCountBusiness_payment_historyArgs
    business_payment_history_details?: boolean | BusinessesCountOutputTypeCountBusiness_payment_history_detailsArgs
    business_phone_ids?: boolean | BusinessesCountOutputTypeCountBusiness_phone_idsArgs
    business_products?: boolean | BusinessesCountOutputTypeCountBusiness_productsArgs
    business_supplier_information?: boolean | BusinessesCountOutputTypeCountBusiness_supplier_informationArgs
    business_supplier_pictures?: boolean | BusinessesCountOutputTypeCountBusiness_supplier_picturesArgs
    business_supporting_documents_attached?: boolean | BusinessesCountOutputTypeCountBusiness_supporting_documents_attachedArgs
    business_warehouse_replenishment_reports_ai?: boolean | BusinessesCountOutputTypeCountBusiness_warehouse_replenishment_reports_aiArgs
    client_order_product_lines?: boolean | BusinessesCountOutputTypeCountClient_order_product_linesArgs
    client_order_thermal_printers?: boolean | BusinessesCountOutputTypeCountClient_order_thermal_printersArgs
    client_order_tickets?: boolean | BusinessesCountOutputTypeCountClient_order_ticketsArgs
    client_order_transactions?: boolean | BusinessesCountOutputTypeCountClient_order_transactionsArgs
    client_orders?: boolean | BusinessesCountOutputTypeCountClient_ordersArgs
  }

  // Custom InputTypes
  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessesCountOutputType
     */
    select?: BusinessesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_employeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_employeesWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_employees_clock_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_employees_clock_recordsWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_general_sales_reports_aiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessGeneralSalesReportAIWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_general_warehouse_reports_aiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessGeneralWarehouseReportAIWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_licensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessLicenseWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_menu_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessMenuCategoryWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_menusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessMenuWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_payment_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_payment_historyWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_payment_history_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessPaymentHistoryDetailWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_phone_idsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_phone_idsWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessProductWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_supplier_informationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_supplier_informationWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_supplier_picturesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessSupplierPictureWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_supporting_documents_attachedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_supporting_documents_attachedWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountBusiness_warehouse_replenishment_reports_aiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountClient_order_product_linesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: client_order_product_linesWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountClient_order_thermal_printersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: client_order_thermal_printersWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountClient_order_ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderTicketWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountClient_order_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderTransactionWhereInput
  }

  /**
   * BusinessesCountOutputType without action
   */
  export type BusinessesCountOutputTypeCountClient_ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderWhereInput
  }


  /**
   * Models
   */

  /**
   * Model BusinessBankInformation
   */

  export type AggregateBusinessBankInformation = {
    _count: BusinessBankInformationCountAggregateOutputType | null
    _min: BusinessBankInformationMinAggregateOutputType | null
    _max: BusinessBankInformationMaxAggregateOutputType | null
  }

  export type BusinessBankInformationMinAggregateOutputType = {
    id: string | null
    bankName: string | null
    ibanOrAccountNumber: string | null
    swiftBic: string | null
    accountHolderName: string | null
    bankAddress: string | null
    currency: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessBankInformationMaxAggregateOutputType = {
    id: string | null
    bankName: string | null
    ibanOrAccountNumber: string | null
    swiftBic: string | null
    accountHolderName: string | null
    bankAddress: string | null
    currency: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessBankInformationCountAggregateOutputType = {
    id: number
    bankName: number
    ibanOrAccountNumber: number
    swiftBic: number
    accountHolderName: number
    bankAddress: number
    currency: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessBankInformationMinAggregateInputType = {
    id?: true
    bankName?: true
    ibanOrAccountNumber?: true
    swiftBic?: true
    accountHolderName?: true
    bankAddress?: true
    currency?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessBankInformationMaxAggregateInputType = {
    id?: true
    bankName?: true
    ibanOrAccountNumber?: true
    swiftBic?: true
    accountHolderName?: true
    bankAddress?: true
    currency?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessBankInformationCountAggregateInputType = {
    id?: true
    bankName?: true
    ibanOrAccountNumber?: true
    swiftBic?: true
    accountHolderName?: true
    bankAddress?: true
    currency?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessBankInformationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessBankInformation to aggregate.
     */
    where?: BusinessBankInformationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessBankInformations to fetch.
     */
    orderBy?: BusinessBankInformationOrderByWithRelationInput | BusinessBankInformationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessBankInformationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessBankInformations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessBankInformations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessBankInformations
    **/
    _count?: true | BusinessBankInformationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessBankInformationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessBankInformationMaxAggregateInputType
  }

  export type GetBusinessBankInformationAggregateType<T extends BusinessBankInformationAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessBankInformation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessBankInformation[P]>
      : GetScalarType<T[P], AggregateBusinessBankInformation[P]>
  }




  export type BusinessBankInformationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessBankInformationWhereInput
    orderBy?: BusinessBankInformationOrderByWithAggregationInput | BusinessBankInformationOrderByWithAggregationInput[]
    by: BusinessBankInformationScalarFieldEnum[] | BusinessBankInformationScalarFieldEnum
    having?: BusinessBankInformationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessBankInformationCountAggregateInputType | true
    _min?: BusinessBankInformationMinAggregateInputType
    _max?: BusinessBankInformationMaxAggregateInputType
  }

  export type BusinessBankInformationGroupByOutputType = {
    id: string
    bankName: string
    ibanOrAccountNumber: string
    swiftBic: string | null
    accountHolderName: string
    bankAddress: string | null
    currency: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessBankInformationCountAggregateOutputType | null
    _min: BusinessBankInformationMinAggregateOutputType | null
    _max: BusinessBankInformationMaxAggregateOutputType | null
  }

  type GetBusinessBankInformationGroupByPayload<T extends BusinessBankInformationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessBankInformationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessBankInformationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessBankInformationGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessBankInformationGroupByOutputType[P]>
        }
      >
    >


  export type BusinessBankInformationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bankName?: boolean
    ibanOrAccountNumber?: boolean
    swiftBic?: boolean
    accountHolderName?: boolean
    bankAddress?: boolean
    currency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessBankInformation"]>

  export type BusinessBankInformationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bankName?: boolean
    ibanOrAccountNumber?: boolean
    swiftBic?: boolean
    accountHolderName?: boolean
    bankAddress?: boolean
    currency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessBankInformation"]>

  export type BusinessBankInformationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bankName?: boolean
    ibanOrAccountNumber?: boolean
    swiftBic?: boolean
    accountHolderName?: boolean
    bankAddress?: boolean
    currency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessBankInformation"]>

  export type BusinessBankInformationSelectScalar = {
    id?: boolean
    bankName?: boolean
    ibanOrAccountNumber?: boolean
    swiftBic?: boolean
    accountHolderName?: boolean
    bankAddress?: boolean
    currency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessBankInformationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bankName" | "ibanOrAccountNumber" | "swiftBic" | "accountHolderName" | "bankAddress" | "currency" | "createdAt" | "updatedAt", ExtArgs["result"]["businessBankInformation"]>
  export type BusinessBankInformationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessBankInformationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessBankInformationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessBankInformationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessBankInformation"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      bankName: string
      ibanOrAccountNumber: string
      swiftBic: string | null
      accountHolderName: string
      bankAddress: string | null
      currency: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessBankInformation"]>
    composites: {}
  }

  type BusinessBankInformationGetPayload<S extends boolean | null | undefined | BusinessBankInformationDefaultArgs> = $Result.GetResult<Prisma.$BusinessBankInformationPayload, S>

  type BusinessBankInformationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessBankInformationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessBankInformationCountAggregateInputType | true
    }

  export interface BusinessBankInformationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessBankInformation'], meta: { name: 'BusinessBankInformation' } }
    /**
     * Find zero or one BusinessBankInformation that matches the filter.
     * @param {BusinessBankInformationFindUniqueArgs} args - Arguments to find a BusinessBankInformation
     * @example
     * // Get one BusinessBankInformation
     * const businessBankInformation = await prisma.businessBankInformation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessBankInformationFindUniqueArgs>(args: SelectSubset<T, BusinessBankInformationFindUniqueArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessBankInformation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessBankInformationFindUniqueOrThrowArgs} args - Arguments to find a BusinessBankInformation
     * @example
     * // Get one BusinessBankInformation
     * const businessBankInformation = await prisma.businessBankInformation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessBankInformationFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessBankInformationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessBankInformation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationFindFirstArgs} args - Arguments to find a BusinessBankInformation
     * @example
     * // Get one BusinessBankInformation
     * const businessBankInformation = await prisma.businessBankInformation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessBankInformationFindFirstArgs>(args?: SelectSubset<T, BusinessBankInformationFindFirstArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessBankInformation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationFindFirstOrThrowArgs} args - Arguments to find a BusinessBankInformation
     * @example
     * // Get one BusinessBankInformation
     * const businessBankInformation = await prisma.businessBankInformation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessBankInformationFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessBankInformationFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessBankInformations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessBankInformations
     * const businessBankInformations = await prisma.businessBankInformation.findMany()
     * 
     * // Get first 10 BusinessBankInformations
     * const businessBankInformations = await prisma.businessBankInformation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessBankInformationWithIdOnly = await prisma.businessBankInformation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessBankInformationFindManyArgs>(args?: SelectSubset<T, BusinessBankInformationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessBankInformation.
     * @param {BusinessBankInformationCreateArgs} args - Arguments to create a BusinessBankInformation.
     * @example
     * // Create one BusinessBankInformation
     * const BusinessBankInformation = await prisma.businessBankInformation.create({
     *   data: {
     *     // ... data to create a BusinessBankInformation
     *   }
     * })
     * 
     */
    create<T extends BusinessBankInformationCreateArgs>(args: SelectSubset<T, BusinessBankInformationCreateArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessBankInformations.
     * @param {BusinessBankInformationCreateManyArgs} args - Arguments to create many BusinessBankInformations.
     * @example
     * // Create many BusinessBankInformations
     * const businessBankInformation = await prisma.businessBankInformation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessBankInformationCreateManyArgs>(args?: SelectSubset<T, BusinessBankInformationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessBankInformations and returns the data saved in the database.
     * @param {BusinessBankInformationCreateManyAndReturnArgs} args - Arguments to create many BusinessBankInformations.
     * @example
     * // Create many BusinessBankInformations
     * const businessBankInformation = await prisma.businessBankInformation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessBankInformations and only return the `id`
     * const businessBankInformationWithIdOnly = await prisma.businessBankInformation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessBankInformationCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessBankInformationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessBankInformation.
     * @param {BusinessBankInformationDeleteArgs} args - Arguments to delete one BusinessBankInformation.
     * @example
     * // Delete one BusinessBankInformation
     * const BusinessBankInformation = await prisma.businessBankInformation.delete({
     *   where: {
     *     // ... filter to delete one BusinessBankInformation
     *   }
     * })
     * 
     */
    delete<T extends BusinessBankInformationDeleteArgs>(args: SelectSubset<T, BusinessBankInformationDeleteArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessBankInformation.
     * @param {BusinessBankInformationUpdateArgs} args - Arguments to update one BusinessBankInformation.
     * @example
     * // Update one BusinessBankInformation
     * const businessBankInformation = await prisma.businessBankInformation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessBankInformationUpdateArgs>(args: SelectSubset<T, BusinessBankInformationUpdateArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessBankInformations.
     * @param {BusinessBankInformationDeleteManyArgs} args - Arguments to filter BusinessBankInformations to delete.
     * @example
     * // Delete a few BusinessBankInformations
     * const { count } = await prisma.businessBankInformation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessBankInformationDeleteManyArgs>(args?: SelectSubset<T, BusinessBankInformationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessBankInformations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessBankInformations
     * const businessBankInformation = await prisma.businessBankInformation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessBankInformationUpdateManyArgs>(args: SelectSubset<T, BusinessBankInformationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessBankInformations and returns the data updated in the database.
     * @param {BusinessBankInformationUpdateManyAndReturnArgs} args - Arguments to update many BusinessBankInformations.
     * @example
     * // Update many BusinessBankInformations
     * const businessBankInformation = await prisma.businessBankInformation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessBankInformations and only return the `id`
     * const businessBankInformationWithIdOnly = await prisma.businessBankInformation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessBankInformationUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessBankInformationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessBankInformation.
     * @param {BusinessBankInformationUpsertArgs} args - Arguments to update or create a BusinessBankInformation.
     * @example
     * // Update or create a BusinessBankInformation
     * const businessBankInformation = await prisma.businessBankInformation.upsert({
     *   create: {
     *     // ... data to create a BusinessBankInformation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessBankInformation we want to update
     *   }
     * })
     */
    upsert<T extends BusinessBankInformationUpsertArgs>(args: SelectSubset<T, BusinessBankInformationUpsertArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessBankInformations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationCountArgs} args - Arguments to filter BusinessBankInformations to count.
     * @example
     * // Count the number of BusinessBankInformations
     * const count = await prisma.businessBankInformation.count({
     *   where: {
     *     // ... the filter for the BusinessBankInformations we want to count
     *   }
     * })
    **/
    count<T extends BusinessBankInformationCountArgs>(
      args?: Subset<T, BusinessBankInformationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessBankInformationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessBankInformation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessBankInformationAggregateArgs>(args: Subset<T, BusinessBankInformationAggregateArgs>): Prisma.PrismaPromise<GetBusinessBankInformationAggregateType<T>>

    /**
     * Group by BusinessBankInformation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessBankInformationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessBankInformationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessBankInformationGroupByArgs['orderBy'] }
        : { orderBy?: BusinessBankInformationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessBankInformationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessBankInformationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessBankInformation model
   */
  readonly fields: BusinessBankInformationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessBankInformation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessBankInformationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessBankInformation model
   */
  interface BusinessBankInformationFieldRefs {
    readonly id: FieldRef<"BusinessBankInformation", 'String'>
    readonly bankName: FieldRef<"BusinessBankInformation", 'String'>
    readonly ibanOrAccountNumber: FieldRef<"BusinessBankInformation", 'String'>
    readonly swiftBic: FieldRef<"BusinessBankInformation", 'String'>
    readonly accountHolderName: FieldRef<"BusinessBankInformation", 'String'>
    readonly bankAddress: FieldRef<"BusinessBankInformation", 'String'>
    readonly currency: FieldRef<"BusinessBankInformation", 'String'>
    readonly createdAt: FieldRef<"BusinessBankInformation", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessBankInformation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessBankInformation findUnique
   */
  export type BusinessBankInformationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * Filter, which BusinessBankInformation to fetch.
     */
    where: BusinessBankInformationWhereUniqueInput
  }

  /**
   * BusinessBankInformation findUniqueOrThrow
   */
  export type BusinessBankInformationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * Filter, which BusinessBankInformation to fetch.
     */
    where: BusinessBankInformationWhereUniqueInput
  }

  /**
   * BusinessBankInformation findFirst
   */
  export type BusinessBankInformationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * Filter, which BusinessBankInformation to fetch.
     */
    where?: BusinessBankInformationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessBankInformations to fetch.
     */
    orderBy?: BusinessBankInformationOrderByWithRelationInput | BusinessBankInformationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessBankInformations.
     */
    cursor?: BusinessBankInformationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessBankInformations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessBankInformations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessBankInformations.
     */
    distinct?: BusinessBankInformationScalarFieldEnum | BusinessBankInformationScalarFieldEnum[]
  }

  /**
   * BusinessBankInformation findFirstOrThrow
   */
  export type BusinessBankInformationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * Filter, which BusinessBankInformation to fetch.
     */
    where?: BusinessBankInformationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessBankInformations to fetch.
     */
    orderBy?: BusinessBankInformationOrderByWithRelationInput | BusinessBankInformationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessBankInformations.
     */
    cursor?: BusinessBankInformationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessBankInformations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessBankInformations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessBankInformations.
     */
    distinct?: BusinessBankInformationScalarFieldEnum | BusinessBankInformationScalarFieldEnum[]
  }

  /**
   * BusinessBankInformation findMany
   */
  export type BusinessBankInformationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * Filter, which BusinessBankInformations to fetch.
     */
    where?: BusinessBankInformationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessBankInformations to fetch.
     */
    orderBy?: BusinessBankInformationOrderByWithRelationInput | BusinessBankInformationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessBankInformations.
     */
    cursor?: BusinessBankInformationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessBankInformations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessBankInformations.
     */
    skip?: number
    distinct?: BusinessBankInformationScalarFieldEnum | BusinessBankInformationScalarFieldEnum[]
  }

  /**
   * BusinessBankInformation create
   */
  export type BusinessBankInformationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessBankInformation.
     */
    data: XOR<BusinessBankInformationCreateInput, BusinessBankInformationUncheckedCreateInput>
  }

  /**
   * BusinessBankInformation createMany
   */
  export type BusinessBankInformationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessBankInformations.
     */
    data: BusinessBankInformationCreateManyInput | BusinessBankInformationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessBankInformation createManyAndReturn
   */
  export type BusinessBankInformationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessBankInformations.
     */
    data: BusinessBankInformationCreateManyInput | BusinessBankInformationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessBankInformation update
   */
  export type BusinessBankInformationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessBankInformation.
     */
    data: XOR<BusinessBankInformationUpdateInput, BusinessBankInformationUncheckedUpdateInput>
    /**
     * Choose, which BusinessBankInformation to update.
     */
    where: BusinessBankInformationWhereUniqueInput
  }

  /**
   * BusinessBankInformation updateMany
   */
  export type BusinessBankInformationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessBankInformations.
     */
    data: XOR<BusinessBankInformationUpdateManyMutationInput, BusinessBankInformationUncheckedUpdateManyInput>
    /**
     * Filter which BusinessBankInformations to update
     */
    where?: BusinessBankInformationWhereInput
    /**
     * Limit how many BusinessBankInformations to update.
     */
    limit?: number
  }

  /**
   * BusinessBankInformation updateManyAndReturn
   */
  export type BusinessBankInformationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * The data used to update BusinessBankInformations.
     */
    data: XOR<BusinessBankInformationUpdateManyMutationInput, BusinessBankInformationUncheckedUpdateManyInput>
    /**
     * Filter which BusinessBankInformations to update
     */
    where?: BusinessBankInformationWhereInput
    /**
     * Limit how many BusinessBankInformations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessBankInformation upsert
   */
  export type BusinessBankInformationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessBankInformation to update in case it exists.
     */
    where: BusinessBankInformationWhereUniqueInput
    /**
     * In case the BusinessBankInformation found by the `where` argument doesn't exist, create a new BusinessBankInformation with this data.
     */
    create: XOR<BusinessBankInformationCreateInput, BusinessBankInformationUncheckedCreateInput>
    /**
     * In case the BusinessBankInformation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessBankInformationUpdateInput, BusinessBankInformationUncheckedUpdateInput>
  }

  /**
   * BusinessBankInformation delete
   */
  export type BusinessBankInformationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    /**
     * Filter which BusinessBankInformation to delete.
     */
    where: BusinessBankInformationWhereUniqueInput
  }

  /**
   * BusinessBankInformation deleteMany
   */
  export type BusinessBankInformationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessBankInformations to delete
     */
    where?: BusinessBankInformationWhereInput
    /**
     * Limit how many BusinessBankInformations to delete.
     */
    limit?: number
  }

  /**
   * BusinessBankInformation without action
   */
  export type BusinessBankInformationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
  }


  /**
   * Model BusinessPaymentHistoryDetail
   */

  export type AggregateBusinessPaymentHistoryDetail = {
    _count: BusinessPaymentHistoryDetailCountAggregateOutputType | null
    _avg: BusinessPaymentHistoryDetailAvgAggregateOutputType | null
    _sum: BusinessPaymentHistoryDetailSumAggregateOutputType | null
    _min: BusinessPaymentHistoryDetailMinAggregateOutputType | null
    _max: BusinessPaymentHistoryDetailMaxAggregateOutputType | null
  }

  export type BusinessPaymentHistoryDetailAvgAggregateOutputType = {
    amount: number | null
  }

  export type BusinessPaymentHistoryDetailSumAggregateOutputType = {
    amount: number | null
  }

  export type BusinessPaymentHistoryDetailMinAggregateOutputType = {
    id: string | null
    description: string | null
    amount: number | null
    currency: string | null
    taxesIncluded: boolean | null
    periodStart: Date | null
    periodEnd: Date | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessPaymentHistoryDetailMaxAggregateOutputType = {
    id: string | null
    description: string | null
    amount: number | null
    currency: string | null
    taxesIncluded: boolean | null
    periodStart: Date | null
    periodEnd: Date | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessPaymentHistoryDetailCountAggregateOutputType = {
    id: number
    description: number
    amount: number
    currency: number
    taxesIncluded: number
    periodStart: number
    periodEnd: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessPaymentHistoryDetailAvgAggregateInputType = {
    amount?: true
  }

  export type BusinessPaymentHistoryDetailSumAggregateInputType = {
    amount?: true
  }

  export type BusinessPaymentHistoryDetailMinAggregateInputType = {
    id?: true
    description?: true
    amount?: true
    currency?: true
    taxesIncluded?: true
    periodStart?: true
    periodEnd?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessPaymentHistoryDetailMaxAggregateInputType = {
    id?: true
    description?: true
    amount?: true
    currency?: true
    taxesIncluded?: true
    periodStart?: true
    periodEnd?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessPaymentHistoryDetailCountAggregateInputType = {
    id?: true
    description?: true
    amount?: true
    currency?: true
    taxesIncluded?: true
    periodStart?: true
    periodEnd?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessPaymentHistoryDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessPaymentHistoryDetail to aggregate.
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPaymentHistoryDetails to fetch.
     */
    orderBy?: BusinessPaymentHistoryDetailOrderByWithRelationInput | BusinessPaymentHistoryDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessPaymentHistoryDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPaymentHistoryDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPaymentHistoryDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessPaymentHistoryDetails
    **/
    _count?: true | BusinessPaymentHistoryDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BusinessPaymentHistoryDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BusinessPaymentHistoryDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessPaymentHistoryDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessPaymentHistoryDetailMaxAggregateInputType
  }

  export type GetBusinessPaymentHistoryDetailAggregateType<T extends BusinessPaymentHistoryDetailAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessPaymentHistoryDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessPaymentHistoryDetail[P]>
      : GetScalarType<T[P], AggregateBusinessPaymentHistoryDetail[P]>
  }




  export type BusinessPaymentHistoryDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessPaymentHistoryDetailWhereInput
    orderBy?: BusinessPaymentHistoryDetailOrderByWithAggregationInput | BusinessPaymentHistoryDetailOrderByWithAggregationInput[]
    by: BusinessPaymentHistoryDetailScalarFieldEnum[] | BusinessPaymentHistoryDetailScalarFieldEnum
    having?: BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessPaymentHistoryDetailCountAggregateInputType | true
    _avg?: BusinessPaymentHistoryDetailAvgAggregateInputType
    _sum?: BusinessPaymentHistoryDetailSumAggregateInputType
    _min?: BusinessPaymentHistoryDetailMinAggregateInputType
    _max?: BusinessPaymentHistoryDetailMaxAggregateInputType
  }

  export type BusinessPaymentHistoryDetailGroupByOutputType = {
    id: string
    description: string
    amount: number
    currency: string
    taxesIncluded: boolean | null
    periodStart: Date | null
    periodEnd: Date | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessPaymentHistoryDetailCountAggregateOutputType | null
    _avg: BusinessPaymentHistoryDetailAvgAggregateOutputType | null
    _sum: BusinessPaymentHistoryDetailSumAggregateOutputType | null
    _min: BusinessPaymentHistoryDetailMinAggregateOutputType | null
    _max: BusinessPaymentHistoryDetailMaxAggregateOutputType | null
  }

  type GetBusinessPaymentHistoryDetailGroupByPayload<T extends BusinessPaymentHistoryDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessPaymentHistoryDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessPaymentHistoryDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessPaymentHistoryDetailGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessPaymentHistoryDetailGroupByOutputType[P]>
        }
      >
    >


  export type BusinessPaymentHistoryDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    amount?: boolean
    currency?: boolean
    taxesIncluded?: boolean
    periodStart?: boolean
    periodEnd?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_payment_history?: boolean | BusinessPaymentHistoryDetail$business_payment_historyArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    _count?: boolean | BusinessPaymentHistoryDetailCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPaymentHistoryDetail"]>

  export type BusinessPaymentHistoryDetailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    amount?: boolean
    currency?: boolean
    taxesIncluded?: boolean
    periodStart?: boolean
    periodEnd?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPaymentHistoryDetail"]>

  export type BusinessPaymentHistoryDetailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    amount?: boolean
    currency?: boolean
    taxesIncluded?: boolean
    periodStart?: boolean
    periodEnd?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPaymentHistoryDetail"]>

  export type BusinessPaymentHistoryDetailSelectScalar = {
    id?: boolean
    description?: boolean
    amount?: boolean
    currency?: boolean
    taxesIncluded?: boolean
    periodStart?: boolean
    periodEnd?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessPaymentHistoryDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "description" | "amount" | "currency" | "taxesIncluded" | "periodStart" | "periodEnd" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessPaymentHistoryDetail"]>
  export type BusinessPaymentHistoryDetailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_payment_history?: boolean | BusinessPaymentHistoryDetail$business_payment_historyArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    _count?: boolean | BusinessPaymentHistoryDetailCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BusinessPaymentHistoryDetailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessPaymentHistoryDetailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessPaymentHistoryDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessPaymentHistoryDetail"
    objects: {
      business_payment_history: Prisma.$business_payment_historyPayload<ExtArgs>[]
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      description: string
      amount: number
      currency: string
      taxesIncluded: boolean | null
      periodStart: Date | null
      periodEnd: Date | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessPaymentHistoryDetail"]>
    composites: {}
  }

  type BusinessPaymentHistoryDetailGetPayload<S extends boolean | null | undefined | BusinessPaymentHistoryDetailDefaultArgs> = $Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload, S>

  type BusinessPaymentHistoryDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessPaymentHistoryDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessPaymentHistoryDetailCountAggregateInputType | true
    }

  export interface BusinessPaymentHistoryDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessPaymentHistoryDetail'], meta: { name: 'BusinessPaymentHistoryDetail' } }
    /**
     * Find zero or one BusinessPaymentHistoryDetail that matches the filter.
     * @param {BusinessPaymentHistoryDetailFindUniqueArgs} args - Arguments to find a BusinessPaymentHistoryDetail
     * @example
     * // Get one BusinessPaymentHistoryDetail
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessPaymentHistoryDetailFindUniqueArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailFindUniqueArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessPaymentHistoryDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessPaymentHistoryDetailFindUniqueOrThrowArgs} args - Arguments to find a BusinessPaymentHistoryDetail
     * @example
     * // Get one BusinessPaymentHistoryDetail
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessPaymentHistoryDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessPaymentHistoryDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailFindFirstArgs} args - Arguments to find a BusinessPaymentHistoryDetail
     * @example
     * // Get one BusinessPaymentHistoryDetail
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessPaymentHistoryDetailFindFirstArgs>(args?: SelectSubset<T, BusinessPaymentHistoryDetailFindFirstArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessPaymentHistoryDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailFindFirstOrThrowArgs} args - Arguments to find a BusinessPaymentHistoryDetail
     * @example
     * // Get one BusinessPaymentHistoryDetail
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessPaymentHistoryDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessPaymentHistoryDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessPaymentHistoryDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessPaymentHistoryDetails
     * const businessPaymentHistoryDetails = await prisma.businessPaymentHistoryDetail.findMany()
     * 
     * // Get first 10 BusinessPaymentHistoryDetails
     * const businessPaymentHistoryDetails = await prisma.businessPaymentHistoryDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessPaymentHistoryDetailWithIdOnly = await prisma.businessPaymentHistoryDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessPaymentHistoryDetailFindManyArgs>(args?: SelectSubset<T, BusinessPaymentHistoryDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessPaymentHistoryDetail.
     * @param {BusinessPaymentHistoryDetailCreateArgs} args - Arguments to create a BusinessPaymentHistoryDetail.
     * @example
     * // Create one BusinessPaymentHistoryDetail
     * const BusinessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.create({
     *   data: {
     *     // ... data to create a BusinessPaymentHistoryDetail
     *   }
     * })
     * 
     */
    create<T extends BusinessPaymentHistoryDetailCreateArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailCreateArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessPaymentHistoryDetails.
     * @param {BusinessPaymentHistoryDetailCreateManyArgs} args - Arguments to create many BusinessPaymentHistoryDetails.
     * @example
     * // Create many BusinessPaymentHistoryDetails
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessPaymentHistoryDetailCreateManyArgs>(args?: SelectSubset<T, BusinessPaymentHistoryDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessPaymentHistoryDetails and returns the data saved in the database.
     * @param {BusinessPaymentHistoryDetailCreateManyAndReturnArgs} args - Arguments to create many BusinessPaymentHistoryDetails.
     * @example
     * // Create many BusinessPaymentHistoryDetails
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessPaymentHistoryDetails and only return the `id`
     * const businessPaymentHistoryDetailWithIdOnly = await prisma.businessPaymentHistoryDetail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessPaymentHistoryDetailCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessPaymentHistoryDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessPaymentHistoryDetail.
     * @param {BusinessPaymentHistoryDetailDeleteArgs} args - Arguments to delete one BusinessPaymentHistoryDetail.
     * @example
     * // Delete one BusinessPaymentHistoryDetail
     * const BusinessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.delete({
     *   where: {
     *     // ... filter to delete one BusinessPaymentHistoryDetail
     *   }
     * })
     * 
     */
    delete<T extends BusinessPaymentHistoryDetailDeleteArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailDeleteArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessPaymentHistoryDetail.
     * @param {BusinessPaymentHistoryDetailUpdateArgs} args - Arguments to update one BusinessPaymentHistoryDetail.
     * @example
     * // Update one BusinessPaymentHistoryDetail
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessPaymentHistoryDetailUpdateArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailUpdateArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessPaymentHistoryDetails.
     * @param {BusinessPaymentHistoryDetailDeleteManyArgs} args - Arguments to filter BusinessPaymentHistoryDetails to delete.
     * @example
     * // Delete a few BusinessPaymentHistoryDetails
     * const { count } = await prisma.businessPaymentHistoryDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessPaymentHistoryDetailDeleteManyArgs>(args?: SelectSubset<T, BusinessPaymentHistoryDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessPaymentHistoryDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessPaymentHistoryDetails
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessPaymentHistoryDetailUpdateManyArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessPaymentHistoryDetails and returns the data updated in the database.
     * @param {BusinessPaymentHistoryDetailUpdateManyAndReturnArgs} args - Arguments to update many BusinessPaymentHistoryDetails.
     * @example
     * // Update many BusinessPaymentHistoryDetails
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessPaymentHistoryDetails and only return the `id`
     * const businessPaymentHistoryDetailWithIdOnly = await prisma.businessPaymentHistoryDetail.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessPaymentHistoryDetailUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessPaymentHistoryDetail.
     * @param {BusinessPaymentHistoryDetailUpsertArgs} args - Arguments to update or create a BusinessPaymentHistoryDetail.
     * @example
     * // Update or create a BusinessPaymentHistoryDetail
     * const businessPaymentHistoryDetail = await prisma.businessPaymentHistoryDetail.upsert({
     *   create: {
     *     // ... data to create a BusinessPaymentHistoryDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessPaymentHistoryDetail we want to update
     *   }
     * })
     */
    upsert<T extends BusinessPaymentHistoryDetailUpsertArgs>(args: SelectSubset<T, BusinessPaymentHistoryDetailUpsertArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessPaymentHistoryDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailCountArgs} args - Arguments to filter BusinessPaymentHistoryDetails to count.
     * @example
     * // Count the number of BusinessPaymentHistoryDetails
     * const count = await prisma.businessPaymentHistoryDetail.count({
     *   where: {
     *     // ... the filter for the BusinessPaymentHistoryDetails we want to count
     *   }
     * })
    **/
    count<T extends BusinessPaymentHistoryDetailCountArgs>(
      args?: Subset<T, BusinessPaymentHistoryDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessPaymentHistoryDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessPaymentHistoryDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessPaymentHistoryDetailAggregateArgs>(args: Subset<T, BusinessPaymentHistoryDetailAggregateArgs>): Prisma.PrismaPromise<GetBusinessPaymentHistoryDetailAggregateType<T>>

    /**
     * Group by BusinessPaymentHistoryDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPaymentHistoryDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessPaymentHistoryDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessPaymentHistoryDetailGroupByArgs['orderBy'] }
        : { orderBy?: BusinessPaymentHistoryDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessPaymentHistoryDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessPaymentHistoryDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessPaymentHistoryDetail model
   */
  readonly fields: BusinessPaymentHistoryDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessPaymentHistoryDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessPaymentHistoryDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    business_payment_history<T extends BusinessPaymentHistoryDetail$business_payment_historyArgs<ExtArgs> = {}>(args?: Subset<T, BusinessPaymentHistoryDetail$business_payment_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessPaymentHistoryDetail model
   */
  interface BusinessPaymentHistoryDetailFieldRefs {
    readonly id: FieldRef<"BusinessPaymentHistoryDetail", 'String'>
    readonly description: FieldRef<"BusinessPaymentHistoryDetail", 'String'>
    readonly amount: FieldRef<"BusinessPaymentHistoryDetail", 'Float'>
    readonly currency: FieldRef<"BusinessPaymentHistoryDetail", 'String'>
    readonly taxesIncluded: FieldRef<"BusinessPaymentHistoryDetail", 'Boolean'>
    readonly periodStart: FieldRef<"BusinessPaymentHistoryDetail", 'DateTime'>
    readonly periodEnd: FieldRef<"BusinessPaymentHistoryDetail", 'DateTime'>
    readonly businessId: FieldRef<"BusinessPaymentHistoryDetail", 'String'>
    readonly createdAt: FieldRef<"BusinessPaymentHistoryDetail", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessPaymentHistoryDetail", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessPaymentHistoryDetail findUnique
   */
  export type BusinessPaymentHistoryDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPaymentHistoryDetail to fetch.
     */
    where: BusinessPaymentHistoryDetailWhereUniqueInput
  }

  /**
   * BusinessPaymentHistoryDetail findUniqueOrThrow
   */
  export type BusinessPaymentHistoryDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPaymentHistoryDetail to fetch.
     */
    where: BusinessPaymentHistoryDetailWhereUniqueInput
  }

  /**
   * BusinessPaymentHistoryDetail findFirst
   */
  export type BusinessPaymentHistoryDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPaymentHistoryDetail to fetch.
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPaymentHistoryDetails to fetch.
     */
    orderBy?: BusinessPaymentHistoryDetailOrderByWithRelationInput | BusinessPaymentHistoryDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessPaymentHistoryDetails.
     */
    cursor?: BusinessPaymentHistoryDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPaymentHistoryDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPaymentHistoryDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessPaymentHistoryDetails.
     */
    distinct?: BusinessPaymentHistoryDetailScalarFieldEnum | BusinessPaymentHistoryDetailScalarFieldEnum[]
  }

  /**
   * BusinessPaymentHistoryDetail findFirstOrThrow
   */
  export type BusinessPaymentHistoryDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPaymentHistoryDetail to fetch.
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPaymentHistoryDetails to fetch.
     */
    orderBy?: BusinessPaymentHistoryDetailOrderByWithRelationInput | BusinessPaymentHistoryDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessPaymentHistoryDetails.
     */
    cursor?: BusinessPaymentHistoryDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPaymentHistoryDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPaymentHistoryDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessPaymentHistoryDetails.
     */
    distinct?: BusinessPaymentHistoryDetailScalarFieldEnum | BusinessPaymentHistoryDetailScalarFieldEnum[]
  }

  /**
   * BusinessPaymentHistoryDetail findMany
   */
  export type BusinessPaymentHistoryDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPaymentHistoryDetails to fetch.
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPaymentHistoryDetails to fetch.
     */
    orderBy?: BusinessPaymentHistoryDetailOrderByWithRelationInput | BusinessPaymentHistoryDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessPaymentHistoryDetails.
     */
    cursor?: BusinessPaymentHistoryDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPaymentHistoryDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPaymentHistoryDetails.
     */
    skip?: number
    distinct?: BusinessPaymentHistoryDetailScalarFieldEnum | BusinessPaymentHistoryDetailScalarFieldEnum[]
  }

  /**
   * BusinessPaymentHistoryDetail create
   */
  export type BusinessPaymentHistoryDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessPaymentHistoryDetail.
     */
    data: XOR<BusinessPaymentHistoryDetailCreateInput, BusinessPaymentHistoryDetailUncheckedCreateInput>
  }

  /**
   * BusinessPaymentHistoryDetail createMany
   */
  export type BusinessPaymentHistoryDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessPaymentHistoryDetails.
     */
    data: BusinessPaymentHistoryDetailCreateManyInput | BusinessPaymentHistoryDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessPaymentHistoryDetail createManyAndReturn
   */
  export type BusinessPaymentHistoryDetailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessPaymentHistoryDetails.
     */
    data: BusinessPaymentHistoryDetailCreateManyInput | BusinessPaymentHistoryDetailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessPaymentHistoryDetail update
   */
  export type BusinessPaymentHistoryDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessPaymentHistoryDetail.
     */
    data: XOR<BusinessPaymentHistoryDetailUpdateInput, BusinessPaymentHistoryDetailUncheckedUpdateInput>
    /**
     * Choose, which BusinessPaymentHistoryDetail to update.
     */
    where: BusinessPaymentHistoryDetailWhereUniqueInput
  }

  /**
   * BusinessPaymentHistoryDetail updateMany
   */
  export type BusinessPaymentHistoryDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessPaymentHistoryDetails.
     */
    data: XOR<BusinessPaymentHistoryDetailUpdateManyMutationInput, BusinessPaymentHistoryDetailUncheckedUpdateManyInput>
    /**
     * Filter which BusinessPaymentHistoryDetails to update
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * Limit how many BusinessPaymentHistoryDetails to update.
     */
    limit?: number
  }

  /**
   * BusinessPaymentHistoryDetail updateManyAndReturn
   */
  export type BusinessPaymentHistoryDetailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * The data used to update BusinessPaymentHistoryDetails.
     */
    data: XOR<BusinessPaymentHistoryDetailUpdateManyMutationInput, BusinessPaymentHistoryDetailUncheckedUpdateManyInput>
    /**
     * Filter which BusinessPaymentHistoryDetails to update
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * Limit how many BusinessPaymentHistoryDetails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessPaymentHistoryDetail upsert
   */
  export type BusinessPaymentHistoryDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessPaymentHistoryDetail to update in case it exists.
     */
    where: BusinessPaymentHistoryDetailWhereUniqueInput
    /**
     * In case the BusinessPaymentHistoryDetail found by the `where` argument doesn't exist, create a new BusinessPaymentHistoryDetail with this data.
     */
    create: XOR<BusinessPaymentHistoryDetailCreateInput, BusinessPaymentHistoryDetailUncheckedCreateInput>
    /**
     * In case the BusinessPaymentHistoryDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessPaymentHistoryDetailUpdateInput, BusinessPaymentHistoryDetailUncheckedUpdateInput>
  }

  /**
   * BusinessPaymentHistoryDetail delete
   */
  export type BusinessPaymentHistoryDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    /**
     * Filter which BusinessPaymentHistoryDetail to delete.
     */
    where: BusinessPaymentHistoryDetailWhereUniqueInput
  }

  /**
   * BusinessPaymentHistoryDetail deleteMany
   */
  export type BusinessPaymentHistoryDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessPaymentHistoryDetails to delete
     */
    where?: BusinessPaymentHistoryDetailWhereInput
    /**
     * Limit how many BusinessPaymentHistoryDetails to delete.
     */
    limit?: number
  }

  /**
   * BusinessPaymentHistoryDetail.business_payment_history
   */
  export type BusinessPaymentHistoryDetail$business_payment_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    where?: business_payment_historyWhereInput
    orderBy?: business_payment_historyOrderByWithRelationInput | business_payment_historyOrderByWithRelationInput[]
    cursor?: business_payment_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_payment_historyScalarFieldEnum | Business_payment_historyScalarFieldEnum[]
  }

  /**
   * BusinessPaymentHistoryDetail without action
   */
  export type BusinessPaymentHistoryDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
  }


  /**
   * Model BusinessLicense
   */

  export type AggregateBusinessLicense = {
    _count: BusinessLicenseCountAggregateOutputType | null
    _avg: BusinessLicenseAvgAggregateOutputType | null
    _sum: BusinessLicenseSumAggregateOutputType | null
    _min: BusinessLicenseMinAggregateOutputType | null
    _max: BusinessLicenseMaxAggregateOutputType | null
  }

  export type BusinessLicenseAvgAggregateOutputType = {
    lockinMonths: number | null
  }

  export type BusinessLicenseSumAggregateOutputType = {
    lockinMonths: number | null
  }

  export type BusinessLicenseMinAggregateOutputType = {
    id: string | null
    stripeCustomerId: string | null
    stripeSubscriptionId: string | null
    stripePaymentIntentId: string | null
    licenseType: $Enums.LicenseType | null
    plan: $Enums.LicensePlan | null
    status: $Enums.LicenseStatus | null
    startDate: Date | null
    endDate: Date | null
    isPaid: boolean | null
    lockinMonths: number | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessLicenseMaxAggregateOutputType = {
    id: string | null
    stripeCustomerId: string | null
    stripeSubscriptionId: string | null
    stripePaymentIntentId: string | null
    licenseType: $Enums.LicenseType | null
    plan: $Enums.LicensePlan | null
    status: $Enums.LicenseStatus | null
    startDate: Date | null
    endDate: Date | null
    isPaid: boolean | null
    lockinMonths: number | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessLicenseCountAggregateOutputType = {
    id: number
    stripeCustomerId: number
    stripeSubscriptionId: number
    stripePaymentIntentId: number
    licenseType: number
    plan: number
    status: number
    startDate: number
    endDate: number
    isPaid: number
    lockinMonths: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessLicenseAvgAggregateInputType = {
    lockinMonths?: true
  }

  export type BusinessLicenseSumAggregateInputType = {
    lockinMonths?: true
  }

  export type BusinessLicenseMinAggregateInputType = {
    id?: true
    stripeCustomerId?: true
    stripeSubscriptionId?: true
    stripePaymentIntentId?: true
    licenseType?: true
    plan?: true
    status?: true
    startDate?: true
    endDate?: true
    isPaid?: true
    lockinMonths?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessLicenseMaxAggregateInputType = {
    id?: true
    stripeCustomerId?: true
    stripeSubscriptionId?: true
    stripePaymentIntentId?: true
    licenseType?: true
    plan?: true
    status?: true
    startDate?: true
    endDate?: true
    isPaid?: true
    lockinMonths?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessLicenseCountAggregateInputType = {
    id?: true
    stripeCustomerId?: true
    stripeSubscriptionId?: true
    stripePaymentIntentId?: true
    licenseType?: true
    plan?: true
    status?: true
    startDate?: true
    endDate?: true
    isPaid?: true
    lockinMonths?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessLicenseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessLicense to aggregate.
     */
    where?: BusinessLicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessLicenses to fetch.
     */
    orderBy?: BusinessLicenseOrderByWithRelationInput | BusinessLicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessLicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessLicenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessLicenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessLicenses
    **/
    _count?: true | BusinessLicenseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BusinessLicenseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BusinessLicenseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessLicenseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessLicenseMaxAggregateInputType
  }

  export type GetBusinessLicenseAggregateType<T extends BusinessLicenseAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessLicense]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessLicense[P]>
      : GetScalarType<T[P], AggregateBusinessLicense[P]>
  }




  export type BusinessLicenseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessLicenseWhereInput
    orderBy?: BusinessLicenseOrderByWithAggregationInput | BusinessLicenseOrderByWithAggregationInput[]
    by: BusinessLicenseScalarFieldEnum[] | BusinessLicenseScalarFieldEnum
    having?: BusinessLicenseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessLicenseCountAggregateInputType | true
    _avg?: BusinessLicenseAvgAggregateInputType
    _sum?: BusinessLicenseSumAggregateInputType
    _min?: BusinessLicenseMinAggregateInputType
    _max?: BusinessLicenseMaxAggregateInputType
  }

  export type BusinessLicenseGroupByOutputType = {
    id: string
    stripeCustomerId: string | null
    stripeSubscriptionId: string | null
    stripePaymentIntentId: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date
    endDate: Date | null
    isPaid: boolean
    lockinMonths: number | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessLicenseCountAggregateOutputType | null
    _avg: BusinessLicenseAvgAggregateOutputType | null
    _sum: BusinessLicenseSumAggregateOutputType | null
    _min: BusinessLicenseMinAggregateOutputType | null
    _max: BusinessLicenseMaxAggregateOutputType | null
  }

  type GetBusinessLicenseGroupByPayload<T extends BusinessLicenseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessLicenseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessLicenseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessLicenseGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessLicenseGroupByOutputType[P]>
        }
      >
    >


  export type BusinessLicenseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    stripePaymentIntentId?: boolean
    licenseType?: boolean
    plan?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    isPaid?: boolean
    lockinMonths?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessLicense"]>

  export type BusinessLicenseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    stripePaymentIntentId?: boolean
    licenseType?: boolean
    plan?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    isPaid?: boolean
    lockinMonths?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessLicense"]>

  export type BusinessLicenseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    stripePaymentIntentId?: boolean
    licenseType?: boolean
    plan?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    isPaid?: boolean
    lockinMonths?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessLicense"]>

  export type BusinessLicenseSelectScalar = {
    id?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    stripePaymentIntentId?: boolean
    licenseType?: boolean
    plan?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    isPaid?: boolean
    lockinMonths?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessLicenseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "stripeCustomerId" | "stripeSubscriptionId" | "stripePaymentIntentId" | "licenseType" | "plan" | "status" | "startDate" | "endDate" | "isPaid" | "lockinMonths" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessLicense"]>
  export type BusinessLicenseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessLicenseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessLicenseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessLicensePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessLicense"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      stripeCustomerId: string | null
      stripeSubscriptionId: string | null
      stripePaymentIntentId: string | null
      licenseType: $Enums.LicenseType
      plan: $Enums.LicensePlan
      status: $Enums.LicenseStatus
      startDate: Date
      endDate: Date | null
      isPaid: boolean
      lockinMonths: number | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessLicense"]>
    composites: {}
  }

  type BusinessLicenseGetPayload<S extends boolean | null | undefined | BusinessLicenseDefaultArgs> = $Result.GetResult<Prisma.$BusinessLicensePayload, S>

  type BusinessLicenseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessLicenseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessLicenseCountAggregateInputType | true
    }

  export interface BusinessLicenseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessLicense'], meta: { name: 'BusinessLicense' } }
    /**
     * Find zero or one BusinessLicense that matches the filter.
     * @param {BusinessLicenseFindUniqueArgs} args - Arguments to find a BusinessLicense
     * @example
     * // Get one BusinessLicense
     * const businessLicense = await prisma.businessLicense.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessLicenseFindUniqueArgs>(args: SelectSubset<T, BusinessLicenseFindUniqueArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessLicense that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessLicenseFindUniqueOrThrowArgs} args - Arguments to find a BusinessLicense
     * @example
     * // Get one BusinessLicense
     * const businessLicense = await prisma.businessLicense.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessLicenseFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessLicenseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessLicense that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseFindFirstArgs} args - Arguments to find a BusinessLicense
     * @example
     * // Get one BusinessLicense
     * const businessLicense = await prisma.businessLicense.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessLicenseFindFirstArgs>(args?: SelectSubset<T, BusinessLicenseFindFirstArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessLicense that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseFindFirstOrThrowArgs} args - Arguments to find a BusinessLicense
     * @example
     * // Get one BusinessLicense
     * const businessLicense = await prisma.businessLicense.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessLicenseFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessLicenseFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessLicenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessLicenses
     * const businessLicenses = await prisma.businessLicense.findMany()
     * 
     * // Get first 10 BusinessLicenses
     * const businessLicenses = await prisma.businessLicense.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessLicenseWithIdOnly = await prisma.businessLicense.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessLicenseFindManyArgs>(args?: SelectSubset<T, BusinessLicenseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessLicense.
     * @param {BusinessLicenseCreateArgs} args - Arguments to create a BusinessLicense.
     * @example
     * // Create one BusinessLicense
     * const BusinessLicense = await prisma.businessLicense.create({
     *   data: {
     *     // ... data to create a BusinessLicense
     *   }
     * })
     * 
     */
    create<T extends BusinessLicenseCreateArgs>(args: SelectSubset<T, BusinessLicenseCreateArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessLicenses.
     * @param {BusinessLicenseCreateManyArgs} args - Arguments to create many BusinessLicenses.
     * @example
     * // Create many BusinessLicenses
     * const businessLicense = await prisma.businessLicense.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessLicenseCreateManyArgs>(args?: SelectSubset<T, BusinessLicenseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessLicenses and returns the data saved in the database.
     * @param {BusinessLicenseCreateManyAndReturnArgs} args - Arguments to create many BusinessLicenses.
     * @example
     * // Create many BusinessLicenses
     * const businessLicense = await prisma.businessLicense.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessLicenses and only return the `id`
     * const businessLicenseWithIdOnly = await prisma.businessLicense.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessLicenseCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessLicenseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessLicense.
     * @param {BusinessLicenseDeleteArgs} args - Arguments to delete one BusinessLicense.
     * @example
     * // Delete one BusinessLicense
     * const BusinessLicense = await prisma.businessLicense.delete({
     *   where: {
     *     // ... filter to delete one BusinessLicense
     *   }
     * })
     * 
     */
    delete<T extends BusinessLicenseDeleteArgs>(args: SelectSubset<T, BusinessLicenseDeleteArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessLicense.
     * @param {BusinessLicenseUpdateArgs} args - Arguments to update one BusinessLicense.
     * @example
     * // Update one BusinessLicense
     * const businessLicense = await prisma.businessLicense.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessLicenseUpdateArgs>(args: SelectSubset<T, BusinessLicenseUpdateArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessLicenses.
     * @param {BusinessLicenseDeleteManyArgs} args - Arguments to filter BusinessLicenses to delete.
     * @example
     * // Delete a few BusinessLicenses
     * const { count } = await prisma.businessLicense.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessLicenseDeleteManyArgs>(args?: SelectSubset<T, BusinessLicenseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessLicenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessLicenses
     * const businessLicense = await prisma.businessLicense.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessLicenseUpdateManyArgs>(args: SelectSubset<T, BusinessLicenseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessLicenses and returns the data updated in the database.
     * @param {BusinessLicenseUpdateManyAndReturnArgs} args - Arguments to update many BusinessLicenses.
     * @example
     * // Update many BusinessLicenses
     * const businessLicense = await prisma.businessLicense.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessLicenses and only return the `id`
     * const businessLicenseWithIdOnly = await prisma.businessLicense.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessLicenseUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessLicenseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessLicense.
     * @param {BusinessLicenseUpsertArgs} args - Arguments to update or create a BusinessLicense.
     * @example
     * // Update or create a BusinessLicense
     * const businessLicense = await prisma.businessLicense.upsert({
     *   create: {
     *     // ... data to create a BusinessLicense
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessLicense we want to update
     *   }
     * })
     */
    upsert<T extends BusinessLicenseUpsertArgs>(args: SelectSubset<T, BusinessLicenseUpsertArgs<ExtArgs>>): Prisma__BusinessLicenseClient<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessLicenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseCountArgs} args - Arguments to filter BusinessLicenses to count.
     * @example
     * // Count the number of BusinessLicenses
     * const count = await prisma.businessLicense.count({
     *   where: {
     *     // ... the filter for the BusinessLicenses we want to count
     *   }
     * })
    **/
    count<T extends BusinessLicenseCountArgs>(
      args?: Subset<T, BusinessLicenseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessLicenseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessLicense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessLicenseAggregateArgs>(args: Subset<T, BusinessLicenseAggregateArgs>): Prisma.PrismaPromise<GetBusinessLicenseAggregateType<T>>

    /**
     * Group by BusinessLicense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessLicenseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessLicenseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessLicenseGroupByArgs['orderBy'] }
        : { orderBy?: BusinessLicenseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessLicenseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessLicenseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessLicense model
   */
  readonly fields: BusinessLicenseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessLicense.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessLicenseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessLicense model
   */
  interface BusinessLicenseFieldRefs {
    readonly id: FieldRef<"BusinessLicense", 'String'>
    readonly stripeCustomerId: FieldRef<"BusinessLicense", 'String'>
    readonly stripeSubscriptionId: FieldRef<"BusinessLicense", 'String'>
    readonly stripePaymentIntentId: FieldRef<"BusinessLicense", 'String'>
    readonly licenseType: FieldRef<"BusinessLicense", 'LicenseType'>
    readonly plan: FieldRef<"BusinessLicense", 'LicensePlan'>
    readonly status: FieldRef<"BusinessLicense", 'LicenseStatus'>
    readonly startDate: FieldRef<"BusinessLicense", 'DateTime'>
    readonly endDate: FieldRef<"BusinessLicense", 'DateTime'>
    readonly isPaid: FieldRef<"BusinessLicense", 'Boolean'>
    readonly lockinMonths: FieldRef<"BusinessLicense", 'Int'>
    readonly businessId: FieldRef<"BusinessLicense", 'String'>
    readonly createdAt: FieldRef<"BusinessLicense", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessLicense", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessLicense findUnique
   */
  export type BusinessLicenseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * Filter, which BusinessLicense to fetch.
     */
    where: BusinessLicenseWhereUniqueInput
  }

  /**
   * BusinessLicense findUniqueOrThrow
   */
  export type BusinessLicenseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * Filter, which BusinessLicense to fetch.
     */
    where: BusinessLicenseWhereUniqueInput
  }

  /**
   * BusinessLicense findFirst
   */
  export type BusinessLicenseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * Filter, which BusinessLicense to fetch.
     */
    where?: BusinessLicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessLicenses to fetch.
     */
    orderBy?: BusinessLicenseOrderByWithRelationInput | BusinessLicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessLicenses.
     */
    cursor?: BusinessLicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessLicenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessLicenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessLicenses.
     */
    distinct?: BusinessLicenseScalarFieldEnum | BusinessLicenseScalarFieldEnum[]
  }

  /**
   * BusinessLicense findFirstOrThrow
   */
  export type BusinessLicenseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * Filter, which BusinessLicense to fetch.
     */
    where?: BusinessLicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessLicenses to fetch.
     */
    orderBy?: BusinessLicenseOrderByWithRelationInput | BusinessLicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessLicenses.
     */
    cursor?: BusinessLicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessLicenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessLicenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessLicenses.
     */
    distinct?: BusinessLicenseScalarFieldEnum | BusinessLicenseScalarFieldEnum[]
  }

  /**
   * BusinessLicense findMany
   */
  export type BusinessLicenseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * Filter, which BusinessLicenses to fetch.
     */
    where?: BusinessLicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessLicenses to fetch.
     */
    orderBy?: BusinessLicenseOrderByWithRelationInput | BusinessLicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessLicenses.
     */
    cursor?: BusinessLicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessLicenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessLicenses.
     */
    skip?: number
    distinct?: BusinessLicenseScalarFieldEnum | BusinessLicenseScalarFieldEnum[]
  }

  /**
   * BusinessLicense create
   */
  export type BusinessLicenseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessLicense.
     */
    data: XOR<BusinessLicenseCreateInput, BusinessLicenseUncheckedCreateInput>
  }

  /**
   * BusinessLicense createMany
   */
  export type BusinessLicenseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessLicenses.
     */
    data: BusinessLicenseCreateManyInput | BusinessLicenseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessLicense createManyAndReturn
   */
  export type BusinessLicenseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessLicenses.
     */
    data: BusinessLicenseCreateManyInput | BusinessLicenseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessLicense update
   */
  export type BusinessLicenseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessLicense.
     */
    data: XOR<BusinessLicenseUpdateInput, BusinessLicenseUncheckedUpdateInput>
    /**
     * Choose, which BusinessLicense to update.
     */
    where: BusinessLicenseWhereUniqueInput
  }

  /**
   * BusinessLicense updateMany
   */
  export type BusinessLicenseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessLicenses.
     */
    data: XOR<BusinessLicenseUpdateManyMutationInput, BusinessLicenseUncheckedUpdateManyInput>
    /**
     * Filter which BusinessLicenses to update
     */
    where?: BusinessLicenseWhereInput
    /**
     * Limit how many BusinessLicenses to update.
     */
    limit?: number
  }

  /**
   * BusinessLicense updateManyAndReturn
   */
  export type BusinessLicenseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * The data used to update BusinessLicenses.
     */
    data: XOR<BusinessLicenseUpdateManyMutationInput, BusinessLicenseUncheckedUpdateManyInput>
    /**
     * Filter which BusinessLicenses to update
     */
    where?: BusinessLicenseWhereInput
    /**
     * Limit how many BusinessLicenses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessLicense upsert
   */
  export type BusinessLicenseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessLicense to update in case it exists.
     */
    where: BusinessLicenseWhereUniqueInput
    /**
     * In case the BusinessLicense found by the `where` argument doesn't exist, create a new BusinessLicense with this data.
     */
    create: XOR<BusinessLicenseCreateInput, BusinessLicenseUncheckedCreateInput>
    /**
     * In case the BusinessLicense was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessLicenseUpdateInput, BusinessLicenseUncheckedUpdateInput>
  }

  /**
   * BusinessLicense delete
   */
  export type BusinessLicenseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    /**
     * Filter which BusinessLicense to delete.
     */
    where: BusinessLicenseWhereUniqueInput
  }

  /**
   * BusinessLicense deleteMany
   */
  export type BusinessLicenseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessLicenses to delete
     */
    where?: BusinessLicenseWhereInput
    /**
     * Limit how many BusinessLicenses to delete.
     */
    limit?: number
  }

  /**
   * BusinessLicense without action
   */
  export type BusinessLicenseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
  }


  /**
   * Model BusinessPayingCompany
   */

  export type AggregateBusinessPayingCompany = {
    _count: BusinessPayingCompanyCountAggregateOutputType | null
    _min: BusinessPayingCompanyMinAggregateOutputType | null
    _max: BusinessPayingCompanyMaxAggregateOutputType | null
  }

  export type BusinessPayingCompanyMinAggregateOutputType = {
    id: string | null
    legalName: string | null
    taxId: string | null
    country: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessPayingCompanyMaxAggregateOutputType = {
    id: string | null
    legalName: string | null
    taxId: string | null
    country: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessPayingCompanyCountAggregateOutputType = {
    id: number
    legalName: number
    taxId: number
    country: number
    role: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessPayingCompanyMinAggregateInputType = {
    id?: true
    legalName?: true
    taxId?: true
    country?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessPayingCompanyMaxAggregateInputType = {
    id?: true
    legalName?: true
    taxId?: true
    country?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessPayingCompanyCountAggregateInputType = {
    id?: true
    legalName?: true
    taxId?: true
    country?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessPayingCompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessPayingCompany to aggregate.
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPayingCompanies to fetch.
     */
    orderBy?: BusinessPayingCompanyOrderByWithRelationInput | BusinessPayingCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessPayingCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPayingCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPayingCompanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessPayingCompanies
    **/
    _count?: true | BusinessPayingCompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessPayingCompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessPayingCompanyMaxAggregateInputType
  }

  export type GetBusinessPayingCompanyAggregateType<T extends BusinessPayingCompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessPayingCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessPayingCompany[P]>
      : GetScalarType<T[P], AggregateBusinessPayingCompany[P]>
  }




  export type BusinessPayingCompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessPayingCompanyWhereInput
    orderBy?: BusinessPayingCompanyOrderByWithAggregationInput | BusinessPayingCompanyOrderByWithAggregationInput[]
    by: BusinessPayingCompanyScalarFieldEnum[] | BusinessPayingCompanyScalarFieldEnum
    having?: BusinessPayingCompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessPayingCompanyCountAggregateInputType | true
    _min?: BusinessPayingCompanyMinAggregateInputType
    _max?: BusinessPayingCompanyMaxAggregateInputType
  }

  export type BusinessPayingCompanyGroupByOutputType = {
    id: string
    legalName: string
    taxId: string
    country: string
    role: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessPayingCompanyCountAggregateOutputType | null
    _min: BusinessPayingCompanyMinAggregateOutputType | null
    _max: BusinessPayingCompanyMaxAggregateOutputType | null
  }

  type GetBusinessPayingCompanyGroupByPayload<T extends BusinessPayingCompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessPayingCompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessPayingCompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessPayingCompanyGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessPayingCompanyGroupByOutputType[P]>
        }
      >
    >


  export type BusinessPayingCompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    country?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPayingCompany"]>

  export type BusinessPayingCompanySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    country?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPayingCompany"]>

  export type BusinessPayingCompanySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    country?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPayingCompany"]>

  export type BusinessPayingCompanySelectScalar = {
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    country?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessPayingCompanyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "legalName" | "taxId" | "country" | "role" | "createdAt" | "updatedAt", ExtArgs["result"]["businessPayingCompany"]>
  export type BusinessPayingCompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessPayingCompanyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessPayingCompanyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessPayingCompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessPayingCompany"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      legalName: string
      taxId: string
      country: string
      role: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessPayingCompany"]>
    composites: {}
  }

  type BusinessPayingCompanyGetPayload<S extends boolean | null | undefined | BusinessPayingCompanyDefaultArgs> = $Result.GetResult<Prisma.$BusinessPayingCompanyPayload, S>

  type BusinessPayingCompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessPayingCompanyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessPayingCompanyCountAggregateInputType | true
    }

  export interface BusinessPayingCompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessPayingCompany'], meta: { name: 'BusinessPayingCompany' } }
    /**
     * Find zero or one BusinessPayingCompany that matches the filter.
     * @param {BusinessPayingCompanyFindUniqueArgs} args - Arguments to find a BusinessPayingCompany
     * @example
     * // Get one BusinessPayingCompany
     * const businessPayingCompany = await prisma.businessPayingCompany.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessPayingCompanyFindUniqueArgs>(args: SelectSubset<T, BusinessPayingCompanyFindUniqueArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessPayingCompany that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessPayingCompanyFindUniqueOrThrowArgs} args - Arguments to find a BusinessPayingCompany
     * @example
     * // Get one BusinessPayingCompany
     * const businessPayingCompany = await prisma.businessPayingCompany.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessPayingCompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessPayingCompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessPayingCompany that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyFindFirstArgs} args - Arguments to find a BusinessPayingCompany
     * @example
     * // Get one BusinessPayingCompany
     * const businessPayingCompany = await prisma.businessPayingCompany.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessPayingCompanyFindFirstArgs>(args?: SelectSubset<T, BusinessPayingCompanyFindFirstArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessPayingCompany that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyFindFirstOrThrowArgs} args - Arguments to find a BusinessPayingCompany
     * @example
     * // Get one BusinessPayingCompany
     * const businessPayingCompany = await prisma.businessPayingCompany.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessPayingCompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessPayingCompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessPayingCompanies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessPayingCompanies
     * const businessPayingCompanies = await prisma.businessPayingCompany.findMany()
     * 
     * // Get first 10 BusinessPayingCompanies
     * const businessPayingCompanies = await prisma.businessPayingCompany.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessPayingCompanyWithIdOnly = await prisma.businessPayingCompany.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessPayingCompanyFindManyArgs>(args?: SelectSubset<T, BusinessPayingCompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessPayingCompany.
     * @param {BusinessPayingCompanyCreateArgs} args - Arguments to create a BusinessPayingCompany.
     * @example
     * // Create one BusinessPayingCompany
     * const BusinessPayingCompany = await prisma.businessPayingCompany.create({
     *   data: {
     *     // ... data to create a BusinessPayingCompany
     *   }
     * })
     * 
     */
    create<T extends BusinessPayingCompanyCreateArgs>(args: SelectSubset<T, BusinessPayingCompanyCreateArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessPayingCompanies.
     * @param {BusinessPayingCompanyCreateManyArgs} args - Arguments to create many BusinessPayingCompanies.
     * @example
     * // Create many BusinessPayingCompanies
     * const businessPayingCompany = await prisma.businessPayingCompany.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessPayingCompanyCreateManyArgs>(args?: SelectSubset<T, BusinessPayingCompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessPayingCompanies and returns the data saved in the database.
     * @param {BusinessPayingCompanyCreateManyAndReturnArgs} args - Arguments to create many BusinessPayingCompanies.
     * @example
     * // Create many BusinessPayingCompanies
     * const businessPayingCompany = await prisma.businessPayingCompany.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessPayingCompanies and only return the `id`
     * const businessPayingCompanyWithIdOnly = await prisma.businessPayingCompany.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessPayingCompanyCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessPayingCompanyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessPayingCompany.
     * @param {BusinessPayingCompanyDeleteArgs} args - Arguments to delete one BusinessPayingCompany.
     * @example
     * // Delete one BusinessPayingCompany
     * const BusinessPayingCompany = await prisma.businessPayingCompany.delete({
     *   where: {
     *     // ... filter to delete one BusinessPayingCompany
     *   }
     * })
     * 
     */
    delete<T extends BusinessPayingCompanyDeleteArgs>(args: SelectSubset<T, BusinessPayingCompanyDeleteArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessPayingCompany.
     * @param {BusinessPayingCompanyUpdateArgs} args - Arguments to update one BusinessPayingCompany.
     * @example
     * // Update one BusinessPayingCompany
     * const businessPayingCompany = await prisma.businessPayingCompany.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessPayingCompanyUpdateArgs>(args: SelectSubset<T, BusinessPayingCompanyUpdateArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessPayingCompanies.
     * @param {BusinessPayingCompanyDeleteManyArgs} args - Arguments to filter BusinessPayingCompanies to delete.
     * @example
     * // Delete a few BusinessPayingCompanies
     * const { count } = await prisma.businessPayingCompany.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessPayingCompanyDeleteManyArgs>(args?: SelectSubset<T, BusinessPayingCompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessPayingCompanies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessPayingCompanies
     * const businessPayingCompany = await prisma.businessPayingCompany.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessPayingCompanyUpdateManyArgs>(args: SelectSubset<T, BusinessPayingCompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessPayingCompanies and returns the data updated in the database.
     * @param {BusinessPayingCompanyUpdateManyAndReturnArgs} args - Arguments to update many BusinessPayingCompanies.
     * @example
     * // Update many BusinessPayingCompanies
     * const businessPayingCompany = await prisma.businessPayingCompany.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessPayingCompanies and only return the `id`
     * const businessPayingCompanyWithIdOnly = await prisma.businessPayingCompany.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessPayingCompanyUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessPayingCompanyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessPayingCompany.
     * @param {BusinessPayingCompanyUpsertArgs} args - Arguments to update or create a BusinessPayingCompany.
     * @example
     * // Update or create a BusinessPayingCompany
     * const businessPayingCompany = await prisma.businessPayingCompany.upsert({
     *   create: {
     *     // ... data to create a BusinessPayingCompany
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessPayingCompany we want to update
     *   }
     * })
     */
    upsert<T extends BusinessPayingCompanyUpsertArgs>(args: SelectSubset<T, BusinessPayingCompanyUpsertArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessPayingCompanies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyCountArgs} args - Arguments to filter BusinessPayingCompanies to count.
     * @example
     * // Count the number of BusinessPayingCompanies
     * const count = await prisma.businessPayingCompany.count({
     *   where: {
     *     // ... the filter for the BusinessPayingCompanies we want to count
     *   }
     * })
    **/
    count<T extends BusinessPayingCompanyCountArgs>(
      args?: Subset<T, BusinessPayingCompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessPayingCompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessPayingCompany.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessPayingCompanyAggregateArgs>(args: Subset<T, BusinessPayingCompanyAggregateArgs>): Prisma.PrismaPromise<GetBusinessPayingCompanyAggregateType<T>>

    /**
     * Group by BusinessPayingCompany.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPayingCompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessPayingCompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessPayingCompanyGroupByArgs['orderBy'] }
        : { orderBy?: BusinessPayingCompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessPayingCompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessPayingCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessPayingCompany model
   */
  readonly fields: BusinessPayingCompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessPayingCompany.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessPayingCompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessPayingCompany model
   */
  interface BusinessPayingCompanyFieldRefs {
    readonly id: FieldRef<"BusinessPayingCompany", 'String'>
    readonly legalName: FieldRef<"BusinessPayingCompany", 'String'>
    readonly taxId: FieldRef<"BusinessPayingCompany", 'String'>
    readonly country: FieldRef<"BusinessPayingCompany", 'String'>
    readonly role: FieldRef<"BusinessPayingCompany", 'String'>
    readonly createdAt: FieldRef<"BusinessPayingCompany", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessPayingCompany", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessPayingCompany findUnique
   */
  export type BusinessPayingCompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPayingCompany to fetch.
     */
    where: BusinessPayingCompanyWhereUniqueInput
  }

  /**
   * BusinessPayingCompany findUniqueOrThrow
   */
  export type BusinessPayingCompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPayingCompany to fetch.
     */
    where: BusinessPayingCompanyWhereUniqueInput
  }

  /**
   * BusinessPayingCompany findFirst
   */
  export type BusinessPayingCompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPayingCompany to fetch.
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPayingCompanies to fetch.
     */
    orderBy?: BusinessPayingCompanyOrderByWithRelationInput | BusinessPayingCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessPayingCompanies.
     */
    cursor?: BusinessPayingCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPayingCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPayingCompanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessPayingCompanies.
     */
    distinct?: BusinessPayingCompanyScalarFieldEnum | BusinessPayingCompanyScalarFieldEnum[]
  }

  /**
   * BusinessPayingCompany findFirstOrThrow
   */
  export type BusinessPayingCompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPayingCompany to fetch.
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPayingCompanies to fetch.
     */
    orderBy?: BusinessPayingCompanyOrderByWithRelationInput | BusinessPayingCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessPayingCompanies.
     */
    cursor?: BusinessPayingCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPayingCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPayingCompanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessPayingCompanies.
     */
    distinct?: BusinessPayingCompanyScalarFieldEnum | BusinessPayingCompanyScalarFieldEnum[]
  }

  /**
   * BusinessPayingCompany findMany
   */
  export type BusinessPayingCompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPayingCompanies to fetch.
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPayingCompanies to fetch.
     */
    orderBy?: BusinessPayingCompanyOrderByWithRelationInput | BusinessPayingCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessPayingCompanies.
     */
    cursor?: BusinessPayingCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPayingCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPayingCompanies.
     */
    skip?: number
    distinct?: BusinessPayingCompanyScalarFieldEnum | BusinessPayingCompanyScalarFieldEnum[]
  }

  /**
   * BusinessPayingCompany create
   */
  export type BusinessPayingCompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessPayingCompany.
     */
    data: XOR<BusinessPayingCompanyCreateInput, BusinessPayingCompanyUncheckedCreateInput>
  }

  /**
   * BusinessPayingCompany createMany
   */
  export type BusinessPayingCompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessPayingCompanies.
     */
    data: BusinessPayingCompanyCreateManyInput | BusinessPayingCompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessPayingCompany createManyAndReturn
   */
  export type BusinessPayingCompanyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessPayingCompanies.
     */
    data: BusinessPayingCompanyCreateManyInput | BusinessPayingCompanyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessPayingCompany update
   */
  export type BusinessPayingCompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessPayingCompany.
     */
    data: XOR<BusinessPayingCompanyUpdateInput, BusinessPayingCompanyUncheckedUpdateInput>
    /**
     * Choose, which BusinessPayingCompany to update.
     */
    where: BusinessPayingCompanyWhereUniqueInput
  }

  /**
   * BusinessPayingCompany updateMany
   */
  export type BusinessPayingCompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessPayingCompanies.
     */
    data: XOR<BusinessPayingCompanyUpdateManyMutationInput, BusinessPayingCompanyUncheckedUpdateManyInput>
    /**
     * Filter which BusinessPayingCompanies to update
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * Limit how many BusinessPayingCompanies to update.
     */
    limit?: number
  }

  /**
   * BusinessPayingCompany updateManyAndReturn
   */
  export type BusinessPayingCompanyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * The data used to update BusinessPayingCompanies.
     */
    data: XOR<BusinessPayingCompanyUpdateManyMutationInput, BusinessPayingCompanyUncheckedUpdateManyInput>
    /**
     * Filter which BusinessPayingCompanies to update
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * Limit how many BusinessPayingCompanies to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessPayingCompany upsert
   */
  export type BusinessPayingCompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessPayingCompany to update in case it exists.
     */
    where: BusinessPayingCompanyWhereUniqueInput
    /**
     * In case the BusinessPayingCompany found by the `where` argument doesn't exist, create a new BusinessPayingCompany with this data.
     */
    create: XOR<BusinessPayingCompanyCreateInput, BusinessPayingCompanyUncheckedCreateInput>
    /**
     * In case the BusinessPayingCompany was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessPayingCompanyUpdateInput, BusinessPayingCompanyUncheckedUpdateInput>
  }

  /**
   * BusinessPayingCompany delete
   */
  export type BusinessPayingCompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    /**
     * Filter which BusinessPayingCompany to delete.
     */
    where: BusinessPayingCompanyWhereUniqueInput
  }

  /**
   * BusinessPayingCompany deleteMany
   */
  export type BusinessPayingCompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessPayingCompanies to delete
     */
    where?: BusinessPayingCompanyWhereInput
    /**
     * Limit how many BusinessPayingCompanies to delete.
     */
    limit?: number
  }

  /**
   * BusinessPayingCompany without action
   */
  export type BusinessPayingCompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
  }


  /**
   * Model ClientOrder
   */

  export type AggregateClientOrder = {
    _count: ClientOrderCountAggregateOutputType | null
    _min: ClientOrderMinAggregateOutputType | null
    _max: ClientOrderMaxAggregateOutputType | null
  }

  export type ClientOrderMinAggregateOutputType = {
    id: string | null
    status: $Enums.OrderStatus | null
    informationNotes: string | null
    tableServed: string | null
    employeeServed: string | null
    refund: boolean | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientOrderMaxAggregateOutputType = {
    id: string | null
    status: $Enums.OrderStatus | null
    informationNotes: string | null
    tableServed: string | null
    employeeServed: string | null
    refund: boolean | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientOrderCountAggregateOutputType = {
    id: number
    status: number
    informationNotes: number
    tableServed: number
    employeeServed: number
    refund: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClientOrderMinAggregateInputType = {
    id?: true
    status?: true
    informationNotes?: true
    tableServed?: true
    employeeServed?: true
    refund?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientOrderMaxAggregateInputType = {
    id?: true
    status?: true
    informationNotes?: true
    tableServed?: true
    employeeServed?: true
    refund?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientOrderCountAggregateInputType = {
    id?: true
    status?: true
    informationNotes?: true
    tableServed?: true
    employeeServed?: true
    refund?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClientOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientOrder to aggregate.
     */
    where?: ClientOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrders to fetch.
     */
    orderBy?: ClientOrderOrderByWithRelationInput | ClientOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientOrders
    **/
    _count?: true | ClientOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientOrderMaxAggregateInputType
  }

  export type GetClientOrderAggregateType<T extends ClientOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateClientOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientOrder[P]>
      : GetScalarType<T[P], AggregateClientOrder[P]>
  }




  export type ClientOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderWhereInput
    orderBy?: ClientOrderOrderByWithAggregationInput | ClientOrderOrderByWithAggregationInput[]
    by: ClientOrderScalarFieldEnum[] | ClientOrderScalarFieldEnum
    having?: ClientOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientOrderCountAggregateInputType | true
    _min?: ClientOrderMinAggregateInputType
    _max?: ClientOrderMaxAggregateInputType
  }

  export type ClientOrderGroupByOutputType = {
    id: string
    status: $Enums.OrderStatus
    informationNotes: string | null
    tableServed: string | null
    employeeServed: string | null
    refund: boolean
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: ClientOrderCountAggregateOutputType | null
    _min: ClientOrderMinAggregateOutputType | null
    _max: ClientOrderMaxAggregateOutputType | null
  }

  type GetClientOrderGroupByPayload<T extends ClientOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientOrderGroupByOutputType[P]>
            : GetScalarType<T[P], ClientOrderGroupByOutputType[P]>
        }
      >
    >


  export type ClientOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    informationNotes?: boolean
    tableServed?: boolean
    employeeServed?: boolean
    refund?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client_order_product_lines?: boolean | ClientOrder$client_order_product_linesArgs<ExtArgs>
    client_order_thermal_printers?: boolean | ClientOrder$client_order_thermal_printersArgs<ExtArgs>
    client_order_tickets?: boolean | ClientOrder$client_order_ticketsArgs<ExtArgs>
    client_order_transactions?: boolean | ClientOrder$client_order_transactionsArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    _count?: boolean | ClientOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrder"]>

  export type ClientOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    informationNotes?: boolean
    tableServed?: boolean
    employeeServed?: boolean
    refund?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrder"]>

  export type ClientOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    informationNotes?: boolean
    tableServed?: boolean
    employeeServed?: boolean
    refund?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrder"]>

  export type ClientOrderSelectScalar = {
    id?: boolean
    status?: boolean
    informationNotes?: boolean
    tableServed?: boolean
    employeeServed?: boolean
    refund?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ClientOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "informationNotes" | "tableServed" | "employeeServed" | "refund" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["clientOrder"]>
  export type ClientOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client_order_product_lines?: boolean | ClientOrder$client_order_product_linesArgs<ExtArgs>
    client_order_thermal_printers?: boolean | ClientOrder$client_order_thermal_printersArgs<ExtArgs>
    client_order_tickets?: boolean | ClientOrder$client_order_ticketsArgs<ExtArgs>
    client_order_transactions?: boolean | ClientOrder$client_order_transactionsArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    _count?: boolean | ClientOrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type ClientOrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $ClientOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientOrder"
    objects: {
      client_order_product_lines: Prisma.$client_order_product_linesPayload<ExtArgs>[]
      client_order_thermal_printers: Prisma.$client_order_thermal_printersPayload<ExtArgs> | null
      client_order_tickets: Prisma.$ClientOrderTicketPayload<ExtArgs> | null
      client_order_transactions: Prisma.$ClientOrderTransactionPayload<ExtArgs>[]
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: $Enums.OrderStatus
      informationNotes: string | null
      tableServed: string | null
      employeeServed: string | null
      refund: boolean
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["clientOrder"]>
    composites: {}
  }

  type ClientOrderGetPayload<S extends boolean | null | undefined | ClientOrderDefaultArgs> = $Result.GetResult<Prisma.$ClientOrderPayload, S>

  type ClientOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientOrderCountAggregateInputType | true
    }

  export interface ClientOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientOrder'], meta: { name: 'ClientOrder' } }
    /**
     * Find zero or one ClientOrder that matches the filter.
     * @param {ClientOrderFindUniqueArgs} args - Arguments to find a ClientOrder
     * @example
     * // Get one ClientOrder
     * const clientOrder = await prisma.clientOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientOrderFindUniqueArgs>(args: SelectSubset<T, ClientOrderFindUniqueArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClientOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientOrderFindUniqueOrThrowArgs} args - Arguments to find a ClientOrder
     * @example
     * // Get one ClientOrder
     * const clientOrder = await prisma.clientOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderFindFirstArgs} args - Arguments to find a ClientOrder
     * @example
     * // Get one ClientOrder
     * const clientOrder = await prisma.clientOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientOrderFindFirstArgs>(args?: SelectSubset<T, ClientOrderFindFirstArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderFindFirstOrThrowArgs} args - Arguments to find a ClientOrder
     * @example
     * // Get one ClientOrder
     * const clientOrder = await prisma.clientOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClientOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientOrders
     * const clientOrders = await prisma.clientOrder.findMany()
     * 
     * // Get first 10 ClientOrders
     * const clientOrders = await prisma.clientOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientOrderWithIdOnly = await prisma.clientOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientOrderFindManyArgs>(args?: SelectSubset<T, ClientOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClientOrder.
     * @param {ClientOrderCreateArgs} args - Arguments to create a ClientOrder.
     * @example
     * // Create one ClientOrder
     * const ClientOrder = await prisma.clientOrder.create({
     *   data: {
     *     // ... data to create a ClientOrder
     *   }
     * })
     * 
     */
    create<T extends ClientOrderCreateArgs>(args: SelectSubset<T, ClientOrderCreateArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClientOrders.
     * @param {ClientOrderCreateManyArgs} args - Arguments to create many ClientOrders.
     * @example
     * // Create many ClientOrders
     * const clientOrder = await prisma.clientOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientOrderCreateManyArgs>(args?: SelectSubset<T, ClientOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientOrders and returns the data saved in the database.
     * @param {ClientOrderCreateManyAndReturnArgs} args - Arguments to create many ClientOrders.
     * @example
     * // Create many ClientOrders
     * const clientOrder = await prisma.clientOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientOrders and only return the `id`
     * const clientOrderWithIdOnly = await prisma.clientOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClientOrder.
     * @param {ClientOrderDeleteArgs} args - Arguments to delete one ClientOrder.
     * @example
     * // Delete one ClientOrder
     * const ClientOrder = await prisma.clientOrder.delete({
     *   where: {
     *     // ... filter to delete one ClientOrder
     *   }
     * })
     * 
     */
    delete<T extends ClientOrderDeleteArgs>(args: SelectSubset<T, ClientOrderDeleteArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClientOrder.
     * @param {ClientOrderUpdateArgs} args - Arguments to update one ClientOrder.
     * @example
     * // Update one ClientOrder
     * const clientOrder = await prisma.clientOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientOrderUpdateArgs>(args: SelectSubset<T, ClientOrderUpdateArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClientOrders.
     * @param {ClientOrderDeleteManyArgs} args - Arguments to filter ClientOrders to delete.
     * @example
     * // Delete a few ClientOrders
     * const { count } = await prisma.clientOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientOrderDeleteManyArgs>(args?: SelectSubset<T, ClientOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientOrders
     * const clientOrder = await prisma.clientOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientOrderUpdateManyArgs>(args: SelectSubset<T, ClientOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientOrders and returns the data updated in the database.
     * @param {ClientOrderUpdateManyAndReturnArgs} args - Arguments to update many ClientOrders.
     * @example
     * // Update many ClientOrders
     * const clientOrder = await prisma.clientOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClientOrders and only return the `id`
     * const clientOrderWithIdOnly = await prisma.clientOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClientOrder.
     * @param {ClientOrderUpsertArgs} args - Arguments to update or create a ClientOrder.
     * @example
     * // Update or create a ClientOrder
     * const clientOrder = await prisma.clientOrder.upsert({
     *   create: {
     *     // ... data to create a ClientOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientOrder we want to update
     *   }
     * })
     */
    upsert<T extends ClientOrderUpsertArgs>(args: SelectSubset<T, ClientOrderUpsertArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClientOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderCountArgs} args - Arguments to filter ClientOrders to count.
     * @example
     * // Count the number of ClientOrders
     * const count = await prisma.clientOrder.count({
     *   where: {
     *     // ... the filter for the ClientOrders we want to count
     *   }
     * })
    **/
    count<T extends ClientOrderCountArgs>(
      args?: Subset<T, ClientOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientOrderAggregateArgs>(args: Subset<T, ClientOrderAggregateArgs>): Prisma.PrismaPromise<GetClientOrderAggregateType<T>>

    /**
     * Group by ClientOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientOrderGroupByArgs['orderBy'] }
        : { orderBy?: ClientOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientOrder model
   */
  readonly fields: ClientOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client_order_product_lines<T extends ClientOrder$client_order_product_linesArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrder$client_order_product_linesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client_order_thermal_printers<T extends ClientOrder$client_order_thermal_printersArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrder$client_order_thermal_printersArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    client_order_tickets<T extends ClientOrder$client_order_ticketsArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrder$client_order_ticketsArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    client_order_transactions<T extends ClientOrder$client_order_transactionsArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrder$client_order_transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientOrder model
   */
  interface ClientOrderFieldRefs {
    readonly id: FieldRef<"ClientOrder", 'String'>
    readonly status: FieldRef<"ClientOrder", 'OrderStatus'>
    readonly informationNotes: FieldRef<"ClientOrder", 'String'>
    readonly tableServed: FieldRef<"ClientOrder", 'String'>
    readonly employeeServed: FieldRef<"ClientOrder", 'String'>
    readonly refund: FieldRef<"ClientOrder", 'Boolean'>
    readonly businessId: FieldRef<"ClientOrder", 'String'>
    readonly createdAt: FieldRef<"ClientOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"ClientOrder", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClientOrder findUnique
   */
  export type ClientOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrder to fetch.
     */
    where: ClientOrderWhereUniqueInput
  }

  /**
   * ClientOrder findUniqueOrThrow
   */
  export type ClientOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrder to fetch.
     */
    where: ClientOrderWhereUniqueInput
  }

  /**
   * ClientOrder findFirst
   */
  export type ClientOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrder to fetch.
     */
    where?: ClientOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrders to fetch.
     */
    orderBy?: ClientOrderOrderByWithRelationInput | ClientOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientOrders.
     */
    cursor?: ClientOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientOrders.
     */
    distinct?: ClientOrderScalarFieldEnum | ClientOrderScalarFieldEnum[]
  }

  /**
   * ClientOrder findFirstOrThrow
   */
  export type ClientOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrder to fetch.
     */
    where?: ClientOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrders to fetch.
     */
    orderBy?: ClientOrderOrderByWithRelationInput | ClientOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientOrders.
     */
    cursor?: ClientOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientOrders.
     */
    distinct?: ClientOrderScalarFieldEnum | ClientOrderScalarFieldEnum[]
  }

  /**
   * ClientOrder findMany
   */
  export type ClientOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrders to fetch.
     */
    where?: ClientOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrders to fetch.
     */
    orderBy?: ClientOrderOrderByWithRelationInput | ClientOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientOrders.
     */
    cursor?: ClientOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrders.
     */
    skip?: number
    distinct?: ClientOrderScalarFieldEnum | ClientOrderScalarFieldEnum[]
  }

  /**
   * ClientOrder create
   */
  export type ClientOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a ClientOrder.
     */
    data: XOR<ClientOrderCreateInput, ClientOrderUncheckedCreateInput>
  }

  /**
   * ClientOrder createMany
   */
  export type ClientOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientOrders.
     */
    data: ClientOrderCreateManyInput | ClientOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientOrder createManyAndReturn
   */
  export type ClientOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * The data used to create many ClientOrders.
     */
    data: ClientOrderCreateManyInput | ClientOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientOrder update
   */
  export type ClientOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a ClientOrder.
     */
    data: XOR<ClientOrderUpdateInput, ClientOrderUncheckedUpdateInput>
    /**
     * Choose, which ClientOrder to update.
     */
    where: ClientOrderWhereUniqueInput
  }

  /**
   * ClientOrder updateMany
   */
  export type ClientOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientOrders.
     */
    data: XOR<ClientOrderUpdateManyMutationInput, ClientOrderUncheckedUpdateManyInput>
    /**
     * Filter which ClientOrders to update
     */
    where?: ClientOrderWhereInput
    /**
     * Limit how many ClientOrders to update.
     */
    limit?: number
  }

  /**
   * ClientOrder updateManyAndReturn
   */
  export type ClientOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * The data used to update ClientOrders.
     */
    data: XOR<ClientOrderUpdateManyMutationInput, ClientOrderUncheckedUpdateManyInput>
    /**
     * Filter which ClientOrders to update
     */
    where?: ClientOrderWhereInput
    /**
     * Limit how many ClientOrders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientOrder upsert
   */
  export type ClientOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the ClientOrder to update in case it exists.
     */
    where: ClientOrderWhereUniqueInput
    /**
     * In case the ClientOrder found by the `where` argument doesn't exist, create a new ClientOrder with this data.
     */
    create: XOR<ClientOrderCreateInput, ClientOrderUncheckedCreateInput>
    /**
     * In case the ClientOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientOrderUpdateInput, ClientOrderUncheckedUpdateInput>
  }

  /**
   * ClientOrder delete
   */
  export type ClientOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    /**
     * Filter which ClientOrder to delete.
     */
    where: ClientOrderWhereUniqueInput
  }

  /**
   * ClientOrder deleteMany
   */
  export type ClientOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientOrders to delete
     */
    where?: ClientOrderWhereInput
    /**
     * Limit how many ClientOrders to delete.
     */
    limit?: number
  }

  /**
   * ClientOrder.client_order_product_lines
   */
  export type ClientOrder$client_order_product_linesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    where?: client_order_product_linesWhereInput
    orderBy?: client_order_product_linesOrderByWithRelationInput | client_order_product_linesOrderByWithRelationInput[]
    cursor?: client_order_product_linesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Client_order_product_linesScalarFieldEnum | Client_order_product_linesScalarFieldEnum[]
  }

  /**
   * ClientOrder.client_order_thermal_printers
   */
  export type ClientOrder$client_order_thermal_printersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    where?: client_order_thermal_printersWhereInput
  }

  /**
   * ClientOrder.client_order_tickets
   */
  export type ClientOrder$client_order_ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    where?: ClientOrderTicketWhereInput
  }

  /**
   * ClientOrder.client_order_transactions
   */
  export type ClientOrder$client_order_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    where?: ClientOrderTransactionWhereInput
    orderBy?: ClientOrderTransactionOrderByWithRelationInput | ClientOrderTransactionOrderByWithRelationInput[]
    cursor?: ClientOrderTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientOrderTransactionScalarFieldEnum | ClientOrderTransactionScalarFieldEnum[]
  }

  /**
   * ClientOrder without action
   */
  export type ClientOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
  }


  /**
   * Model ClientOrderTicket
   */

  export type AggregateClientOrderTicket = {
    _count: ClientOrderTicketCountAggregateOutputType | null
    _min: ClientOrderTicketMinAggregateOutputType | null
    _max: ClientOrderTicketMaxAggregateOutputType | null
  }

  export type ClientOrderTicketMinAggregateOutputType = {
    orderId: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientOrderTicketMaxAggregateOutputType = {
    orderId: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientOrderTicketCountAggregateOutputType = {
    orderId: number
    tickets: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClientOrderTicketMinAggregateInputType = {
    orderId?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientOrderTicketMaxAggregateInputType = {
    orderId?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientOrderTicketCountAggregateInputType = {
    orderId?: true
    tickets?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClientOrderTicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientOrderTicket to aggregate.
     */
    where?: ClientOrderTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTickets to fetch.
     */
    orderBy?: ClientOrderTicketOrderByWithRelationInput | ClientOrderTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientOrderTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientOrderTickets
    **/
    _count?: true | ClientOrderTicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientOrderTicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientOrderTicketMaxAggregateInputType
  }

  export type GetClientOrderTicketAggregateType<T extends ClientOrderTicketAggregateArgs> = {
        [P in keyof T & keyof AggregateClientOrderTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientOrderTicket[P]>
      : GetScalarType<T[P], AggregateClientOrderTicket[P]>
  }




  export type ClientOrderTicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderTicketWhereInput
    orderBy?: ClientOrderTicketOrderByWithAggregationInput | ClientOrderTicketOrderByWithAggregationInput[]
    by: ClientOrderTicketScalarFieldEnum[] | ClientOrderTicketScalarFieldEnum
    having?: ClientOrderTicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientOrderTicketCountAggregateInputType | true
    _min?: ClientOrderTicketMinAggregateInputType
    _max?: ClientOrderTicketMaxAggregateInputType
  }

  export type ClientOrderTicketGroupByOutputType = {
    orderId: string
    tickets: JsonValue
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: ClientOrderTicketCountAggregateOutputType | null
    _min: ClientOrderTicketMinAggregateOutputType | null
    _max: ClientOrderTicketMaxAggregateOutputType | null
  }

  type GetClientOrderTicketGroupByPayload<T extends ClientOrderTicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientOrderTicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientOrderTicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientOrderTicketGroupByOutputType[P]>
            : GetScalarType<T[P], ClientOrderTicketGroupByOutputType[P]>
        }
      >
    >


  export type ClientOrderTicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    tickets?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrderTicket"]>

  export type ClientOrderTicketSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    tickets?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrderTicket"]>

  export type ClientOrderTicketSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    tickets?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrderTicket"]>

  export type ClientOrderTicketSelectScalar = {
    orderId?: boolean
    tickets?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ClientOrderTicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"orderId" | "tickets" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["clientOrderTicket"]>
  export type ClientOrderTicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type ClientOrderTicketIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type ClientOrderTicketIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }

  export type $ClientOrderTicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientOrderTicket"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      client_orders: Prisma.$ClientOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      orderId: string
      tickets: Prisma.JsonValue
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["clientOrderTicket"]>
    composites: {}
  }

  type ClientOrderTicketGetPayload<S extends boolean | null | undefined | ClientOrderTicketDefaultArgs> = $Result.GetResult<Prisma.$ClientOrderTicketPayload, S>

  type ClientOrderTicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientOrderTicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientOrderTicketCountAggregateInputType | true
    }

  export interface ClientOrderTicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientOrderTicket'], meta: { name: 'ClientOrderTicket' } }
    /**
     * Find zero or one ClientOrderTicket that matches the filter.
     * @param {ClientOrderTicketFindUniqueArgs} args - Arguments to find a ClientOrderTicket
     * @example
     * // Get one ClientOrderTicket
     * const clientOrderTicket = await prisma.clientOrderTicket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientOrderTicketFindUniqueArgs>(args: SelectSubset<T, ClientOrderTicketFindUniqueArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClientOrderTicket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientOrderTicketFindUniqueOrThrowArgs} args - Arguments to find a ClientOrderTicket
     * @example
     * // Get one ClientOrderTicket
     * const clientOrderTicket = await prisma.clientOrderTicket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientOrderTicketFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientOrderTicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientOrderTicket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketFindFirstArgs} args - Arguments to find a ClientOrderTicket
     * @example
     * // Get one ClientOrderTicket
     * const clientOrderTicket = await prisma.clientOrderTicket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientOrderTicketFindFirstArgs>(args?: SelectSubset<T, ClientOrderTicketFindFirstArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientOrderTicket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketFindFirstOrThrowArgs} args - Arguments to find a ClientOrderTicket
     * @example
     * // Get one ClientOrderTicket
     * const clientOrderTicket = await prisma.clientOrderTicket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientOrderTicketFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientOrderTicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClientOrderTickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientOrderTickets
     * const clientOrderTickets = await prisma.clientOrderTicket.findMany()
     * 
     * // Get first 10 ClientOrderTickets
     * const clientOrderTickets = await prisma.clientOrderTicket.findMany({ take: 10 })
     * 
     * // Only select the `orderId`
     * const clientOrderTicketWithOrderIdOnly = await prisma.clientOrderTicket.findMany({ select: { orderId: true } })
     * 
     */
    findMany<T extends ClientOrderTicketFindManyArgs>(args?: SelectSubset<T, ClientOrderTicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClientOrderTicket.
     * @param {ClientOrderTicketCreateArgs} args - Arguments to create a ClientOrderTicket.
     * @example
     * // Create one ClientOrderTicket
     * const ClientOrderTicket = await prisma.clientOrderTicket.create({
     *   data: {
     *     // ... data to create a ClientOrderTicket
     *   }
     * })
     * 
     */
    create<T extends ClientOrderTicketCreateArgs>(args: SelectSubset<T, ClientOrderTicketCreateArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClientOrderTickets.
     * @param {ClientOrderTicketCreateManyArgs} args - Arguments to create many ClientOrderTickets.
     * @example
     * // Create many ClientOrderTickets
     * const clientOrderTicket = await prisma.clientOrderTicket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientOrderTicketCreateManyArgs>(args?: SelectSubset<T, ClientOrderTicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientOrderTickets and returns the data saved in the database.
     * @param {ClientOrderTicketCreateManyAndReturnArgs} args - Arguments to create many ClientOrderTickets.
     * @example
     * // Create many ClientOrderTickets
     * const clientOrderTicket = await prisma.clientOrderTicket.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientOrderTickets and only return the `orderId`
     * const clientOrderTicketWithOrderIdOnly = await prisma.clientOrderTicket.createManyAndReturn({
     *   select: { orderId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientOrderTicketCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientOrderTicketCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClientOrderTicket.
     * @param {ClientOrderTicketDeleteArgs} args - Arguments to delete one ClientOrderTicket.
     * @example
     * // Delete one ClientOrderTicket
     * const ClientOrderTicket = await prisma.clientOrderTicket.delete({
     *   where: {
     *     // ... filter to delete one ClientOrderTicket
     *   }
     * })
     * 
     */
    delete<T extends ClientOrderTicketDeleteArgs>(args: SelectSubset<T, ClientOrderTicketDeleteArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClientOrderTicket.
     * @param {ClientOrderTicketUpdateArgs} args - Arguments to update one ClientOrderTicket.
     * @example
     * // Update one ClientOrderTicket
     * const clientOrderTicket = await prisma.clientOrderTicket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientOrderTicketUpdateArgs>(args: SelectSubset<T, ClientOrderTicketUpdateArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClientOrderTickets.
     * @param {ClientOrderTicketDeleteManyArgs} args - Arguments to filter ClientOrderTickets to delete.
     * @example
     * // Delete a few ClientOrderTickets
     * const { count } = await prisma.clientOrderTicket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientOrderTicketDeleteManyArgs>(args?: SelectSubset<T, ClientOrderTicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientOrderTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientOrderTickets
     * const clientOrderTicket = await prisma.clientOrderTicket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientOrderTicketUpdateManyArgs>(args: SelectSubset<T, ClientOrderTicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientOrderTickets and returns the data updated in the database.
     * @param {ClientOrderTicketUpdateManyAndReturnArgs} args - Arguments to update many ClientOrderTickets.
     * @example
     * // Update many ClientOrderTickets
     * const clientOrderTicket = await prisma.clientOrderTicket.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClientOrderTickets and only return the `orderId`
     * const clientOrderTicketWithOrderIdOnly = await prisma.clientOrderTicket.updateManyAndReturn({
     *   select: { orderId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientOrderTicketUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientOrderTicketUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClientOrderTicket.
     * @param {ClientOrderTicketUpsertArgs} args - Arguments to update or create a ClientOrderTicket.
     * @example
     * // Update or create a ClientOrderTicket
     * const clientOrderTicket = await prisma.clientOrderTicket.upsert({
     *   create: {
     *     // ... data to create a ClientOrderTicket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientOrderTicket we want to update
     *   }
     * })
     */
    upsert<T extends ClientOrderTicketUpsertArgs>(args: SelectSubset<T, ClientOrderTicketUpsertArgs<ExtArgs>>): Prisma__ClientOrderTicketClient<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClientOrderTickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketCountArgs} args - Arguments to filter ClientOrderTickets to count.
     * @example
     * // Count the number of ClientOrderTickets
     * const count = await prisma.clientOrderTicket.count({
     *   where: {
     *     // ... the filter for the ClientOrderTickets we want to count
     *   }
     * })
    **/
    count<T extends ClientOrderTicketCountArgs>(
      args?: Subset<T, ClientOrderTicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientOrderTicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientOrderTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientOrderTicketAggregateArgs>(args: Subset<T, ClientOrderTicketAggregateArgs>): Prisma.PrismaPromise<GetClientOrderTicketAggregateType<T>>

    /**
     * Group by ClientOrderTicket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientOrderTicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientOrderTicketGroupByArgs['orderBy'] }
        : { orderBy?: ClientOrderTicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientOrderTicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientOrderTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientOrderTicket model
   */
  readonly fields: ClientOrderTicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientOrderTicket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientOrderTicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client_orders<T extends ClientOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrderDefaultArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientOrderTicket model
   */
  interface ClientOrderTicketFieldRefs {
    readonly orderId: FieldRef<"ClientOrderTicket", 'String'>
    readonly tickets: FieldRef<"ClientOrderTicket", 'Json'>
    readonly businessId: FieldRef<"ClientOrderTicket", 'String'>
    readonly createdAt: FieldRef<"ClientOrderTicket", 'DateTime'>
    readonly updatedAt: FieldRef<"ClientOrderTicket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClientOrderTicket findUnique
   */
  export type ClientOrderTicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTicket to fetch.
     */
    where: ClientOrderTicketWhereUniqueInput
  }

  /**
   * ClientOrderTicket findUniqueOrThrow
   */
  export type ClientOrderTicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTicket to fetch.
     */
    where: ClientOrderTicketWhereUniqueInput
  }

  /**
   * ClientOrderTicket findFirst
   */
  export type ClientOrderTicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTicket to fetch.
     */
    where?: ClientOrderTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTickets to fetch.
     */
    orderBy?: ClientOrderTicketOrderByWithRelationInput | ClientOrderTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientOrderTickets.
     */
    cursor?: ClientOrderTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientOrderTickets.
     */
    distinct?: ClientOrderTicketScalarFieldEnum | ClientOrderTicketScalarFieldEnum[]
  }

  /**
   * ClientOrderTicket findFirstOrThrow
   */
  export type ClientOrderTicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTicket to fetch.
     */
    where?: ClientOrderTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTickets to fetch.
     */
    orderBy?: ClientOrderTicketOrderByWithRelationInput | ClientOrderTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientOrderTickets.
     */
    cursor?: ClientOrderTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientOrderTickets.
     */
    distinct?: ClientOrderTicketScalarFieldEnum | ClientOrderTicketScalarFieldEnum[]
  }

  /**
   * ClientOrderTicket findMany
   */
  export type ClientOrderTicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTickets to fetch.
     */
    where?: ClientOrderTicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTickets to fetch.
     */
    orderBy?: ClientOrderTicketOrderByWithRelationInput | ClientOrderTicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientOrderTickets.
     */
    cursor?: ClientOrderTicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTickets.
     */
    skip?: number
    distinct?: ClientOrderTicketScalarFieldEnum | ClientOrderTicketScalarFieldEnum[]
  }

  /**
   * ClientOrderTicket create
   */
  export type ClientOrderTicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * The data needed to create a ClientOrderTicket.
     */
    data: XOR<ClientOrderTicketCreateInput, ClientOrderTicketUncheckedCreateInput>
  }

  /**
   * ClientOrderTicket createMany
   */
  export type ClientOrderTicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientOrderTickets.
     */
    data: ClientOrderTicketCreateManyInput | ClientOrderTicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientOrderTicket createManyAndReturn
   */
  export type ClientOrderTicketCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * The data used to create many ClientOrderTickets.
     */
    data: ClientOrderTicketCreateManyInput | ClientOrderTicketCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientOrderTicket update
   */
  export type ClientOrderTicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * The data needed to update a ClientOrderTicket.
     */
    data: XOR<ClientOrderTicketUpdateInput, ClientOrderTicketUncheckedUpdateInput>
    /**
     * Choose, which ClientOrderTicket to update.
     */
    where: ClientOrderTicketWhereUniqueInput
  }

  /**
   * ClientOrderTicket updateMany
   */
  export type ClientOrderTicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientOrderTickets.
     */
    data: XOR<ClientOrderTicketUpdateManyMutationInput, ClientOrderTicketUncheckedUpdateManyInput>
    /**
     * Filter which ClientOrderTickets to update
     */
    where?: ClientOrderTicketWhereInput
    /**
     * Limit how many ClientOrderTickets to update.
     */
    limit?: number
  }

  /**
   * ClientOrderTicket updateManyAndReturn
   */
  export type ClientOrderTicketUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * The data used to update ClientOrderTickets.
     */
    data: XOR<ClientOrderTicketUpdateManyMutationInput, ClientOrderTicketUncheckedUpdateManyInput>
    /**
     * Filter which ClientOrderTickets to update
     */
    where?: ClientOrderTicketWhereInput
    /**
     * Limit how many ClientOrderTickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientOrderTicket upsert
   */
  export type ClientOrderTicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * The filter to search for the ClientOrderTicket to update in case it exists.
     */
    where: ClientOrderTicketWhereUniqueInput
    /**
     * In case the ClientOrderTicket found by the `where` argument doesn't exist, create a new ClientOrderTicket with this data.
     */
    create: XOR<ClientOrderTicketCreateInput, ClientOrderTicketUncheckedCreateInput>
    /**
     * In case the ClientOrderTicket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientOrderTicketUpdateInput, ClientOrderTicketUncheckedUpdateInput>
  }

  /**
   * ClientOrderTicket delete
   */
  export type ClientOrderTicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    /**
     * Filter which ClientOrderTicket to delete.
     */
    where: ClientOrderTicketWhereUniqueInput
  }

  /**
   * ClientOrderTicket deleteMany
   */
  export type ClientOrderTicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientOrderTickets to delete
     */
    where?: ClientOrderTicketWhereInput
    /**
     * Limit how many ClientOrderTickets to delete.
     */
    limit?: number
  }

  /**
   * ClientOrderTicket without action
   */
  export type ClientOrderTicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
  }


  /**
   * Model ClientOrderTransaction
   */

  export type AggregateClientOrderTransaction = {
    _count: ClientOrderTransactionCountAggregateOutputType | null
    _avg: ClientOrderTransactionAvgAggregateOutputType | null
    _sum: ClientOrderTransactionSumAggregateOutputType | null
    _min: ClientOrderTransactionMinAggregateOutputType | null
    _max: ClientOrderTransactionMaxAggregateOutputType | null
  }

  export type ClientOrderTransactionAvgAggregateOutputType = {
    transactionAmount: number | null
  }

  export type ClientOrderTransactionSumAggregateOutputType = {
    transactionAmount: number | null
  }

  export type ClientOrderTransactionMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    externalTransactionId: string | null
    transactionAmount: number | null
    transactionCurrencyIso: string | null
    status: $Enums.TransactionStatus | null
    paymentMethod: $Enums.PaymentMethod | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientOrderTransactionMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    externalTransactionId: string | null
    transactionAmount: number | null
    transactionCurrencyIso: string | null
    status: $Enums.TransactionStatus | null
    paymentMethod: $Enums.PaymentMethod | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClientOrderTransactionCountAggregateOutputType = {
    id: number
    orderId: number
    externalTransactionId: number
    transactionAmount: number
    transactionCurrencyIso: number
    status: number
    paymentMethod: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClientOrderTransactionAvgAggregateInputType = {
    transactionAmount?: true
  }

  export type ClientOrderTransactionSumAggregateInputType = {
    transactionAmount?: true
  }

  export type ClientOrderTransactionMinAggregateInputType = {
    id?: true
    orderId?: true
    externalTransactionId?: true
    transactionAmount?: true
    transactionCurrencyIso?: true
    status?: true
    paymentMethod?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientOrderTransactionMaxAggregateInputType = {
    id?: true
    orderId?: true
    externalTransactionId?: true
    transactionAmount?: true
    transactionCurrencyIso?: true
    status?: true
    paymentMethod?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClientOrderTransactionCountAggregateInputType = {
    id?: true
    orderId?: true
    externalTransactionId?: true
    transactionAmount?: true
    transactionCurrencyIso?: true
    status?: true
    paymentMethod?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClientOrderTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientOrderTransaction to aggregate.
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTransactions to fetch.
     */
    orderBy?: ClientOrderTransactionOrderByWithRelationInput | ClientOrderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientOrderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientOrderTransactions
    **/
    _count?: true | ClientOrderTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientOrderTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientOrderTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientOrderTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientOrderTransactionMaxAggregateInputType
  }

  export type GetClientOrderTransactionAggregateType<T extends ClientOrderTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateClientOrderTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientOrderTransaction[P]>
      : GetScalarType<T[P], AggregateClientOrderTransaction[P]>
  }




  export type ClientOrderTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientOrderTransactionWhereInput
    orderBy?: ClientOrderTransactionOrderByWithAggregationInput | ClientOrderTransactionOrderByWithAggregationInput[]
    by: ClientOrderTransactionScalarFieldEnum[] | ClientOrderTransactionScalarFieldEnum
    having?: ClientOrderTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientOrderTransactionCountAggregateInputType | true
    _avg?: ClientOrderTransactionAvgAggregateInputType
    _sum?: ClientOrderTransactionSumAggregateInputType
    _min?: ClientOrderTransactionMinAggregateInputType
    _max?: ClientOrderTransactionMaxAggregateInputType
  }

  export type ClientOrderTransactionGroupByOutputType = {
    id: string
    orderId: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod: $Enums.PaymentMethod | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: ClientOrderTransactionCountAggregateOutputType | null
    _avg: ClientOrderTransactionAvgAggregateOutputType | null
    _sum: ClientOrderTransactionSumAggregateOutputType | null
    _min: ClientOrderTransactionMinAggregateOutputType | null
    _max: ClientOrderTransactionMaxAggregateOutputType | null
  }

  type GetClientOrderTransactionGroupByPayload<T extends ClientOrderTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientOrderTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientOrderTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientOrderTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], ClientOrderTransactionGroupByOutputType[P]>
        }
      >
    >


  export type ClientOrderTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    externalTransactionId?: boolean
    transactionAmount?: boolean
    transactionCurrencyIso?: boolean
    status?: boolean
    paymentMethod?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrderTransaction"]>

  export type ClientOrderTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    externalTransactionId?: boolean
    transactionAmount?: boolean
    transactionCurrencyIso?: boolean
    status?: boolean
    paymentMethod?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrderTransaction"]>

  export type ClientOrderTransactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    externalTransactionId?: boolean
    transactionAmount?: boolean
    transactionCurrencyIso?: boolean
    status?: boolean
    paymentMethod?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientOrderTransaction"]>

  export type ClientOrderTransactionSelectScalar = {
    id?: boolean
    orderId?: boolean
    externalTransactionId?: boolean
    transactionAmount?: boolean
    transactionCurrencyIso?: boolean
    status?: boolean
    paymentMethod?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ClientOrderTransactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "externalTransactionId" | "transactionAmount" | "transactionCurrencyIso" | "status" | "paymentMethod" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["clientOrderTransaction"]>
  export type ClientOrderTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type ClientOrderTransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type ClientOrderTransactionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }

  export type $ClientOrderTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientOrderTransaction"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      client_orders: Prisma.$ClientOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      externalTransactionId: string
      transactionAmount: number
      transactionCurrencyIso: string
      status: $Enums.TransactionStatus
      paymentMethod: $Enums.PaymentMethod | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["clientOrderTransaction"]>
    composites: {}
  }

  type ClientOrderTransactionGetPayload<S extends boolean | null | undefined | ClientOrderTransactionDefaultArgs> = $Result.GetResult<Prisma.$ClientOrderTransactionPayload, S>

  type ClientOrderTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientOrderTransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientOrderTransactionCountAggregateInputType | true
    }

  export interface ClientOrderTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientOrderTransaction'], meta: { name: 'ClientOrderTransaction' } }
    /**
     * Find zero or one ClientOrderTransaction that matches the filter.
     * @param {ClientOrderTransactionFindUniqueArgs} args - Arguments to find a ClientOrderTransaction
     * @example
     * // Get one ClientOrderTransaction
     * const clientOrderTransaction = await prisma.clientOrderTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientOrderTransactionFindUniqueArgs>(args: SelectSubset<T, ClientOrderTransactionFindUniqueArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClientOrderTransaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientOrderTransactionFindUniqueOrThrowArgs} args - Arguments to find a ClientOrderTransaction
     * @example
     * // Get one ClientOrderTransaction
     * const clientOrderTransaction = await prisma.clientOrderTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientOrderTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientOrderTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientOrderTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionFindFirstArgs} args - Arguments to find a ClientOrderTransaction
     * @example
     * // Get one ClientOrderTransaction
     * const clientOrderTransaction = await prisma.clientOrderTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientOrderTransactionFindFirstArgs>(args?: SelectSubset<T, ClientOrderTransactionFindFirstArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientOrderTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionFindFirstOrThrowArgs} args - Arguments to find a ClientOrderTransaction
     * @example
     * // Get one ClientOrderTransaction
     * const clientOrderTransaction = await prisma.clientOrderTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientOrderTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientOrderTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClientOrderTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientOrderTransactions
     * const clientOrderTransactions = await prisma.clientOrderTransaction.findMany()
     * 
     * // Get first 10 ClientOrderTransactions
     * const clientOrderTransactions = await prisma.clientOrderTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientOrderTransactionWithIdOnly = await prisma.clientOrderTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientOrderTransactionFindManyArgs>(args?: SelectSubset<T, ClientOrderTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClientOrderTransaction.
     * @param {ClientOrderTransactionCreateArgs} args - Arguments to create a ClientOrderTransaction.
     * @example
     * // Create one ClientOrderTransaction
     * const ClientOrderTransaction = await prisma.clientOrderTransaction.create({
     *   data: {
     *     // ... data to create a ClientOrderTransaction
     *   }
     * })
     * 
     */
    create<T extends ClientOrderTransactionCreateArgs>(args: SelectSubset<T, ClientOrderTransactionCreateArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClientOrderTransactions.
     * @param {ClientOrderTransactionCreateManyArgs} args - Arguments to create many ClientOrderTransactions.
     * @example
     * // Create many ClientOrderTransactions
     * const clientOrderTransaction = await prisma.clientOrderTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientOrderTransactionCreateManyArgs>(args?: SelectSubset<T, ClientOrderTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientOrderTransactions and returns the data saved in the database.
     * @param {ClientOrderTransactionCreateManyAndReturnArgs} args - Arguments to create many ClientOrderTransactions.
     * @example
     * // Create many ClientOrderTransactions
     * const clientOrderTransaction = await prisma.clientOrderTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientOrderTransactions and only return the `id`
     * const clientOrderTransactionWithIdOnly = await prisma.clientOrderTransaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientOrderTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientOrderTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClientOrderTransaction.
     * @param {ClientOrderTransactionDeleteArgs} args - Arguments to delete one ClientOrderTransaction.
     * @example
     * // Delete one ClientOrderTransaction
     * const ClientOrderTransaction = await prisma.clientOrderTransaction.delete({
     *   where: {
     *     // ... filter to delete one ClientOrderTransaction
     *   }
     * })
     * 
     */
    delete<T extends ClientOrderTransactionDeleteArgs>(args: SelectSubset<T, ClientOrderTransactionDeleteArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClientOrderTransaction.
     * @param {ClientOrderTransactionUpdateArgs} args - Arguments to update one ClientOrderTransaction.
     * @example
     * // Update one ClientOrderTransaction
     * const clientOrderTransaction = await prisma.clientOrderTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientOrderTransactionUpdateArgs>(args: SelectSubset<T, ClientOrderTransactionUpdateArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClientOrderTransactions.
     * @param {ClientOrderTransactionDeleteManyArgs} args - Arguments to filter ClientOrderTransactions to delete.
     * @example
     * // Delete a few ClientOrderTransactions
     * const { count } = await prisma.clientOrderTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientOrderTransactionDeleteManyArgs>(args?: SelectSubset<T, ClientOrderTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientOrderTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientOrderTransactions
     * const clientOrderTransaction = await prisma.clientOrderTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientOrderTransactionUpdateManyArgs>(args: SelectSubset<T, ClientOrderTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientOrderTransactions and returns the data updated in the database.
     * @param {ClientOrderTransactionUpdateManyAndReturnArgs} args - Arguments to update many ClientOrderTransactions.
     * @example
     * // Update many ClientOrderTransactions
     * const clientOrderTransaction = await prisma.clientOrderTransaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClientOrderTransactions and only return the `id`
     * const clientOrderTransactionWithIdOnly = await prisma.clientOrderTransaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientOrderTransactionUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientOrderTransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClientOrderTransaction.
     * @param {ClientOrderTransactionUpsertArgs} args - Arguments to update or create a ClientOrderTransaction.
     * @example
     * // Update or create a ClientOrderTransaction
     * const clientOrderTransaction = await prisma.clientOrderTransaction.upsert({
     *   create: {
     *     // ... data to create a ClientOrderTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientOrderTransaction we want to update
     *   }
     * })
     */
    upsert<T extends ClientOrderTransactionUpsertArgs>(args: SelectSubset<T, ClientOrderTransactionUpsertArgs<ExtArgs>>): Prisma__ClientOrderTransactionClient<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClientOrderTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionCountArgs} args - Arguments to filter ClientOrderTransactions to count.
     * @example
     * // Count the number of ClientOrderTransactions
     * const count = await prisma.clientOrderTransaction.count({
     *   where: {
     *     // ... the filter for the ClientOrderTransactions we want to count
     *   }
     * })
    **/
    count<T extends ClientOrderTransactionCountArgs>(
      args?: Subset<T, ClientOrderTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientOrderTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientOrderTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientOrderTransactionAggregateArgs>(args: Subset<T, ClientOrderTransactionAggregateArgs>): Prisma.PrismaPromise<GetClientOrderTransactionAggregateType<T>>

    /**
     * Group by ClientOrderTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientOrderTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientOrderTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientOrderTransactionGroupByArgs['orderBy'] }
        : { orderBy?: ClientOrderTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientOrderTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientOrderTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientOrderTransaction model
   */
  readonly fields: ClientOrderTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientOrderTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientOrderTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client_orders<T extends ClientOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrderDefaultArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientOrderTransaction model
   */
  interface ClientOrderTransactionFieldRefs {
    readonly id: FieldRef<"ClientOrderTransaction", 'String'>
    readonly orderId: FieldRef<"ClientOrderTransaction", 'String'>
    readonly externalTransactionId: FieldRef<"ClientOrderTransaction", 'String'>
    readonly transactionAmount: FieldRef<"ClientOrderTransaction", 'Float'>
    readonly transactionCurrencyIso: FieldRef<"ClientOrderTransaction", 'String'>
    readonly status: FieldRef<"ClientOrderTransaction", 'TransactionStatus'>
    readonly paymentMethod: FieldRef<"ClientOrderTransaction", 'PaymentMethod'>
    readonly businessId: FieldRef<"ClientOrderTransaction", 'String'>
    readonly createdAt: FieldRef<"ClientOrderTransaction", 'DateTime'>
    readonly updatedAt: FieldRef<"ClientOrderTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClientOrderTransaction findUnique
   */
  export type ClientOrderTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTransaction to fetch.
     */
    where: ClientOrderTransactionWhereUniqueInput
  }

  /**
   * ClientOrderTransaction findUniqueOrThrow
   */
  export type ClientOrderTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTransaction to fetch.
     */
    where: ClientOrderTransactionWhereUniqueInput
  }

  /**
   * ClientOrderTransaction findFirst
   */
  export type ClientOrderTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTransaction to fetch.
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTransactions to fetch.
     */
    orderBy?: ClientOrderTransactionOrderByWithRelationInput | ClientOrderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientOrderTransactions.
     */
    cursor?: ClientOrderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientOrderTransactions.
     */
    distinct?: ClientOrderTransactionScalarFieldEnum | ClientOrderTransactionScalarFieldEnum[]
  }

  /**
   * ClientOrderTransaction findFirstOrThrow
   */
  export type ClientOrderTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTransaction to fetch.
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTransactions to fetch.
     */
    orderBy?: ClientOrderTransactionOrderByWithRelationInput | ClientOrderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientOrderTransactions.
     */
    cursor?: ClientOrderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientOrderTransactions.
     */
    distinct?: ClientOrderTransactionScalarFieldEnum | ClientOrderTransactionScalarFieldEnum[]
  }

  /**
   * ClientOrderTransaction findMany
   */
  export type ClientOrderTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ClientOrderTransactions to fetch.
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientOrderTransactions to fetch.
     */
    orderBy?: ClientOrderTransactionOrderByWithRelationInput | ClientOrderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientOrderTransactions.
     */
    cursor?: ClientOrderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientOrderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientOrderTransactions.
     */
    skip?: number
    distinct?: ClientOrderTransactionScalarFieldEnum | ClientOrderTransactionScalarFieldEnum[]
  }

  /**
   * ClientOrderTransaction create
   */
  export type ClientOrderTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a ClientOrderTransaction.
     */
    data: XOR<ClientOrderTransactionCreateInput, ClientOrderTransactionUncheckedCreateInput>
  }

  /**
   * ClientOrderTransaction createMany
   */
  export type ClientOrderTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientOrderTransactions.
     */
    data: ClientOrderTransactionCreateManyInput | ClientOrderTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientOrderTransaction createManyAndReturn
   */
  export type ClientOrderTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * The data used to create many ClientOrderTransactions.
     */
    data: ClientOrderTransactionCreateManyInput | ClientOrderTransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientOrderTransaction update
   */
  export type ClientOrderTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a ClientOrderTransaction.
     */
    data: XOR<ClientOrderTransactionUpdateInput, ClientOrderTransactionUncheckedUpdateInput>
    /**
     * Choose, which ClientOrderTransaction to update.
     */
    where: ClientOrderTransactionWhereUniqueInput
  }

  /**
   * ClientOrderTransaction updateMany
   */
  export type ClientOrderTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientOrderTransactions.
     */
    data: XOR<ClientOrderTransactionUpdateManyMutationInput, ClientOrderTransactionUncheckedUpdateManyInput>
    /**
     * Filter which ClientOrderTransactions to update
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * Limit how many ClientOrderTransactions to update.
     */
    limit?: number
  }

  /**
   * ClientOrderTransaction updateManyAndReturn
   */
  export type ClientOrderTransactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * The data used to update ClientOrderTransactions.
     */
    data: XOR<ClientOrderTransactionUpdateManyMutationInput, ClientOrderTransactionUncheckedUpdateManyInput>
    /**
     * Filter which ClientOrderTransactions to update
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * Limit how many ClientOrderTransactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientOrderTransaction upsert
   */
  export type ClientOrderTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the ClientOrderTransaction to update in case it exists.
     */
    where: ClientOrderTransactionWhereUniqueInput
    /**
     * In case the ClientOrderTransaction found by the `where` argument doesn't exist, create a new ClientOrderTransaction with this data.
     */
    create: XOR<ClientOrderTransactionCreateInput, ClientOrderTransactionUncheckedCreateInput>
    /**
     * In case the ClientOrderTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientOrderTransactionUpdateInput, ClientOrderTransactionUncheckedUpdateInput>
  }

  /**
   * ClientOrderTransaction delete
   */
  export type ClientOrderTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    /**
     * Filter which ClientOrderTransaction to delete.
     */
    where: ClientOrderTransactionWhereUniqueInput
  }

  /**
   * ClientOrderTransaction deleteMany
   */
  export type ClientOrderTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientOrderTransactions to delete
     */
    where?: ClientOrderTransactionWhereInput
    /**
     * Limit how many ClientOrderTransactions to delete.
     */
    limit?: number
  }

  /**
   * ClientOrderTransaction without action
   */
  export type ClientOrderTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
  }


  /**
   * Model BusinessSupplierPicture
   */

  export type AggregateBusinessSupplierPicture = {
    _count: BusinessSupplierPictureCountAggregateOutputType | null
    _min: BusinessSupplierPictureMinAggregateOutputType | null
    _max: BusinessSupplierPictureMaxAggregateOutputType | null
  }

  export type BusinessSupplierPictureMinAggregateOutputType = {
    id: string | null
    supplierId: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessSupplierPictureMaxAggregateOutputType = {
    id: string | null
    supplierId: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessSupplierPictureCountAggregateOutputType = {
    id: number
    supplierId: number
    url: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessSupplierPictureMinAggregateInputType = {
    id?: true
    supplierId?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessSupplierPictureMaxAggregateInputType = {
    id?: true
    supplierId?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessSupplierPictureCountAggregateInputType = {
    id?: true
    supplierId?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessSupplierPictureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessSupplierPicture to aggregate.
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessSupplierPictures to fetch.
     */
    orderBy?: BusinessSupplierPictureOrderByWithRelationInput | BusinessSupplierPictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessSupplierPictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessSupplierPictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessSupplierPictures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessSupplierPictures
    **/
    _count?: true | BusinessSupplierPictureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessSupplierPictureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessSupplierPictureMaxAggregateInputType
  }

  export type GetBusinessSupplierPictureAggregateType<T extends BusinessSupplierPictureAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessSupplierPicture]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessSupplierPicture[P]>
      : GetScalarType<T[P], AggregateBusinessSupplierPicture[P]>
  }




  export type BusinessSupplierPictureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessSupplierPictureWhereInput
    orderBy?: BusinessSupplierPictureOrderByWithAggregationInput | BusinessSupplierPictureOrderByWithAggregationInput[]
    by: BusinessSupplierPictureScalarFieldEnum[] | BusinessSupplierPictureScalarFieldEnum
    having?: BusinessSupplierPictureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessSupplierPictureCountAggregateInputType | true
    _min?: BusinessSupplierPictureMinAggregateInputType
    _max?: BusinessSupplierPictureMaxAggregateInputType
  }

  export type BusinessSupplierPictureGroupByOutputType = {
    id: string
    supplierId: string
    url: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessSupplierPictureCountAggregateOutputType | null
    _min: BusinessSupplierPictureMinAggregateOutputType | null
    _max: BusinessSupplierPictureMaxAggregateOutputType | null
  }

  type GetBusinessSupplierPictureGroupByPayload<T extends BusinessSupplierPictureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessSupplierPictureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessSupplierPictureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessSupplierPictureGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessSupplierPictureGroupByOutputType[P]>
        }
      >
    >


  export type BusinessSupplierPictureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_information?: boolean | business_supplier_informationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessSupplierPicture"]>

  export type BusinessSupplierPictureSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_information?: boolean | business_supplier_informationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessSupplierPicture"]>

  export type BusinessSupplierPictureSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_information?: boolean | business_supplier_informationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessSupplierPicture"]>

  export type BusinessSupplierPictureSelectScalar = {
    id?: boolean
    supplierId?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessSupplierPictureOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supplierId" | "url" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessSupplierPicture"]>
  export type BusinessSupplierPictureInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_information?: boolean | business_supplier_informationDefaultArgs<ExtArgs>
  }
  export type BusinessSupplierPictureIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_information?: boolean | business_supplier_informationDefaultArgs<ExtArgs>
  }
  export type BusinessSupplierPictureIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_information?: boolean | business_supplier_informationDefaultArgs<ExtArgs>
  }

  export type $BusinessSupplierPicturePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessSupplierPicture"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_supplier_information: Prisma.$business_supplier_informationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supplierId: string
      url: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessSupplierPicture"]>
    composites: {}
  }

  type BusinessSupplierPictureGetPayload<S extends boolean | null | undefined | BusinessSupplierPictureDefaultArgs> = $Result.GetResult<Prisma.$BusinessSupplierPicturePayload, S>

  type BusinessSupplierPictureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessSupplierPictureFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessSupplierPictureCountAggregateInputType | true
    }

  export interface BusinessSupplierPictureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessSupplierPicture'], meta: { name: 'BusinessSupplierPicture' } }
    /**
     * Find zero or one BusinessSupplierPicture that matches the filter.
     * @param {BusinessSupplierPictureFindUniqueArgs} args - Arguments to find a BusinessSupplierPicture
     * @example
     * // Get one BusinessSupplierPicture
     * const businessSupplierPicture = await prisma.businessSupplierPicture.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessSupplierPictureFindUniqueArgs>(args: SelectSubset<T, BusinessSupplierPictureFindUniqueArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessSupplierPicture that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessSupplierPictureFindUniqueOrThrowArgs} args - Arguments to find a BusinessSupplierPicture
     * @example
     * // Get one BusinessSupplierPicture
     * const businessSupplierPicture = await prisma.businessSupplierPicture.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessSupplierPictureFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessSupplierPictureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessSupplierPicture that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureFindFirstArgs} args - Arguments to find a BusinessSupplierPicture
     * @example
     * // Get one BusinessSupplierPicture
     * const businessSupplierPicture = await prisma.businessSupplierPicture.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessSupplierPictureFindFirstArgs>(args?: SelectSubset<T, BusinessSupplierPictureFindFirstArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessSupplierPicture that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureFindFirstOrThrowArgs} args - Arguments to find a BusinessSupplierPicture
     * @example
     * // Get one BusinessSupplierPicture
     * const businessSupplierPicture = await prisma.businessSupplierPicture.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessSupplierPictureFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessSupplierPictureFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessSupplierPictures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessSupplierPictures
     * const businessSupplierPictures = await prisma.businessSupplierPicture.findMany()
     * 
     * // Get first 10 BusinessSupplierPictures
     * const businessSupplierPictures = await prisma.businessSupplierPicture.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessSupplierPictureWithIdOnly = await prisma.businessSupplierPicture.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessSupplierPictureFindManyArgs>(args?: SelectSubset<T, BusinessSupplierPictureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessSupplierPicture.
     * @param {BusinessSupplierPictureCreateArgs} args - Arguments to create a BusinessSupplierPicture.
     * @example
     * // Create one BusinessSupplierPicture
     * const BusinessSupplierPicture = await prisma.businessSupplierPicture.create({
     *   data: {
     *     // ... data to create a BusinessSupplierPicture
     *   }
     * })
     * 
     */
    create<T extends BusinessSupplierPictureCreateArgs>(args: SelectSubset<T, BusinessSupplierPictureCreateArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessSupplierPictures.
     * @param {BusinessSupplierPictureCreateManyArgs} args - Arguments to create many BusinessSupplierPictures.
     * @example
     * // Create many BusinessSupplierPictures
     * const businessSupplierPicture = await prisma.businessSupplierPicture.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessSupplierPictureCreateManyArgs>(args?: SelectSubset<T, BusinessSupplierPictureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessSupplierPictures and returns the data saved in the database.
     * @param {BusinessSupplierPictureCreateManyAndReturnArgs} args - Arguments to create many BusinessSupplierPictures.
     * @example
     * // Create many BusinessSupplierPictures
     * const businessSupplierPicture = await prisma.businessSupplierPicture.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessSupplierPictures and only return the `id`
     * const businessSupplierPictureWithIdOnly = await prisma.businessSupplierPicture.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessSupplierPictureCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessSupplierPictureCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessSupplierPicture.
     * @param {BusinessSupplierPictureDeleteArgs} args - Arguments to delete one BusinessSupplierPicture.
     * @example
     * // Delete one BusinessSupplierPicture
     * const BusinessSupplierPicture = await prisma.businessSupplierPicture.delete({
     *   where: {
     *     // ... filter to delete one BusinessSupplierPicture
     *   }
     * })
     * 
     */
    delete<T extends BusinessSupplierPictureDeleteArgs>(args: SelectSubset<T, BusinessSupplierPictureDeleteArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessSupplierPicture.
     * @param {BusinessSupplierPictureUpdateArgs} args - Arguments to update one BusinessSupplierPicture.
     * @example
     * // Update one BusinessSupplierPicture
     * const businessSupplierPicture = await prisma.businessSupplierPicture.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessSupplierPictureUpdateArgs>(args: SelectSubset<T, BusinessSupplierPictureUpdateArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessSupplierPictures.
     * @param {BusinessSupplierPictureDeleteManyArgs} args - Arguments to filter BusinessSupplierPictures to delete.
     * @example
     * // Delete a few BusinessSupplierPictures
     * const { count } = await prisma.businessSupplierPicture.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessSupplierPictureDeleteManyArgs>(args?: SelectSubset<T, BusinessSupplierPictureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessSupplierPictures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessSupplierPictures
     * const businessSupplierPicture = await prisma.businessSupplierPicture.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessSupplierPictureUpdateManyArgs>(args: SelectSubset<T, BusinessSupplierPictureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessSupplierPictures and returns the data updated in the database.
     * @param {BusinessSupplierPictureUpdateManyAndReturnArgs} args - Arguments to update many BusinessSupplierPictures.
     * @example
     * // Update many BusinessSupplierPictures
     * const businessSupplierPicture = await prisma.businessSupplierPicture.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessSupplierPictures and only return the `id`
     * const businessSupplierPictureWithIdOnly = await prisma.businessSupplierPicture.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessSupplierPictureUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessSupplierPictureUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessSupplierPicture.
     * @param {BusinessSupplierPictureUpsertArgs} args - Arguments to update or create a BusinessSupplierPicture.
     * @example
     * // Update or create a BusinessSupplierPicture
     * const businessSupplierPicture = await prisma.businessSupplierPicture.upsert({
     *   create: {
     *     // ... data to create a BusinessSupplierPicture
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessSupplierPicture we want to update
     *   }
     * })
     */
    upsert<T extends BusinessSupplierPictureUpsertArgs>(args: SelectSubset<T, BusinessSupplierPictureUpsertArgs<ExtArgs>>): Prisma__BusinessSupplierPictureClient<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessSupplierPictures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureCountArgs} args - Arguments to filter BusinessSupplierPictures to count.
     * @example
     * // Count the number of BusinessSupplierPictures
     * const count = await prisma.businessSupplierPicture.count({
     *   where: {
     *     // ... the filter for the BusinessSupplierPictures we want to count
     *   }
     * })
    **/
    count<T extends BusinessSupplierPictureCountArgs>(
      args?: Subset<T, BusinessSupplierPictureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessSupplierPictureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessSupplierPicture.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessSupplierPictureAggregateArgs>(args: Subset<T, BusinessSupplierPictureAggregateArgs>): Prisma.PrismaPromise<GetBusinessSupplierPictureAggregateType<T>>

    /**
     * Group by BusinessSupplierPicture.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessSupplierPictureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessSupplierPictureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessSupplierPictureGroupByArgs['orderBy'] }
        : { orderBy?: BusinessSupplierPictureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessSupplierPictureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessSupplierPictureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessSupplierPicture model
   */
  readonly fields: BusinessSupplierPictureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessSupplierPicture.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessSupplierPictureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_supplier_information<T extends business_supplier_informationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, business_supplier_informationDefaultArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessSupplierPicture model
   */
  interface BusinessSupplierPictureFieldRefs {
    readonly id: FieldRef<"BusinessSupplierPicture", 'String'>
    readonly supplierId: FieldRef<"BusinessSupplierPicture", 'String'>
    readonly url: FieldRef<"BusinessSupplierPicture", 'String'>
    readonly businessId: FieldRef<"BusinessSupplierPicture", 'String'>
    readonly createdAt: FieldRef<"BusinessSupplierPicture", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessSupplierPicture", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessSupplierPicture findUnique
   */
  export type BusinessSupplierPictureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * Filter, which BusinessSupplierPicture to fetch.
     */
    where: BusinessSupplierPictureWhereUniqueInput
  }

  /**
   * BusinessSupplierPicture findUniqueOrThrow
   */
  export type BusinessSupplierPictureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * Filter, which BusinessSupplierPicture to fetch.
     */
    where: BusinessSupplierPictureWhereUniqueInput
  }

  /**
   * BusinessSupplierPicture findFirst
   */
  export type BusinessSupplierPictureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * Filter, which BusinessSupplierPicture to fetch.
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessSupplierPictures to fetch.
     */
    orderBy?: BusinessSupplierPictureOrderByWithRelationInput | BusinessSupplierPictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessSupplierPictures.
     */
    cursor?: BusinessSupplierPictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessSupplierPictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessSupplierPictures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessSupplierPictures.
     */
    distinct?: BusinessSupplierPictureScalarFieldEnum | BusinessSupplierPictureScalarFieldEnum[]
  }

  /**
   * BusinessSupplierPicture findFirstOrThrow
   */
  export type BusinessSupplierPictureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * Filter, which BusinessSupplierPicture to fetch.
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessSupplierPictures to fetch.
     */
    orderBy?: BusinessSupplierPictureOrderByWithRelationInput | BusinessSupplierPictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessSupplierPictures.
     */
    cursor?: BusinessSupplierPictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessSupplierPictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessSupplierPictures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessSupplierPictures.
     */
    distinct?: BusinessSupplierPictureScalarFieldEnum | BusinessSupplierPictureScalarFieldEnum[]
  }

  /**
   * BusinessSupplierPicture findMany
   */
  export type BusinessSupplierPictureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * Filter, which BusinessSupplierPictures to fetch.
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessSupplierPictures to fetch.
     */
    orderBy?: BusinessSupplierPictureOrderByWithRelationInput | BusinessSupplierPictureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessSupplierPictures.
     */
    cursor?: BusinessSupplierPictureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessSupplierPictures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessSupplierPictures.
     */
    skip?: number
    distinct?: BusinessSupplierPictureScalarFieldEnum | BusinessSupplierPictureScalarFieldEnum[]
  }

  /**
   * BusinessSupplierPicture create
   */
  export type BusinessSupplierPictureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessSupplierPicture.
     */
    data: XOR<BusinessSupplierPictureCreateInput, BusinessSupplierPictureUncheckedCreateInput>
  }

  /**
   * BusinessSupplierPicture createMany
   */
  export type BusinessSupplierPictureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessSupplierPictures.
     */
    data: BusinessSupplierPictureCreateManyInput | BusinessSupplierPictureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessSupplierPicture createManyAndReturn
   */
  export type BusinessSupplierPictureCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessSupplierPictures.
     */
    data: BusinessSupplierPictureCreateManyInput | BusinessSupplierPictureCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessSupplierPicture update
   */
  export type BusinessSupplierPictureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessSupplierPicture.
     */
    data: XOR<BusinessSupplierPictureUpdateInput, BusinessSupplierPictureUncheckedUpdateInput>
    /**
     * Choose, which BusinessSupplierPicture to update.
     */
    where: BusinessSupplierPictureWhereUniqueInput
  }

  /**
   * BusinessSupplierPicture updateMany
   */
  export type BusinessSupplierPictureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessSupplierPictures.
     */
    data: XOR<BusinessSupplierPictureUpdateManyMutationInput, BusinessSupplierPictureUncheckedUpdateManyInput>
    /**
     * Filter which BusinessSupplierPictures to update
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * Limit how many BusinessSupplierPictures to update.
     */
    limit?: number
  }

  /**
   * BusinessSupplierPicture updateManyAndReturn
   */
  export type BusinessSupplierPictureUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * The data used to update BusinessSupplierPictures.
     */
    data: XOR<BusinessSupplierPictureUpdateManyMutationInput, BusinessSupplierPictureUncheckedUpdateManyInput>
    /**
     * Filter which BusinessSupplierPictures to update
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * Limit how many BusinessSupplierPictures to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessSupplierPicture upsert
   */
  export type BusinessSupplierPictureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessSupplierPicture to update in case it exists.
     */
    where: BusinessSupplierPictureWhereUniqueInput
    /**
     * In case the BusinessSupplierPicture found by the `where` argument doesn't exist, create a new BusinessSupplierPicture with this data.
     */
    create: XOR<BusinessSupplierPictureCreateInput, BusinessSupplierPictureUncheckedCreateInput>
    /**
     * In case the BusinessSupplierPicture was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessSupplierPictureUpdateInput, BusinessSupplierPictureUncheckedUpdateInput>
  }

  /**
   * BusinessSupplierPicture delete
   */
  export type BusinessSupplierPictureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    /**
     * Filter which BusinessSupplierPicture to delete.
     */
    where: BusinessSupplierPictureWhereUniqueInput
  }

  /**
   * BusinessSupplierPicture deleteMany
   */
  export type BusinessSupplierPictureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessSupplierPictures to delete
     */
    where?: BusinessSupplierPictureWhereInput
    /**
     * Limit how many BusinessSupplierPictures to delete.
     */
    limit?: number
  }

  /**
   * BusinessSupplierPicture without action
   */
  export type BusinessSupplierPictureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
  }


  /**
   * Model BusinessMenu
   */

  export type AggregateBusinessMenu = {
    _count: BusinessMenuCountAggregateOutputType | null
    _min: BusinessMenuMinAggregateOutputType | null
    _max: BusinessMenuMaxAggregateOutputType | null
  }

  export type BusinessMenuMinAggregateOutputType = {
    id: string | null
    title: string | null
    tags: string | null
    nameLastModificationEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessMenuMaxAggregateOutputType = {
    id: string | null
    title: string | null
    tags: string | null
    nameLastModificationEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessMenuCountAggregateOutputType = {
    id: number
    title: number
    tags: number
    nameLastModificationEmployee: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessMenuMinAggregateInputType = {
    id?: true
    title?: true
    tags?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessMenuMaxAggregateInputType = {
    id?: true
    title?: true
    tags?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessMenuCountAggregateInputType = {
    id?: true
    title?: true
    tags?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessMenuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessMenu to aggregate.
     */
    where?: BusinessMenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenus to fetch.
     */
    orderBy?: BusinessMenuOrderByWithRelationInput | BusinessMenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessMenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessMenus
    **/
    _count?: true | BusinessMenuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessMenuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessMenuMaxAggregateInputType
  }

  export type GetBusinessMenuAggregateType<T extends BusinessMenuAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessMenu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessMenu[P]>
      : GetScalarType<T[P], AggregateBusinessMenu[P]>
  }




  export type BusinessMenuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessMenuWhereInput
    orderBy?: BusinessMenuOrderByWithAggregationInput | BusinessMenuOrderByWithAggregationInput[]
    by: BusinessMenuScalarFieldEnum[] | BusinessMenuScalarFieldEnum
    having?: BusinessMenuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessMenuCountAggregateInputType | true
    _min?: BusinessMenuMinAggregateInputType
    _max?: BusinessMenuMaxAggregateInputType
  }

  export type BusinessMenuGroupByOutputType = {
    id: string
    title: string
    tags: string | null
    nameLastModificationEmployee: string | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessMenuCountAggregateOutputType | null
    _min: BusinessMenuMinAggregateOutputType | null
    _max: BusinessMenuMaxAggregateOutputType | null
  }

  type GetBusinessMenuGroupByPayload<T extends BusinessMenuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessMenuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessMenuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessMenuGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessMenuGroupByOutputType[P]>
        }
      >
    >


  export type BusinessMenuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_menu_categories?: boolean | BusinessMenu$business_menu_categoriesArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_products?: boolean | BusinessMenu$business_productsArgs<ExtArgs>
    _count?: boolean | BusinessMenuCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessMenu"]>

  export type BusinessMenuSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessMenu"]>

  export type BusinessMenuSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessMenu"]>

  export type BusinessMenuSelectScalar = {
    id?: boolean
    title?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessMenuOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "tags" | "nameLastModificationEmployee" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessMenu"]>
  export type BusinessMenuInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_menu_categories?: boolean | BusinessMenu$business_menu_categoriesArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_products?: boolean | BusinessMenu$business_productsArgs<ExtArgs>
    _count?: boolean | BusinessMenuCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BusinessMenuIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessMenuIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessMenuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessMenu"
    objects: {
      business_menu_categories: Prisma.$BusinessMenuCategoryPayload<ExtArgs>[]
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_products: Prisma.$BusinessProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      tags: string | null
      nameLastModificationEmployee: string | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessMenu"]>
    composites: {}
  }

  type BusinessMenuGetPayload<S extends boolean | null | undefined | BusinessMenuDefaultArgs> = $Result.GetResult<Prisma.$BusinessMenuPayload, S>

  type BusinessMenuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessMenuFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessMenuCountAggregateInputType | true
    }

  export interface BusinessMenuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessMenu'], meta: { name: 'BusinessMenu' } }
    /**
     * Find zero or one BusinessMenu that matches the filter.
     * @param {BusinessMenuFindUniqueArgs} args - Arguments to find a BusinessMenu
     * @example
     * // Get one BusinessMenu
     * const businessMenu = await prisma.businessMenu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessMenuFindUniqueArgs>(args: SelectSubset<T, BusinessMenuFindUniqueArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessMenu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessMenuFindUniqueOrThrowArgs} args - Arguments to find a BusinessMenu
     * @example
     * // Get one BusinessMenu
     * const businessMenu = await prisma.businessMenu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessMenuFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessMenuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessMenu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuFindFirstArgs} args - Arguments to find a BusinessMenu
     * @example
     * // Get one BusinessMenu
     * const businessMenu = await prisma.businessMenu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessMenuFindFirstArgs>(args?: SelectSubset<T, BusinessMenuFindFirstArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessMenu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuFindFirstOrThrowArgs} args - Arguments to find a BusinessMenu
     * @example
     * // Get one BusinessMenu
     * const businessMenu = await prisma.businessMenu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessMenuFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessMenuFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessMenus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessMenus
     * const businessMenus = await prisma.businessMenu.findMany()
     * 
     * // Get first 10 BusinessMenus
     * const businessMenus = await prisma.businessMenu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessMenuWithIdOnly = await prisma.businessMenu.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessMenuFindManyArgs>(args?: SelectSubset<T, BusinessMenuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessMenu.
     * @param {BusinessMenuCreateArgs} args - Arguments to create a BusinessMenu.
     * @example
     * // Create one BusinessMenu
     * const BusinessMenu = await prisma.businessMenu.create({
     *   data: {
     *     // ... data to create a BusinessMenu
     *   }
     * })
     * 
     */
    create<T extends BusinessMenuCreateArgs>(args: SelectSubset<T, BusinessMenuCreateArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessMenus.
     * @param {BusinessMenuCreateManyArgs} args - Arguments to create many BusinessMenus.
     * @example
     * // Create many BusinessMenus
     * const businessMenu = await prisma.businessMenu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessMenuCreateManyArgs>(args?: SelectSubset<T, BusinessMenuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessMenus and returns the data saved in the database.
     * @param {BusinessMenuCreateManyAndReturnArgs} args - Arguments to create many BusinessMenus.
     * @example
     * // Create many BusinessMenus
     * const businessMenu = await prisma.businessMenu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessMenus and only return the `id`
     * const businessMenuWithIdOnly = await prisma.businessMenu.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessMenuCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessMenuCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessMenu.
     * @param {BusinessMenuDeleteArgs} args - Arguments to delete one BusinessMenu.
     * @example
     * // Delete one BusinessMenu
     * const BusinessMenu = await prisma.businessMenu.delete({
     *   where: {
     *     // ... filter to delete one BusinessMenu
     *   }
     * })
     * 
     */
    delete<T extends BusinessMenuDeleteArgs>(args: SelectSubset<T, BusinessMenuDeleteArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessMenu.
     * @param {BusinessMenuUpdateArgs} args - Arguments to update one BusinessMenu.
     * @example
     * // Update one BusinessMenu
     * const businessMenu = await prisma.businessMenu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessMenuUpdateArgs>(args: SelectSubset<T, BusinessMenuUpdateArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessMenus.
     * @param {BusinessMenuDeleteManyArgs} args - Arguments to filter BusinessMenus to delete.
     * @example
     * // Delete a few BusinessMenus
     * const { count } = await prisma.businessMenu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessMenuDeleteManyArgs>(args?: SelectSubset<T, BusinessMenuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessMenus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessMenus
     * const businessMenu = await prisma.businessMenu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessMenuUpdateManyArgs>(args: SelectSubset<T, BusinessMenuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessMenus and returns the data updated in the database.
     * @param {BusinessMenuUpdateManyAndReturnArgs} args - Arguments to update many BusinessMenus.
     * @example
     * // Update many BusinessMenus
     * const businessMenu = await prisma.businessMenu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessMenus and only return the `id`
     * const businessMenuWithIdOnly = await prisma.businessMenu.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessMenuUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessMenuUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessMenu.
     * @param {BusinessMenuUpsertArgs} args - Arguments to update or create a BusinessMenu.
     * @example
     * // Update or create a BusinessMenu
     * const businessMenu = await prisma.businessMenu.upsert({
     *   create: {
     *     // ... data to create a BusinessMenu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessMenu we want to update
     *   }
     * })
     */
    upsert<T extends BusinessMenuUpsertArgs>(args: SelectSubset<T, BusinessMenuUpsertArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessMenus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCountArgs} args - Arguments to filter BusinessMenus to count.
     * @example
     * // Count the number of BusinessMenus
     * const count = await prisma.businessMenu.count({
     *   where: {
     *     // ... the filter for the BusinessMenus we want to count
     *   }
     * })
    **/
    count<T extends BusinessMenuCountArgs>(
      args?: Subset<T, BusinessMenuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessMenuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessMenu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessMenuAggregateArgs>(args: Subset<T, BusinessMenuAggregateArgs>): Prisma.PrismaPromise<GetBusinessMenuAggregateType<T>>

    /**
     * Group by BusinessMenu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessMenuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessMenuGroupByArgs['orderBy'] }
        : { orderBy?: BusinessMenuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessMenuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessMenuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessMenu model
   */
  readonly fields: BusinessMenuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessMenu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessMenuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    business_menu_categories<T extends BusinessMenu$business_menu_categoriesArgs<ExtArgs> = {}>(args?: Subset<T, BusinessMenu$business_menu_categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_products<T extends BusinessMenu$business_productsArgs<ExtArgs> = {}>(args?: Subset<T, BusinessMenu$business_productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessMenu model
   */
  interface BusinessMenuFieldRefs {
    readonly id: FieldRef<"BusinessMenu", 'String'>
    readonly title: FieldRef<"BusinessMenu", 'String'>
    readonly tags: FieldRef<"BusinessMenu", 'String'>
    readonly nameLastModificationEmployee: FieldRef<"BusinessMenu", 'String'>
    readonly businessId: FieldRef<"BusinessMenu", 'String'>
    readonly createdAt: FieldRef<"BusinessMenu", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessMenu", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessMenu findUnique
   */
  export type BusinessMenuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenu to fetch.
     */
    where: BusinessMenuWhereUniqueInput
  }

  /**
   * BusinessMenu findUniqueOrThrow
   */
  export type BusinessMenuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenu to fetch.
     */
    where: BusinessMenuWhereUniqueInput
  }

  /**
   * BusinessMenu findFirst
   */
  export type BusinessMenuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenu to fetch.
     */
    where?: BusinessMenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenus to fetch.
     */
    orderBy?: BusinessMenuOrderByWithRelationInput | BusinessMenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessMenus.
     */
    cursor?: BusinessMenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessMenus.
     */
    distinct?: BusinessMenuScalarFieldEnum | BusinessMenuScalarFieldEnum[]
  }

  /**
   * BusinessMenu findFirstOrThrow
   */
  export type BusinessMenuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenu to fetch.
     */
    where?: BusinessMenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenus to fetch.
     */
    orderBy?: BusinessMenuOrderByWithRelationInput | BusinessMenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessMenus.
     */
    cursor?: BusinessMenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessMenus.
     */
    distinct?: BusinessMenuScalarFieldEnum | BusinessMenuScalarFieldEnum[]
  }

  /**
   * BusinessMenu findMany
   */
  export type BusinessMenuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenus to fetch.
     */
    where?: BusinessMenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenus to fetch.
     */
    orderBy?: BusinessMenuOrderByWithRelationInput | BusinessMenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessMenus.
     */
    cursor?: BusinessMenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenus.
     */
    skip?: number
    distinct?: BusinessMenuScalarFieldEnum | BusinessMenuScalarFieldEnum[]
  }

  /**
   * BusinessMenu create
   */
  export type BusinessMenuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessMenu.
     */
    data: XOR<BusinessMenuCreateInput, BusinessMenuUncheckedCreateInput>
  }

  /**
   * BusinessMenu createMany
   */
  export type BusinessMenuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessMenus.
     */
    data: BusinessMenuCreateManyInput | BusinessMenuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessMenu createManyAndReturn
   */
  export type BusinessMenuCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessMenus.
     */
    data: BusinessMenuCreateManyInput | BusinessMenuCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessMenu update
   */
  export type BusinessMenuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessMenu.
     */
    data: XOR<BusinessMenuUpdateInput, BusinessMenuUncheckedUpdateInput>
    /**
     * Choose, which BusinessMenu to update.
     */
    where: BusinessMenuWhereUniqueInput
  }

  /**
   * BusinessMenu updateMany
   */
  export type BusinessMenuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessMenus.
     */
    data: XOR<BusinessMenuUpdateManyMutationInput, BusinessMenuUncheckedUpdateManyInput>
    /**
     * Filter which BusinessMenus to update
     */
    where?: BusinessMenuWhereInput
    /**
     * Limit how many BusinessMenus to update.
     */
    limit?: number
  }

  /**
   * BusinessMenu updateManyAndReturn
   */
  export type BusinessMenuUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * The data used to update BusinessMenus.
     */
    data: XOR<BusinessMenuUpdateManyMutationInput, BusinessMenuUncheckedUpdateManyInput>
    /**
     * Filter which BusinessMenus to update
     */
    where?: BusinessMenuWhereInput
    /**
     * Limit how many BusinessMenus to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessMenu upsert
   */
  export type BusinessMenuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessMenu to update in case it exists.
     */
    where: BusinessMenuWhereUniqueInput
    /**
     * In case the BusinessMenu found by the `where` argument doesn't exist, create a new BusinessMenu with this data.
     */
    create: XOR<BusinessMenuCreateInput, BusinessMenuUncheckedCreateInput>
    /**
     * In case the BusinessMenu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessMenuUpdateInput, BusinessMenuUncheckedUpdateInput>
  }

  /**
   * BusinessMenu delete
   */
  export type BusinessMenuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    /**
     * Filter which BusinessMenu to delete.
     */
    where: BusinessMenuWhereUniqueInput
  }

  /**
   * BusinessMenu deleteMany
   */
  export type BusinessMenuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessMenus to delete
     */
    where?: BusinessMenuWhereInput
    /**
     * Limit how many BusinessMenus to delete.
     */
    limit?: number
  }

  /**
   * BusinessMenu.business_menu_categories
   */
  export type BusinessMenu$business_menu_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    where?: BusinessMenuCategoryWhereInput
    orderBy?: BusinessMenuCategoryOrderByWithRelationInput | BusinessMenuCategoryOrderByWithRelationInput[]
    cursor?: BusinessMenuCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessMenuCategoryScalarFieldEnum | BusinessMenuCategoryScalarFieldEnum[]
  }

  /**
   * BusinessMenu.business_products
   */
  export type BusinessMenu$business_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    where?: BusinessProductWhereInput
    orderBy?: BusinessProductOrderByWithRelationInput | BusinessProductOrderByWithRelationInput[]
    cursor?: BusinessProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessProductScalarFieldEnum | BusinessProductScalarFieldEnum[]
  }

  /**
   * BusinessMenu without action
   */
  export type BusinessMenuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
  }


  /**
   * Model BusinessMenuCategory
   */

  export type AggregateBusinessMenuCategory = {
    _count: BusinessMenuCategoryCountAggregateOutputType | null
    _min: BusinessMenuCategoryMinAggregateOutputType | null
    _max: BusinessMenuCategoryMaxAggregateOutputType | null
  }

  export type BusinessMenuCategoryMinAggregateOutputType = {
    id: string | null
    menuId: string | null
    vip: boolean | null
    haveSchedule: boolean | null
    nameLastModificationEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessMenuCategoryMaxAggregateOutputType = {
    id: string | null
    menuId: string | null
    vip: boolean | null
    haveSchedule: boolean | null
    nameLastModificationEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessMenuCategoryCountAggregateOutputType = {
    id: number
    menuId: number
    vip: number
    haveSchedule: number
    schedule: number
    nameLastModificationEmployee: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessMenuCategoryMinAggregateInputType = {
    id?: true
    menuId?: true
    vip?: true
    haveSchedule?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessMenuCategoryMaxAggregateInputType = {
    id?: true
    menuId?: true
    vip?: true
    haveSchedule?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessMenuCategoryCountAggregateInputType = {
    id?: true
    menuId?: true
    vip?: true
    haveSchedule?: true
    schedule?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessMenuCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessMenuCategory to aggregate.
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenuCategories to fetch.
     */
    orderBy?: BusinessMenuCategoryOrderByWithRelationInput | BusinessMenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessMenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessMenuCategories
    **/
    _count?: true | BusinessMenuCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessMenuCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessMenuCategoryMaxAggregateInputType
  }

  export type GetBusinessMenuCategoryAggregateType<T extends BusinessMenuCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessMenuCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessMenuCategory[P]>
      : GetScalarType<T[P], AggregateBusinessMenuCategory[P]>
  }




  export type BusinessMenuCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessMenuCategoryWhereInput
    orderBy?: BusinessMenuCategoryOrderByWithAggregationInput | BusinessMenuCategoryOrderByWithAggregationInput[]
    by: BusinessMenuCategoryScalarFieldEnum[] | BusinessMenuCategoryScalarFieldEnum
    having?: BusinessMenuCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessMenuCategoryCountAggregateInputType | true
    _min?: BusinessMenuCategoryMinAggregateInputType
    _max?: BusinessMenuCategoryMaxAggregateInputType
  }

  export type BusinessMenuCategoryGroupByOutputType = {
    id: string
    menuId: string
    vip: boolean
    haveSchedule: boolean
    schedule: JsonValue | null
    nameLastModificationEmployee: string | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessMenuCategoryCountAggregateOutputType | null
    _min: BusinessMenuCategoryMinAggregateOutputType | null
    _max: BusinessMenuCategoryMaxAggregateOutputType | null
  }

  type GetBusinessMenuCategoryGroupByPayload<T extends BusinessMenuCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessMenuCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessMenuCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessMenuCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessMenuCategoryGroupByOutputType[P]>
        }
      >
    >


  export type BusinessMenuCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuId?: boolean
    vip?: boolean
    haveSchedule?: boolean
    schedule?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessMenuCategory"]>

  export type BusinessMenuCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuId?: boolean
    vip?: boolean
    haveSchedule?: boolean
    schedule?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessMenuCategory"]>

  export type BusinessMenuCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuId?: boolean
    vip?: boolean
    haveSchedule?: boolean
    schedule?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessMenuCategory"]>

  export type BusinessMenuCategorySelectScalar = {
    id?: boolean
    menuId?: boolean
    vip?: boolean
    haveSchedule?: boolean
    schedule?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessMenuCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "menuId" | "vip" | "haveSchedule" | "schedule" | "nameLastModificationEmployee" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessMenuCategory"]>
  export type BusinessMenuCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }
  export type BusinessMenuCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }
  export type BusinessMenuCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }

  export type $BusinessMenuCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessMenuCategory"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_menus: Prisma.$BusinessMenuPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      menuId: string
      vip: boolean
      haveSchedule: boolean
      schedule: Prisma.JsonValue | null
      nameLastModificationEmployee: string | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessMenuCategory"]>
    composites: {}
  }

  type BusinessMenuCategoryGetPayload<S extends boolean | null | undefined | BusinessMenuCategoryDefaultArgs> = $Result.GetResult<Prisma.$BusinessMenuCategoryPayload, S>

  type BusinessMenuCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessMenuCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessMenuCategoryCountAggregateInputType | true
    }

  export interface BusinessMenuCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessMenuCategory'], meta: { name: 'BusinessMenuCategory' } }
    /**
     * Find zero or one BusinessMenuCategory that matches the filter.
     * @param {BusinessMenuCategoryFindUniqueArgs} args - Arguments to find a BusinessMenuCategory
     * @example
     * // Get one BusinessMenuCategory
     * const businessMenuCategory = await prisma.businessMenuCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessMenuCategoryFindUniqueArgs>(args: SelectSubset<T, BusinessMenuCategoryFindUniqueArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessMenuCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessMenuCategoryFindUniqueOrThrowArgs} args - Arguments to find a BusinessMenuCategory
     * @example
     * // Get one BusinessMenuCategory
     * const businessMenuCategory = await prisma.businessMenuCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessMenuCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessMenuCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessMenuCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryFindFirstArgs} args - Arguments to find a BusinessMenuCategory
     * @example
     * // Get one BusinessMenuCategory
     * const businessMenuCategory = await prisma.businessMenuCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessMenuCategoryFindFirstArgs>(args?: SelectSubset<T, BusinessMenuCategoryFindFirstArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessMenuCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryFindFirstOrThrowArgs} args - Arguments to find a BusinessMenuCategory
     * @example
     * // Get one BusinessMenuCategory
     * const businessMenuCategory = await prisma.businessMenuCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessMenuCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessMenuCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessMenuCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessMenuCategories
     * const businessMenuCategories = await prisma.businessMenuCategory.findMany()
     * 
     * // Get first 10 BusinessMenuCategories
     * const businessMenuCategories = await prisma.businessMenuCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessMenuCategoryWithIdOnly = await prisma.businessMenuCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessMenuCategoryFindManyArgs>(args?: SelectSubset<T, BusinessMenuCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessMenuCategory.
     * @param {BusinessMenuCategoryCreateArgs} args - Arguments to create a BusinessMenuCategory.
     * @example
     * // Create one BusinessMenuCategory
     * const BusinessMenuCategory = await prisma.businessMenuCategory.create({
     *   data: {
     *     // ... data to create a BusinessMenuCategory
     *   }
     * })
     * 
     */
    create<T extends BusinessMenuCategoryCreateArgs>(args: SelectSubset<T, BusinessMenuCategoryCreateArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessMenuCategories.
     * @param {BusinessMenuCategoryCreateManyArgs} args - Arguments to create many BusinessMenuCategories.
     * @example
     * // Create many BusinessMenuCategories
     * const businessMenuCategory = await prisma.businessMenuCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessMenuCategoryCreateManyArgs>(args?: SelectSubset<T, BusinessMenuCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessMenuCategories and returns the data saved in the database.
     * @param {BusinessMenuCategoryCreateManyAndReturnArgs} args - Arguments to create many BusinessMenuCategories.
     * @example
     * // Create many BusinessMenuCategories
     * const businessMenuCategory = await prisma.businessMenuCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessMenuCategories and only return the `id`
     * const businessMenuCategoryWithIdOnly = await prisma.businessMenuCategory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessMenuCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessMenuCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessMenuCategory.
     * @param {BusinessMenuCategoryDeleteArgs} args - Arguments to delete one BusinessMenuCategory.
     * @example
     * // Delete one BusinessMenuCategory
     * const BusinessMenuCategory = await prisma.businessMenuCategory.delete({
     *   where: {
     *     // ... filter to delete one BusinessMenuCategory
     *   }
     * })
     * 
     */
    delete<T extends BusinessMenuCategoryDeleteArgs>(args: SelectSubset<T, BusinessMenuCategoryDeleteArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessMenuCategory.
     * @param {BusinessMenuCategoryUpdateArgs} args - Arguments to update one BusinessMenuCategory.
     * @example
     * // Update one BusinessMenuCategory
     * const businessMenuCategory = await prisma.businessMenuCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessMenuCategoryUpdateArgs>(args: SelectSubset<T, BusinessMenuCategoryUpdateArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessMenuCategories.
     * @param {BusinessMenuCategoryDeleteManyArgs} args - Arguments to filter BusinessMenuCategories to delete.
     * @example
     * // Delete a few BusinessMenuCategories
     * const { count } = await prisma.businessMenuCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessMenuCategoryDeleteManyArgs>(args?: SelectSubset<T, BusinessMenuCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessMenuCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessMenuCategories
     * const businessMenuCategory = await prisma.businessMenuCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessMenuCategoryUpdateManyArgs>(args: SelectSubset<T, BusinessMenuCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessMenuCategories and returns the data updated in the database.
     * @param {BusinessMenuCategoryUpdateManyAndReturnArgs} args - Arguments to update many BusinessMenuCategories.
     * @example
     * // Update many BusinessMenuCategories
     * const businessMenuCategory = await prisma.businessMenuCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessMenuCategories and only return the `id`
     * const businessMenuCategoryWithIdOnly = await prisma.businessMenuCategory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessMenuCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessMenuCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessMenuCategory.
     * @param {BusinessMenuCategoryUpsertArgs} args - Arguments to update or create a BusinessMenuCategory.
     * @example
     * // Update or create a BusinessMenuCategory
     * const businessMenuCategory = await prisma.businessMenuCategory.upsert({
     *   create: {
     *     // ... data to create a BusinessMenuCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessMenuCategory we want to update
     *   }
     * })
     */
    upsert<T extends BusinessMenuCategoryUpsertArgs>(args: SelectSubset<T, BusinessMenuCategoryUpsertArgs<ExtArgs>>): Prisma__BusinessMenuCategoryClient<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessMenuCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryCountArgs} args - Arguments to filter BusinessMenuCategories to count.
     * @example
     * // Count the number of BusinessMenuCategories
     * const count = await prisma.businessMenuCategory.count({
     *   where: {
     *     // ... the filter for the BusinessMenuCategories we want to count
     *   }
     * })
    **/
    count<T extends BusinessMenuCategoryCountArgs>(
      args?: Subset<T, BusinessMenuCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessMenuCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessMenuCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessMenuCategoryAggregateArgs>(args: Subset<T, BusinessMenuCategoryAggregateArgs>): Prisma.PrismaPromise<GetBusinessMenuCategoryAggregateType<T>>

    /**
     * Group by BusinessMenuCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessMenuCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessMenuCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessMenuCategoryGroupByArgs['orderBy'] }
        : { orderBy?: BusinessMenuCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessMenuCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessMenuCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessMenuCategory model
   */
  readonly fields: BusinessMenuCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessMenuCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessMenuCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_menus<T extends BusinessMenuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessMenuDefaultArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessMenuCategory model
   */
  interface BusinessMenuCategoryFieldRefs {
    readonly id: FieldRef<"BusinessMenuCategory", 'String'>
    readonly menuId: FieldRef<"BusinessMenuCategory", 'String'>
    readonly vip: FieldRef<"BusinessMenuCategory", 'Boolean'>
    readonly haveSchedule: FieldRef<"BusinessMenuCategory", 'Boolean'>
    readonly schedule: FieldRef<"BusinessMenuCategory", 'Json'>
    readonly nameLastModificationEmployee: FieldRef<"BusinessMenuCategory", 'String'>
    readonly businessId: FieldRef<"BusinessMenuCategory", 'String'>
    readonly createdAt: FieldRef<"BusinessMenuCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessMenuCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessMenuCategory findUnique
   */
  export type BusinessMenuCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenuCategory to fetch.
     */
    where: BusinessMenuCategoryWhereUniqueInput
  }

  /**
   * BusinessMenuCategory findUniqueOrThrow
   */
  export type BusinessMenuCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenuCategory to fetch.
     */
    where: BusinessMenuCategoryWhereUniqueInput
  }

  /**
   * BusinessMenuCategory findFirst
   */
  export type BusinessMenuCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenuCategory to fetch.
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenuCategories to fetch.
     */
    orderBy?: BusinessMenuCategoryOrderByWithRelationInput | BusinessMenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessMenuCategories.
     */
    cursor?: BusinessMenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessMenuCategories.
     */
    distinct?: BusinessMenuCategoryScalarFieldEnum | BusinessMenuCategoryScalarFieldEnum[]
  }

  /**
   * BusinessMenuCategory findFirstOrThrow
   */
  export type BusinessMenuCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenuCategory to fetch.
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenuCategories to fetch.
     */
    orderBy?: BusinessMenuCategoryOrderByWithRelationInput | BusinessMenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessMenuCategories.
     */
    cursor?: BusinessMenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessMenuCategories.
     */
    distinct?: BusinessMenuCategoryScalarFieldEnum | BusinessMenuCategoryScalarFieldEnum[]
  }

  /**
   * BusinessMenuCategory findMany
   */
  export type BusinessMenuCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which BusinessMenuCategories to fetch.
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessMenuCategories to fetch.
     */
    orderBy?: BusinessMenuCategoryOrderByWithRelationInput | BusinessMenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessMenuCategories.
     */
    cursor?: BusinessMenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessMenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessMenuCategories.
     */
    skip?: number
    distinct?: BusinessMenuCategoryScalarFieldEnum | BusinessMenuCategoryScalarFieldEnum[]
  }

  /**
   * BusinessMenuCategory create
   */
  export type BusinessMenuCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessMenuCategory.
     */
    data: XOR<BusinessMenuCategoryCreateInput, BusinessMenuCategoryUncheckedCreateInput>
  }

  /**
   * BusinessMenuCategory createMany
   */
  export type BusinessMenuCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessMenuCategories.
     */
    data: BusinessMenuCategoryCreateManyInput | BusinessMenuCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessMenuCategory createManyAndReturn
   */
  export type BusinessMenuCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessMenuCategories.
     */
    data: BusinessMenuCategoryCreateManyInput | BusinessMenuCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessMenuCategory update
   */
  export type BusinessMenuCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessMenuCategory.
     */
    data: XOR<BusinessMenuCategoryUpdateInput, BusinessMenuCategoryUncheckedUpdateInput>
    /**
     * Choose, which BusinessMenuCategory to update.
     */
    where: BusinessMenuCategoryWhereUniqueInput
  }

  /**
   * BusinessMenuCategory updateMany
   */
  export type BusinessMenuCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessMenuCategories.
     */
    data: XOR<BusinessMenuCategoryUpdateManyMutationInput, BusinessMenuCategoryUncheckedUpdateManyInput>
    /**
     * Filter which BusinessMenuCategories to update
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * Limit how many BusinessMenuCategories to update.
     */
    limit?: number
  }

  /**
   * BusinessMenuCategory updateManyAndReturn
   */
  export type BusinessMenuCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * The data used to update BusinessMenuCategories.
     */
    data: XOR<BusinessMenuCategoryUpdateManyMutationInput, BusinessMenuCategoryUncheckedUpdateManyInput>
    /**
     * Filter which BusinessMenuCategories to update
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * Limit how many BusinessMenuCategories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessMenuCategory upsert
   */
  export type BusinessMenuCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessMenuCategory to update in case it exists.
     */
    where: BusinessMenuCategoryWhereUniqueInput
    /**
     * In case the BusinessMenuCategory found by the `where` argument doesn't exist, create a new BusinessMenuCategory with this data.
     */
    create: XOR<BusinessMenuCategoryCreateInput, BusinessMenuCategoryUncheckedCreateInput>
    /**
     * In case the BusinessMenuCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessMenuCategoryUpdateInput, BusinessMenuCategoryUncheckedUpdateInput>
  }

  /**
   * BusinessMenuCategory delete
   */
  export type BusinessMenuCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    /**
     * Filter which BusinessMenuCategory to delete.
     */
    where: BusinessMenuCategoryWhereUniqueInput
  }

  /**
   * BusinessMenuCategory deleteMany
   */
  export type BusinessMenuCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessMenuCategories to delete
     */
    where?: BusinessMenuCategoryWhereInput
    /**
     * Limit how many BusinessMenuCategories to delete.
     */
    limit?: number
  }

  /**
   * BusinessMenuCategory without action
   */
  export type BusinessMenuCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
  }


  /**
   * Model BusinessProduct
   */

  export type AggregateBusinessProduct = {
    _count: BusinessProductCountAggregateOutputType | null
    _avg: BusinessProductAvgAggregateOutputType | null
    _sum: BusinessProductSumAggregateOutputType | null
    _min: BusinessProductMinAggregateOutputType | null
    _max: BusinessProductMaxAggregateOutputType | null
  }

  export type BusinessProductAvgAggregateOutputType = {
    unityAmount: number | null
    stockBatches: number | null
    unityConsumeStock: number | null
  }

  export type BusinessProductSumAggregateOutputType = {
    unityAmount: number | null
    stockBatches: number[]
    unityConsumeStock: number | null
  }

  export type BusinessProductMinAggregateOutputType = {
    id: string | null
    menuId: string | null
    name: string | null
    unityAmount: number | null
    unityConsumeStock: number | null
    typeUnitConsumeMeasurement: string | null
    tags: string | null
    nameLastModificationEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessProductMaxAggregateOutputType = {
    id: string | null
    menuId: string | null
    name: string | null
    unityAmount: number | null
    unityConsumeStock: number | null
    typeUnitConsumeMeasurement: string | null
    tags: string | null
    nameLastModificationEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessProductCountAggregateOutputType = {
    id: number
    menuId: number
    name: number
    unityAmount: number
    stockBatches: number
    expirationDates: number
    unityConsumeStock: number
    typeUnitConsumeMeasurement: number
    tags: number
    nameLastModificationEmployee: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessProductAvgAggregateInputType = {
    unityAmount?: true
    stockBatches?: true
    unityConsumeStock?: true
  }

  export type BusinessProductSumAggregateInputType = {
    unityAmount?: true
    stockBatches?: true
    unityConsumeStock?: true
  }

  export type BusinessProductMinAggregateInputType = {
    id?: true
    menuId?: true
    name?: true
    unityAmount?: true
    unityConsumeStock?: true
    typeUnitConsumeMeasurement?: true
    tags?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessProductMaxAggregateInputType = {
    id?: true
    menuId?: true
    name?: true
    unityAmount?: true
    unityConsumeStock?: true
    typeUnitConsumeMeasurement?: true
    tags?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessProductCountAggregateInputType = {
    id?: true
    menuId?: true
    name?: true
    unityAmount?: true
    stockBatches?: true
    expirationDates?: true
    unityConsumeStock?: true
    typeUnitConsumeMeasurement?: true
    tags?: true
    nameLastModificationEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessProduct to aggregate.
     */
    where?: BusinessProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessProducts to fetch.
     */
    orderBy?: BusinessProductOrderByWithRelationInput | BusinessProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessProducts
    **/
    _count?: true | BusinessProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BusinessProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BusinessProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessProductMaxAggregateInputType
  }

  export type GetBusinessProductAggregateType<T extends BusinessProductAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessProduct[P]>
      : GetScalarType<T[P], AggregateBusinessProduct[P]>
  }




  export type BusinessProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessProductWhereInput
    orderBy?: BusinessProductOrderByWithAggregationInput | BusinessProductOrderByWithAggregationInput[]
    by: BusinessProductScalarFieldEnum[] | BusinessProductScalarFieldEnum
    having?: BusinessProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessProductCountAggregateInputType | true
    _avg?: BusinessProductAvgAggregateInputType
    _sum?: BusinessProductSumAggregateInputType
    _min?: BusinessProductMinAggregateInputType
    _max?: BusinessProductMaxAggregateInputType
  }

  export type BusinessProductGroupByOutputType = {
    id: string
    menuId: string
    name: string
    unityAmount: number
    stockBatches: number[]
    expirationDates: Date[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags: string | null
    nameLastModificationEmployee: string | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessProductCountAggregateOutputType | null
    _avg: BusinessProductAvgAggregateOutputType | null
    _sum: BusinessProductSumAggregateOutputType | null
    _min: BusinessProductMinAggregateOutputType | null
    _max: BusinessProductMaxAggregateOutputType | null
  }

  type GetBusinessProductGroupByPayload<T extends BusinessProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessProductGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessProductGroupByOutputType[P]>
        }
      >
    >


  export type BusinessProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuId?: boolean
    name?: boolean
    unityAmount?: boolean
    stockBatches?: boolean
    expirationDates?: boolean
    unityConsumeStock?: boolean
    typeUnitConsumeMeasurement?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessProduct"]>

  export type BusinessProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuId?: boolean
    name?: boolean
    unityAmount?: boolean
    stockBatches?: boolean
    expirationDates?: boolean
    unityConsumeStock?: boolean
    typeUnitConsumeMeasurement?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessProduct"]>

  export type BusinessProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuId?: boolean
    name?: boolean
    unityAmount?: boolean
    stockBatches?: boolean
    expirationDates?: boolean
    unityConsumeStock?: boolean
    typeUnitConsumeMeasurement?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessProduct"]>

  export type BusinessProductSelectScalar = {
    id?: boolean
    menuId?: boolean
    name?: boolean
    unityAmount?: boolean
    stockBatches?: boolean
    expirationDates?: boolean
    unityConsumeStock?: boolean
    typeUnitConsumeMeasurement?: boolean
    tags?: boolean
    nameLastModificationEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "menuId" | "name" | "unityAmount" | "stockBatches" | "expirationDates" | "unityConsumeStock" | "typeUnitConsumeMeasurement" | "tags" | "nameLastModificationEmployee" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessProduct"]>
  export type BusinessProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }
  export type BusinessProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }
  export type BusinessProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_menus?: boolean | BusinessMenuDefaultArgs<ExtArgs>
  }

  export type $BusinessProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessProduct"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_menus: Prisma.$BusinessMenuPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      menuId: string
      name: string
      unityAmount: number
      stockBatches: number[]
      expirationDates: Date[]
      unityConsumeStock: number
      typeUnitConsumeMeasurement: string
      tags: string | null
      nameLastModificationEmployee: string | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessProduct"]>
    composites: {}
  }

  type BusinessProductGetPayload<S extends boolean | null | undefined | BusinessProductDefaultArgs> = $Result.GetResult<Prisma.$BusinessProductPayload, S>

  type BusinessProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessProductCountAggregateInputType | true
    }

  export interface BusinessProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessProduct'], meta: { name: 'BusinessProduct' } }
    /**
     * Find zero or one BusinessProduct that matches the filter.
     * @param {BusinessProductFindUniqueArgs} args - Arguments to find a BusinessProduct
     * @example
     * // Get one BusinessProduct
     * const businessProduct = await prisma.businessProduct.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessProductFindUniqueArgs>(args: SelectSubset<T, BusinessProductFindUniqueArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessProduct that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessProductFindUniqueOrThrowArgs} args - Arguments to find a BusinessProduct
     * @example
     * // Get one BusinessProduct
     * const businessProduct = await prisma.businessProduct.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessProductFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessProduct that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductFindFirstArgs} args - Arguments to find a BusinessProduct
     * @example
     * // Get one BusinessProduct
     * const businessProduct = await prisma.businessProduct.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessProductFindFirstArgs>(args?: SelectSubset<T, BusinessProductFindFirstArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessProduct that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductFindFirstOrThrowArgs} args - Arguments to find a BusinessProduct
     * @example
     * // Get one BusinessProduct
     * const businessProduct = await prisma.businessProduct.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessProductFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessProducts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessProducts
     * const businessProducts = await prisma.businessProduct.findMany()
     * 
     * // Get first 10 BusinessProducts
     * const businessProducts = await prisma.businessProduct.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessProductWithIdOnly = await prisma.businessProduct.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessProductFindManyArgs>(args?: SelectSubset<T, BusinessProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessProduct.
     * @param {BusinessProductCreateArgs} args - Arguments to create a BusinessProduct.
     * @example
     * // Create one BusinessProduct
     * const BusinessProduct = await prisma.businessProduct.create({
     *   data: {
     *     // ... data to create a BusinessProduct
     *   }
     * })
     * 
     */
    create<T extends BusinessProductCreateArgs>(args: SelectSubset<T, BusinessProductCreateArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessProducts.
     * @param {BusinessProductCreateManyArgs} args - Arguments to create many BusinessProducts.
     * @example
     * // Create many BusinessProducts
     * const businessProduct = await prisma.businessProduct.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessProductCreateManyArgs>(args?: SelectSubset<T, BusinessProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessProducts and returns the data saved in the database.
     * @param {BusinessProductCreateManyAndReturnArgs} args - Arguments to create many BusinessProducts.
     * @example
     * // Create many BusinessProducts
     * const businessProduct = await prisma.businessProduct.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessProducts and only return the `id`
     * const businessProductWithIdOnly = await prisma.businessProduct.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessProductCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessProduct.
     * @param {BusinessProductDeleteArgs} args - Arguments to delete one BusinessProduct.
     * @example
     * // Delete one BusinessProduct
     * const BusinessProduct = await prisma.businessProduct.delete({
     *   where: {
     *     // ... filter to delete one BusinessProduct
     *   }
     * })
     * 
     */
    delete<T extends BusinessProductDeleteArgs>(args: SelectSubset<T, BusinessProductDeleteArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessProduct.
     * @param {BusinessProductUpdateArgs} args - Arguments to update one BusinessProduct.
     * @example
     * // Update one BusinessProduct
     * const businessProduct = await prisma.businessProduct.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessProductUpdateArgs>(args: SelectSubset<T, BusinessProductUpdateArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessProducts.
     * @param {BusinessProductDeleteManyArgs} args - Arguments to filter BusinessProducts to delete.
     * @example
     * // Delete a few BusinessProducts
     * const { count } = await prisma.businessProduct.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessProductDeleteManyArgs>(args?: SelectSubset<T, BusinessProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessProducts
     * const businessProduct = await prisma.businessProduct.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessProductUpdateManyArgs>(args: SelectSubset<T, BusinessProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessProducts and returns the data updated in the database.
     * @param {BusinessProductUpdateManyAndReturnArgs} args - Arguments to update many BusinessProducts.
     * @example
     * // Update many BusinessProducts
     * const businessProduct = await prisma.businessProduct.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessProducts and only return the `id`
     * const businessProductWithIdOnly = await prisma.businessProduct.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessProductUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessProduct.
     * @param {BusinessProductUpsertArgs} args - Arguments to update or create a BusinessProduct.
     * @example
     * // Update or create a BusinessProduct
     * const businessProduct = await prisma.businessProduct.upsert({
     *   create: {
     *     // ... data to create a BusinessProduct
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessProduct we want to update
     *   }
     * })
     */
    upsert<T extends BusinessProductUpsertArgs>(args: SelectSubset<T, BusinessProductUpsertArgs<ExtArgs>>): Prisma__BusinessProductClient<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductCountArgs} args - Arguments to filter BusinessProducts to count.
     * @example
     * // Count the number of BusinessProducts
     * const count = await prisma.businessProduct.count({
     *   where: {
     *     // ... the filter for the BusinessProducts we want to count
     *   }
     * })
    **/
    count<T extends BusinessProductCountArgs>(
      args?: Subset<T, BusinessProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessProductAggregateArgs>(args: Subset<T, BusinessProductAggregateArgs>): Prisma.PrismaPromise<GetBusinessProductAggregateType<T>>

    /**
     * Group by BusinessProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessProductGroupByArgs['orderBy'] }
        : { orderBy?: BusinessProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessProduct model
   */
  readonly fields: BusinessProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessProduct.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_menus<T extends BusinessMenuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessMenuDefaultArgs<ExtArgs>>): Prisma__BusinessMenuClient<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessProduct model
   */
  interface BusinessProductFieldRefs {
    readonly id: FieldRef<"BusinessProduct", 'String'>
    readonly menuId: FieldRef<"BusinessProduct", 'String'>
    readonly name: FieldRef<"BusinessProduct", 'String'>
    readonly unityAmount: FieldRef<"BusinessProduct", 'Float'>
    readonly stockBatches: FieldRef<"BusinessProduct", 'Int[]'>
    readonly expirationDates: FieldRef<"BusinessProduct", 'DateTime[]'>
    readonly unityConsumeStock: FieldRef<"BusinessProduct", 'Int'>
    readonly typeUnitConsumeMeasurement: FieldRef<"BusinessProduct", 'String'>
    readonly tags: FieldRef<"BusinessProduct", 'String'>
    readonly nameLastModificationEmployee: FieldRef<"BusinessProduct", 'String'>
    readonly businessId: FieldRef<"BusinessProduct", 'String'>
    readonly createdAt: FieldRef<"BusinessProduct", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessProduct", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessProduct findUnique
   */
  export type BusinessProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * Filter, which BusinessProduct to fetch.
     */
    where: BusinessProductWhereUniqueInput
  }

  /**
   * BusinessProduct findUniqueOrThrow
   */
  export type BusinessProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * Filter, which BusinessProduct to fetch.
     */
    where: BusinessProductWhereUniqueInput
  }

  /**
   * BusinessProduct findFirst
   */
  export type BusinessProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * Filter, which BusinessProduct to fetch.
     */
    where?: BusinessProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessProducts to fetch.
     */
    orderBy?: BusinessProductOrderByWithRelationInput | BusinessProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessProducts.
     */
    cursor?: BusinessProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessProducts.
     */
    distinct?: BusinessProductScalarFieldEnum | BusinessProductScalarFieldEnum[]
  }

  /**
   * BusinessProduct findFirstOrThrow
   */
  export type BusinessProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * Filter, which BusinessProduct to fetch.
     */
    where?: BusinessProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessProducts to fetch.
     */
    orderBy?: BusinessProductOrderByWithRelationInput | BusinessProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessProducts.
     */
    cursor?: BusinessProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessProducts.
     */
    distinct?: BusinessProductScalarFieldEnum | BusinessProductScalarFieldEnum[]
  }

  /**
   * BusinessProduct findMany
   */
  export type BusinessProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * Filter, which BusinessProducts to fetch.
     */
    where?: BusinessProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessProducts to fetch.
     */
    orderBy?: BusinessProductOrderByWithRelationInput | BusinessProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessProducts.
     */
    cursor?: BusinessProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessProducts.
     */
    skip?: number
    distinct?: BusinessProductScalarFieldEnum | BusinessProductScalarFieldEnum[]
  }

  /**
   * BusinessProduct create
   */
  export type BusinessProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessProduct.
     */
    data: XOR<BusinessProductCreateInput, BusinessProductUncheckedCreateInput>
  }

  /**
   * BusinessProduct createMany
   */
  export type BusinessProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessProducts.
     */
    data: BusinessProductCreateManyInput | BusinessProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessProduct createManyAndReturn
   */
  export type BusinessProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessProducts.
     */
    data: BusinessProductCreateManyInput | BusinessProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessProduct update
   */
  export type BusinessProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessProduct.
     */
    data: XOR<BusinessProductUpdateInput, BusinessProductUncheckedUpdateInput>
    /**
     * Choose, which BusinessProduct to update.
     */
    where: BusinessProductWhereUniqueInput
  }

  /**
   * BusinessProduct updateMany
   */
  export type BusinessProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessProducts.
     */
    data: XOR<BusinessProductUpdateManyMutationInput, BusinessProductUncheckedUpdateManyInput>
    /**
     * Filter which BusinessProducts to update
     */
    where?: BusinessProductWhereInput
    /**
     * Limit how many BusinessProducts to update.
     */
    limit?: number
  }

  /**
   * BusinessProduct updateManyAndReturn
   */
  export type BusinessProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * The data used to update BusinessProducts.
     */
    data: XOR<BusinessProductUpdateManyMutationInput, BusinessProductUncheckedUpdateManyInput>
    /**
     * Filter which BusinessProducts to update
     */
    where?: BusinessProductWhereInput
    /**
     * Limit how many BusinessProducts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessProduct upsert
   */
  export type BusinessProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessProduct to update in case it exists.
     */
    where: BusinessProductWhereUniqueInput
    /**
     * In case the BusinessProduct found by the `where` argument doesn't exist, create a new BusinessProduct with this data.
     */
    create: XOR<BusinessProductCreateInput, BusinessProductUncheckedCreateInput>
    /**
     * In case the BusinessProduct was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessProductUpdateInput, BusinessProductUncheckedUpdateInput>
  }

  /**
   * BusinessProduct delete
   */
  export type BusinessProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    /**
     * Filter which BusinessProduct to delete.
     */
    where: BusinessProductWhereUniqueInput
  }

  /**
   * BusinessProduct deleteMany
   */
  export type BusinessProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessProducts to delete
     */
    where?: BusinessProductWhereInput
    /**
     * Limit how many BusinessProducts to delete.
     */
    limit?: number
  }

  /**
   * BusinessProduct without action
   */
  export type BusinessProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
  }


  /**
   * Model BusinessGeneralSalesReportAI
   */

  export type AggregateBusinessGeneralSalesReportAI = {
    _count: BusinessGeneralSalesReportAICountAggregateOutputType | null
    _min: BusinessGeneralSalesReportAIMinAggregateOutputType | null
    _max: BusinessGeneralSalesReportAIMaxAggregateOutputType | null
  }

  export type BusinessGeneralSalesReportAIMinAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessGeneralSalesReportAIMaxAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessGeneralSalesReportAICountAggregateOutputType = {
    id: number
    url: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessGeneralSalesReportAIMinAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessGeneralSalesReportAIMaxAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessGeneralSalesReportAICountAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessGeneralSalesReportAIAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessGeneralSalesReportAI to aggregate.
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralSalesReportAIS to fetch.
     */
    orderBy?: BusinessGeneralSalesReportAIOrderByWithRelationInput | BusinessGeneralSalesReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessGeneralSalesReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralSalesReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralSalesReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessGeneralSalesReportAIS
    **/
    _count?: true | BusinessGeneralSalesReportAICountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessGeneralSalesReportAIMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessGeneralSalesReportAIMaxAggregateInputType
  }

  export type GetBusinessGeneralSalesReportAIAggregateType<T extends BusinessGeneralSalesReportAIAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessGeneralSalesReportAI]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessGeneralSalesReportAI[P]>
      : GetScalarType<T[P], AggregateBusinessGeneralSalesReportAI[P]>
  }




  export type BusinessGeneralSalesReportAIGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessGeneralSalesReportAIWhereInput
    orderBy?: BusinessGeneralSalesReportAIOrderByWithAggregationInput | BusinessGeneralSalesReportAIOrderByWithAggregationInput[]
    by: BusinessGeneralSalesReportAIScalarFieldEnum[] | BusinessGeneralSalesReportAIScalarFieldEnum
    having?: BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessGeneralSalesReportAICountAggregateInputType | true
    _min?: BusinessGeneralSalesReportAIMinAggregateInputType
    _max?: BusinessGeneralSalesReportAIMaxAggregateInputType
  }

  export type BusinessGeneralSalesReportAIGroupByOutputType = {
    id: string
    url: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessGeneralSalesReportAICountAggregateOutputType | null
    _min: BusinessGeneralSalesReportAIMinAggregateOutputType | null
    _max: BusinessGeneralSalesReportAIMaxAggregateOutputType | null
  }

  type GetBusinessGeneralSalesReportAIGroupByPayload<T extends BusinessGeneralSalesReportAIGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessGeneralSalesReportAIGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessGeneralSalesReportAIGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessGeneralSalesReportAIGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessGeneralSalesReportAIGroupByOutputType[P]>
        }
      >
    >


  export type BusinessGeneralSalesReportAISelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessGeneralSalesReportAI"]>

  export type BusinessGeneralSalesReportAISelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessGeneralSalesReportAI"]>

  export type BusinessGeneralSalesReportAISelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessGeneralSalesReportAI"]>

  export type BusinessGeneralSalesReportAISelectScalar = {
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessGeneralSalesReportAIOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessGeneralSalesReportAI"]>
  export type BusinessGeneralSalesReportAIInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessGeneralSalesReportAIIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessGeneralSalesReportAIIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessGeneralSalesReportAIPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessGeneralSalesReportAI"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessGeneralSalesReportAI"]>
    composites: {}
  }

  type BusinessGeneralSalesReportAIGetPayload<S extends boolean | null | undefined | BusinessGeneralSalesReportAIDefaultArgs> = $Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload, S>

  type BusinessGeneralSalesReportAICountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessGeneralSalesReportAIFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessGeneralSalesReportAICountAggregateInputType | true
    }

  export interface BusinessGeneralSalesReportAIDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessGeneralSalesReportAI'], meta: { name: 'BusinessGeneralSalesReportAI' } }
    /**
     * Find zero or one BusinessGeneralSalesReportAI that matches the filter.
     * @param {BusinessGeneralSalesReportAIFindUniqueArgs} args - Arguments to find a BusinessGeneralSalesReportAI
     * @example
     * // Get one BusinessGeneralSalesReportAI
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessGeneralSalesReportAIFindUniqueArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIFindUniqueArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessGeneralSalesReportAI that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessGeneralSalesReportAIFindUniqueOrThrowArgs} args - Arguments to find a BusinessGeneralSalesReportAI
     * @example
     * // Get one BusinessGeneralSalesReportAI
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessGeneralSalesReportAIFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessGeneralSalesReportAI that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAIFindFirstArgs} args - Arguments to find a BusinessGeneralSalesReportAI
     * @example
     * // Get one BusinessGeneralSalesReportAI
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessGeneralSalesReportAIFindFirstArgs>(args?: SelectSubset<T, BusinessGeneralSalesReportAIFindFirstArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessGeneralSalesReportAI that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAIFindFirstOrThrowArgs} args - Arguments to find a BusinessGeneralSalesReportAI
     * @example
     * // Get one BusinessGeneralSalesReportAI
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessGeneralSalesReportAIFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessGeneralSalesReportAIFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessGeneralSalesReportAIS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAIFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessGeneralSalesReportAIS
     * const businessGeneralSalesReportAIS = await prisma.businessGeneralSalesReportAI.findMany()
     * 
     * // Get first 10 BusinessGeneralSalesReportAIS
     * const businessGeneralSalesReportAIS = await prisma.businessGeneralSalesReportAI.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessGeneralSalesReportAIWithIdOnly = await prisma.businessGeneralSalesReportAI.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessGeneralSalesReportAIFindManyArgs>(args?: SelectSubset<T, BusinessGeneralSalesReportAIFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessGeneralSalesReportAI.
     * @param {BusinessGeneralSalesReportAICreateArgs} args - Arguments to create a BusinessGeneralSalesReportAI.
     * @example
     * // Create one BusinessGeneralSalesReportAI
     * const BusinessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.create({
     *   data: {
     *     // ... data to create a BusinessGeneralSalesReportAI
     *   }
     * })
     * 
     */
    create<T extends BusinessGeneralSalesReportAICreateArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAICreateArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessGeneralSalesReportAIS.
     * @param {BusinessGeneralSalesReportAICreateManyArgs} args - Arguments to create many BusinessGeneralSalesReportAIS.
     * @example
     * // Create many BusinessGeneralSalesReportAIS
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessGeneralSalesReportAICreateManyArgs>(args?: SelectSubset<T, BusinessGeneralSalesReportAICreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessGeneralSalesReportAIS and returns the data saved in the database.
     * @param {BusinessGeneralSalesReportAICreateManyAndReturnArgs} args - Arguments to create many BusinessGeneralSalesReportAIS.
     * @example
     * // Create many BusinessGeneralSalesReportAIS
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessGeneralSalesReportAIS and only return the `id`
     * const businessGeneralSalesReportAIWithIdOnly = await prisma.businessGeneralSalesReportAI.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessGeneralSalesReportAICreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessGeneralSalesReportAICreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessGeneralSalesReportAI.
     * @param {BusinessGeneralSalesReportAIDeleteArgs} args - Arguments to delete one BusinessGeneralSalesReportAI.
     * @example
     * // Delete one BusinessGeneralSalesReportAI
     * const BusinessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.delete({
     *   where: {
     *     // ... filter to delete one BusinessGeneralSalesReportAI
     *   }
     * })
     * 
     */
    delete<T extends BusinessGeneralSalesReportAIDeleteArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIDeleteArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessGeneralSalesReportAI.
     * @param {BusinessGeneralSalesReportAIUpdateArgs} args - Arguments to update one BusinessGeneralSalesReportAI.
     * @example
     * // Update one BusinessGeneralSalesReportAI
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessGeneralSalesReportAIUpdateArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIUpdateArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessGeneralSalesReportAIS.
     * @param {BusinessGeneralSalesReportAIDeleteManyArgs} args - Arguments to filter BusinessGeneralSalesReportAIS to delete.
     * @example
     * // Delete a few BusinessGeneralSalesReportAIS
     * const { count } = await prisma.businessGeneralSalesReportAI.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessGeneralSalesReportAIDeleteManyArgs>(args?: SelectSubset<T, BusinessGeneralSalesReportAIDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessGeneralSalesReportAIS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAIUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessGeneralSalesReportAIS
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessGeneralSalesReportAIUpdateManyArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessGeneralSalesReportAIS and returns the data updated in the database.
     * @param {BusinessGeneralSalesReportAIUpdateManyAndReturnArgs} args - Arguments to update many BusinessGeneralSalesReportAIS.
     * @example
     * // Update many BusinessGeneralSalesReportAIS
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessGeneralSalesReportAIS and only return the `id`
     * const businessGeneralSalesReportAIWithIdOnly = await prisma.businessGeneralSalesReportAI.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessGeneralSalesReportAIUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessGeneralSalesReportAI.
     * @param {BusinessGeneralSalesReportAIUpsertArgs} args - Arguments to update or create a BusinessGeneralSalesReportAI.
     * @example
     * // Update or create a BusinessGeneralSalesReportAI
     * const businessGeneralSalesReportAI = await prisma.businessGeneralSalesReportAI.upsert({
     *   create: {
     *     // ... data to create a BusinessGeneralSalesReportAI
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessGeneralSalesReportAI we want to update
     *   }
     * })
     */
    upsert<T extends BusinessGeneralSalesReportAIUpsertArgs>(args: SelectSubset<T, BusinessGeneralSalesReportAIUpsertArgs<ExtArgs>>): Prisma__BusinessGeneralSalesReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessGeneralSalesReportAIS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAICountArgs} args - Arguments to filter BusinessGeneralSalesReportAIS to count.
     * @example
     * // Count the number of BusinessGeneralSalesReportAIS
     * const count = await prisma.businessGeneralSalesReportAI.count({
     *   where: {
     *     // ... the filter for the BusinessGeneralSalesReportAIS we want to count
     *   }
     * })
    **/
    count<T extends BusinessGeneralSalesReportAICountArgs>(
      args?: Subset<T, BusinessGeneralSalesReportAICountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessGeneralSalesReportAICountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessGeneralSalesReportAI.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAIAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessGeneralSalesReportAIAggregateArgs>(args: Subset<T, BusinessGeneralSalesReportAIAggregateArgs>): Prisma.PrismaPromise<GetBusinessGeneralSalesReportAIAggregateType<T>>

    /**
     * Group by BusinessGeneralSalesReportAI.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralSalesReportAIGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessGeneralSalesReportAIGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessGeneralSalesReportAIGroupByArgs['orderBy'] }
        : { orderBy?: BusinessGeneralSalesReportAIGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessGeneralSalesReportAIGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessGeneralSalesReportAIGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessGeneralSalesReportAI model
   */
  readonly fields: BusinessGeneralSalesReportAIFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessGeneralSalesReportAI.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessGeneralSalesReportAIClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessGeneralSalesReportAI model
   */
  interface BusinessGeneralSalesReportAIFieldRefs {
    readonly id: FieldRef<"BusinessGeneralSalesReportAI", 'String'>
    readonly url: FieldRef<"BusinessGeneralSalesReportAI", 'String'>
    readonly businessId: FieldRef<"BusinessGeneralSalesReportAI", 'String'>
    readonly createdAt: FieldRef<"BusinessGeneralSalesReportAI", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessGeneralSalesReportAI", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessGeneralSalesReportAI findUnique
   */
  export type BusinessGeneralSalesReportAIFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralSalesReportAI to fetch.
     */
    where: BusinessGeneralSalesReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralSalesReportAI findUniqueOrThrow
   */
  export type BusinessGeneralSalesReportAIFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralSalesReportAI to fetch.
     */
    where: BusinessGeneralSalesReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralSalesReportAI findFirst
   */
  export type BusinessGeneralSalesReportAIFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralSalesReportAI to fetch.
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralSalesReportAIS to fetch.
     */
    orderBy?: BusinessGeneralSalesReportAIOrderByWithRelationInput | BusinessGeneralSalesReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessGeneralSalesReportAIS.
     */
    cursor?: BusinessGeneralSalesReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralSalesReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralSalesReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessGeneralSalesReportAIS.
     */
    distinct?: BusinessGeneralSalesReportAIScalarFieldEnum | BusinessGeneralSalesReportAIScalarFieldEnum[]
  }

  /**
   * BusinessGeneralSalesReportAI findFirstOrThrow
   */
  export type BusinessGeneralSalesReportAIFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralSalesReportAI to fetch.
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralSalesReportAIS to fetch.
     */
    orderBy?: BusinessGeneralSalesReportAIOrderByWithRelationInput | BusinessGeneralSalesReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessGeneralSalesReportAIS.
     */
    cursor?: BusinessGeneralSalesReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralSalesReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralSalesReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessGeneralSalesReportAIS.
     */
    distinct?: BusinessGeneralSalesReportAIScalarFieldEnum | BusinessGeneralSalesReportAIScalarFieldEnum[]
  }

  /**
   * BusinessGeneralSalesReportAI findMany
   */
  export type BusinessGeneralSalesReportAIFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralSalesReportAIS to fetch.
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralSalesReportAIS to fetch.
     */
    orderBy?: BusinessGeneralSalesReportAIOrderByWithRelationInput | BusinessGeneralSalesReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessGeneralSalesReportAIS.
     */
    cursor?: BusinessGeneralSalesReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralSalesReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralSalesReportAIS.
     */
    skip?: number
    distinct?: BusinessGeneralSalesReportAIScalarFieldEnum | BusinessGeneralSalesReportAIScalarFieldEnum[]
  }

  /**
   * BusinessGeneralSalesReportAI create
   */
  export type BusinessGeneralSalesReportAICreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessGeneralSalesReportAI.
     */
    data: XOR<BusinessGeneralSalesReportAICreateInput, BusinessGeneralSalesReportAIUncheckedCreateInput>
  }

  /**
   * BusinessGeneralSalesReportAI createMany
   */
  export type BusinessGeneralSalesReportAICreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessGeneralSalesReportAIS.
     */
    data: BusinessGeneralSalesReportAICreateManyInput | BusinessGeneralSalesReportAICreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessGeneralSalesReportAI createManyAndReturn
   */
  export type BusinessGeneralSalesReportAICreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessGeneralSalesReportAIS.
     */
    data: BusinessGeneralSalesReportAICreateManyInput | BusinessGeneralSalesReportAICreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessGeneralSalesReportAI update
   */
  export type BusinessGeneralSalesReportAIUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessGeneralSalesReportAI.
     */
    data: XOR<BusinessGeneralSalesReportAIUpdateInput, BusinessGeneralSalesReportAIUncheckedUpdateInput>
    /**
     * Choose, which BusinessGeneralSalesReportAI to update.
     */
    where: BusinessGeneralSalesReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralSalesReportAI updateMany
   */
  export type BusinessGeneralSalesReportAIUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessGeneralSalesReportAIS.
     */
    data: XOR<BusinessGeneralSalesReportAIUpdateManyMutationInput, BusinessGeneralSalesReportAIUncheckedUpdateManyInput>
    /**
     * Filter which BusinessGeneralSalesReportAIS to update
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * Limit how many BusinessGeneralSalesReportAIS to update.
     */
    limit?: number
  }

  /**
   * BusinessGeneralSalesReportAI updateManyAndReturn
   */
  export type BusinessGeneralSalesReportAIUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * The data used to update BusinessGeneralSalesReportAIS.
     */
    data: XOR<BusinessGeneralSalesReportAIUpdateManyMutationInput, BusinessGeneralSalesReportAIUncheckedUpdateManyInput>
    /**
     * Filter which BusinessGeneralSalesReportAIS to update
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * Limit how many BusinessGeneralSalesReportAIS to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessGeneralSalesReportAI upsert
   */
  export type BusinessGeneralSalesReportAIUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessGeneralSalesReportAI to update in case it exists.
     */
    where: BusinessGeneralSalesReportAIWhereUniqueInput
    /**
     * In case the BusinessGeneralSalesReportAI found by the `where` argument doesn't exist, create a new BusinessGeneralSalesReportAI with this data.
     */
    create: XOR<BusinessGeneralSalesReportAICreateInput, BusinessGeneralSalesReportAIUncheckedCreateInput>
    /**
     * In case the BusinessGeneralSalesReportAI was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessGeneralSalesReportAIUpdateInput, BusinessGeneralSalesReportAIUncheckedUpdateInput>
  }

  /**
   * BusinessGeneralSalesReportAI delete
   */
  export type BusinessGeneralSalesReportAIDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    /**
     * Filter which BusinessGeneralSalesReportAI to delete.
     */
    where: BusinessGeneralSalesReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralSalesReportAI deleteMany
   */
  export type BusinessGeneralSalesReportAIDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessGeneralSalesReportAIS to delete
     */
    where?: BusinessGeneralSalesReportAIWhereInput
    /**
     * Limit how many BusinessGeneralSalesReportAIS to delete.
     */
    limit?: number
  }

  /**
   * BusinessGeneralSalesReportAI without action
   */
  export type BusinessGeneralSalesReportAIDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
  }


  /**
   * Model BusinessGeneralWarehouseReportAI
   */

  export type AggregateBusinessGeneralWarehouseReportAI = {
    _count: BusinessGeneralWarehouseReportAICountAggregateOutputType | null
    _min: BusinessGeneralWarehouseReportAIMinAggregateOutputType | null
    _max: BusinessGeneralWarehouseReportAIMaxAggregateOutputType | null
  }

  export type BusinessGeneralWarehouseReportAIMinAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessGeneralWarehouseReportAIMaxAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessGeneralWarehouseReportAICountAggregateOutputType = {
    id: number
    url: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessGeneralWarehouseReportAIMinAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessGeneralWarehouseReportAIMaxAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessGeneralWarehouseReportAICountAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessGeneralWarehouseReportAIAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessGeneralWarehouseReportAI to aggregate.
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralWarehouseReportAIS to fetch.
     */
    orderBy?: BusinessGeneralWarehouseReportAIOrderByWithRelationInput | BusinessGeneralWarehouseReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessGeneralWarehouseReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralWarehouseReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralWarehouseReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessGeneralWarehouseReportAIS
    **/
    _count?: true | BusinessGeneralWarehouseReportAICountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessGeneralWarehouseReportAIMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessGeneralWarehouseReportAIMaxAggregateInputType
  }

  export type GetBusinessGeneralWarehouseReportAIAggregateType<T extends BusinessGeneralWarehouseReportAIAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessGeneralWarehouseReportAI]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessGeneralWarehouseReportAI[P]>
      : GetScalarType<T[P], AggregateBusinessGeneralWarehouseReportAI[P]>
  }




  export type BusinessGeneralWarehouseReportAIGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessGeneralWarehouseReportAIWhereInput
    orderBy?: BusinessGeneralWarehouseReportAIOrderByWithAggregationInput | BusinessGeneralWarehouseReportAIOrderByWithAggregationInput[]
    by: BusinessGeneralWarehouseReportAIScalarFieldEnum[] | BusinessGeneralWarehouseReportAIScalarFieldEnum
    having?: BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessGeneralWarehouseReportAICountAggregateInputType | true
    _min?: BusinessGeneralWarehouseReportAIMinAggregateInputType
    _max?: BusinessGeneralWarehouseReportAIMaxAggregateInputType
  }

  export type BusinessGeneralWarehouseReportAIGroupByOutputType = {
    id: string
    url: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessGeneralWarehouseReportAICountAggregateOutputType | null
    _min: BusinessGeneralWarehouseReportAIMinAggregateOutputType | null
    _max: BusinessGeneralWarehouseReportAIMaxAggregateOutputType | null
  }

  type GetBusinessGeneralWarehouseReportAIGroupByPayload<T extends BusinessGeneralWarehouseReportAIGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessGeneralWarehouseReportAIGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessGeneralWarehouseReportAIGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessGeneralWarehouseReportAIGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessGeneralWarehouseReportAIGroupByOutputType[P]>
        }
      >
    >


  export type BusinessGeneralWarehouseReportAISelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessGeneralWarehouseReportAI"]>

  export type BusinessGeneralWarehouseReportAISelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessGeneralWarehouseReportAI"]>

  export type BusinessGeneralWarehouseReportAISelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessGeneralWarehouseReportAI"]>

  export type BusinessGeneralWarehouseReportAISelectScalar = {
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessGeneralWarehouseReportAIOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessGeneralWarehouseReportAI"]>
  export type BusinessGeneralWarehouseReportAIInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessGeneralWarehouseReportAIIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessGeneralWarehouseReportAIIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessGeneralWarehouseReportAIPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessGeneralWarehouseReportAI"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessGeneralWarehouseReportAI"]>
    composites: {}
  }

  type BusinessGeneralWarehouseReportAIGetPayload<S extends boolean | null | undefined | BusinessGeneralWarehouseReportAIDefaultArgs> = $Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload, S>

  type BusinessGeneralWarehouseReportAICountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessGeneralWarehouseReportAIFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessGeneralWarehouseReportAICountAggregateInputType | true
    }

  export interface BusinessGeneralWarehouseReportAIDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessGeneralWarehouseReportAI'], meta: { name: 'BusinessGeneralWarehouseReportAI' } }
    /**
     * Find zero or one BusinessGeneralWarehouseReportAI that matches the filter.
     * @param {BusinessGeneralWarehouseReportAIFindUniqueArgs} args - Arguments to find a BusinessGeneralWarehouseReportAI
     * @example
     * // Get one BusinessGeneralWarehouseReportAI
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessGeneralWarehouseReportAIFindUniqueArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIFindUniqueArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessGeneralWarehouseReportAI that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessGeneralWarehouseReportAIFindUniqueOrThrowArgs} args - Arguments to find a BusinessGeneralWarehouseReportAI
     * @example
     * // Get one BusinessGeneralWarehouseReportAI
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessGeneralWarehouseReportAIFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessGeneralWarehouseReportAI that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAIFindFirstArgs} args - Arguments to find a BusinessGeneralWarehouseReportAI
     * @example
     * // Get one BusinessGeneralWarehouseReportAI
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessGeneralWarehouseReportAIFindFirstArgs>(args?: SelectSubset<T, BusinessGeneralWarehouseReportAIFindFirstArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessGeneralWarehouseReportAI that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAIFindFirstOrThrowArgs} args - Arguments to find a BusinessGeneralWarehouseReportAI
     * @example
     * // Get one BusinessGeneralWarehouseReportAI
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessGeneralWarehouseReportAIFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessGeneralWarehouseReportAIFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessGeneralWarehouseReportAIS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAIFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessGeneralWarehouseReportAIS
     * const businessGeneralWarehouseReportAIS = await prisma.businessGeneralWarehouseReportAI.findMany()
     * 
     * // Get first 10 BusinessGeneralWarehouseReportAIS
     * const businessGeneralWarehouseReportAIS = await prisma.businessGeneralWarehouseReportAI.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessGeneralWarehouseReportAIWithIdOnly = await prisma.businessGeneralWarehouseReportAI.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessGeneralWarehouseReportAIFindManyArgs>(args?: SelectSubset<T, BusinessGeneralWarehouseReportAIFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessGeneralWarehouseReportAI.
     * @param {BusinessGeneralWarehouseReportAICreateArgs} args - Arguments to create a BusinessGeneralWarehouseReportAI.
     * @example
     * // Create one BusinessGeneralWarehouseReportAI
     * const BusinessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.create({
     *   data: {
     *     // ... data to create a BusinessGeneralWarehouseReportAI
     *   }
     * })
     * 
     */
    create<T extends BusinessGeneralWarehouseReportAICreateArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAICreateArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessGeneralWarehouseReportAIS.
     * @param {BusinessGeneralWarehouseReportAICreateManyArgs} args - Arguments to create many BusinessGeneralWarehouseReportAIS.
     * @example
     * // Create many BusinessGeneralWarehouseReportAIS
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessGeneralWarehouseReportAICreateManyArgs>(args?: SelectSubset<T, BusinessGeneralWarehouseReportAICreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessGeneralWarehouseReportAIS and returns the data saved in the database.
     * @param {BusinessGeneralWarehouseReportAICreateManyAndReturnArgs} args - Arguments to create many BusinessGeneralWarehouseReportAIS.
     * @example
     * // Create many BusinessGeneralWarehouseReportAIS
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessGeneralWarehouseReportAIS and only return the `id`
     * const businessGeneralWarehouseReportAIWithIdOnly = await prisma.businessGeneralWarehouseReportAI.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessGeneralWarehouseReportAICreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessGeneralWarehouseReportAICreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessGeneralWarehouseReportAI.
     * @param {BusinessGeneralWarehouseReportAIDeleteArgs} args - Arguments to delete one BusinessGeneralWarehouseReportAI.
     * @example
     * // Delete one BusinessGeneralWarehouseReportAI
     * const BusinessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.delete({
     *   where: {
     *     // ... filter to delete one BusinessGeneralWarehouseReportAI
     *   }
     * })
     * 
     */
    delete<T extends BusinessGeneralWarehouseReportAIDeleteArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIDeleteArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessGeneralWarehouseReportAI.
     * @param {BusinessGeneralWarehouseReportAIUpdateArgs} args - Arguments to update one BusinessGeneralWarehouseReportAI.
     * @example
     * // Update one BusinessGeneralWarehouseReportAI
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessGeneralWarehouseReportAIUpdateArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIUpdateArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessGeneralWarehouseReportAIS.
     * @param {BusinessGeneralWarehouseReportAIDeleteManyArgs} args - Arguments to filter BusinessGeneralWarehouseReportAIS to delete.
     * @example
     * // Delete a few BusinessGeneralWarehouseReportAIS
     * const { count } = await prisma.businessGeneralWarehouseReportAI.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessGeneralWarehouseReportAIDeleteManyArgs>(args?: SelectSubset<T, BusinessGeneralWarehouseReportAIDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessGeneralWarehouseReportAIS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAIUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessGeneralWarehouseReportAIS
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessGeneralWarehouseReportAIUpdateManyArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessGeneralWarehouseReportAIS and returns the data updated in the database.
     * @param {BusinessGeneralWarehouseReportAIUpdateManyAndReturnArgs} args - Arguments to update many BusinessGeneralWarehouseReportAIS.
     * @example
     * // Update many BusinessGeneralWarehouseReportAIS
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessGeneralWarehouseReportAIS and only return the `id`
     * const businessGeneralWarehouseReportAIWithIdOnly = await prisma.businessGeneralWarehouseReportAI.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessGeneralWarehouseReportAIUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessGeneralWarehouseReportAI.
     * @param {BusinessGeneralWarehouseReportAIUpsertArgs} args - Arguments to update or create a BusinessGeneralWarehouseReportAI.
     * @example
     * // Update or create a BusinessGeneralWarehouseReportAI
     * const businessGeneralWarehouseReportAI = await prisma.businessGeneralWarehouseReportAI.upsert({
     *   create: {
     *     // ... data to create a BusinessGeneralWarehouseReportAI
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessGeneralWarehouseReportAI we want to update
     *   }
     * })
     */
    upsert<T extends BusinessGeneralWarehouseReportAIUpsertArgs>(args: SelectSubset<T, BusinessGeneralWarehouseReportAIUpsertArgs<ExtArgs>>): Prisma__BusinessGeneralWarehouseReportAIClient<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessGeneralWarehouseReportAIS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAICountArgs} args - Arguments to filter BusinessGeneralWarehouseReportAIS to count.
     * @example
     * // Count the number of BusinessGeneralWarehouseReportAIS
     * const count = await prisma.businessGeneralWarehouseReportAI.count({
     *   where: {
     *     // ... the filter for the BusinessGeneralWarehouseReportAIS we want to count
     *   }
     * })
    **/
    count<T extends BusinessGeneralWarehouseReportAICountArgs>(
      args?: Subset<T, BusinessGeneralWarehouseReportAICountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessGeneralWarehouseReportAICountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessGeneralWarehouseReportAI.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAIAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessGeneralWarehouseReportAIAggregateArgs>(args: Subset<T, BusinessGeneralWarehouseReportAIAggregateArgs>): Prisma.PrismaPromise<GetBusinessGeneralWarehouseReportAIAggregateType<T>>

    /**
     * Group by BusinessGeneralWarehouseReportAI.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGeneralWarehouseReportAIGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessGeneralWarehouseReportAIGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessGeneralWarehouseReportAIGroupByArgs['orderBy'] }
        : { orderBy?: BusinessGeneralWarehouseReportAIGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessGeneralWarehouseReportAIGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessGeneralWarehouseReportAIGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessGeneralWarehouseReportAI model
   */
  readonly fields: BusinessGeneralWarehouseReportAIFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessGeneralWarehouseReportAI.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessGeneralWarehouseReportAIClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessGeneralWarehouseReportAI model
   */
  interface BusinessGeneralWarehouseReportAIFieldRefs {
    readonly id: FieldRef<"BusinessGeneralWarehouseReportAI", 'String'>
    readonly url: FieldRef<"BusinessGeneralWarehouseReportAI", 'String'>
    readonly businessId: FieldRef<"BusinessGeneralWarehouseReportAI", 'String'>
    readonly createdAt: FieldRef<"BusinessGeneralWarehouseReportAI", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessGeneralWarehouseReportAI", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessGeneralWarehouseReportAI findUnique
   */
  export type BusinessGeneralWarehouseReportAIFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralWarehouseReportAI to fetch.
     */
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralWarehouseReportAI findUniqueOrThrow
   */
  export type BusinessGeneralWarehouseReportAIFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralWarehouseReportAI to fetch.
     */
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralWarehouseReportAI findFirst
   */
  export type BusinessGeneralWarehouseReportAIFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralWarehouseReportAI to fetch.
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralWarehouseReportAIS to fetch.
     */
    orderBy?: BusinessGeneralWarehouseReportAIOrderByWithRelationInput | BusinessGeneralWarehouseReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessGeneralWarehouseReportAIS.
     */
    cursor?: BusinessGeneralWarehouseReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralWarehouseReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralWarehouseReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessGeneralWarehouseReportAIS.
     */
    distinct?: BusinessGeneralWarehouseReportAIScalarFieldEnum | BusinessGeneralWarehouseReportAIScalarFieldEnum[]
  }

  /**
   * BusinessGeneralWarehouseReportAI findFirstOrThrow
   */
  export type BusinessGeneralWarehouseReportAIFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralWarehouseReportAI to fetch.
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralWarehouseReportAIS to fetch.
     */
    orderBy?: BusinessGeneralWarehouseReportAIOrderByWithRelationInput | BusinessGeneralWarehouseReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessGeneralWarehouseReportAIS.
     */
    cursor?: BusinessGeneralWarehouseReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralWarehouseReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralWarehouseReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessGeneralWarehouseReportAIS.
     */
    distinct?: BusinessGeneralWarehouseReportAIScalarFieldEnum | BusinessGeneralWarehouseReportAIScalarFieldEnum[]
  }

  /**
   * BusinessGeneralWarehouseReportAI findMany
   */
  export type BusinessGeneralWarehouseReportAIFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessGeneralWarehouseReportAIS to fetch.
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessGeneralWarehouseReportAIS to fetch.
     */
    orderBy?: BusinessGeneralWarehouseReportAIOrderByWithRelationInput | BusinessGeneralWarehouseReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessGeneralWarehouseReportAIS.
     */
    cursor?: BusinessGeneralWarehouseReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessGeneralWarehouseReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessGeneralWarehouseReportAIS.
     */
    skip?: number
    distinct?: BusinessGeneralWarehouseReportAIScalarFieldEnum | BusinessGeneralWarehouseReportAIScalarFieldEnum[]
  }

  /**
   * BusinessGeneralWarehouseReportAI create
   */
  export type BusinessGeneralWarehouseReportAICreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessGeneralWarehouseReportAI.
     */
    data: XOR<BusinessGeneralWarehouseReportAICreateInput, BusinessGeneralWarehouseReportAIUncheckedCreateInput>
  }

  /**
   * BusinessGeneralWarehouseReportAI createMany
   */
  export type BusinessGeneralWarehouseReportAICreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessGeneralWarehouseReportAIS.
     */
    data: BusinessGeneralWarehouseReportAICreateManyInput | BusinessGeneralWarehouseReportAICreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessGeneralWarehouseReportAI createManyAndReturn
   */
  export type BusinessGeneralWarehouseReportAICreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessGeneralWarehouseReportAIS.
     */
    data: BusinessGeneralWarehouseReportAICreateManyInput | BusinessGeneralWarehouseReportAICreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessGeneralWarehouseReportAI update
   */
  export type BusinessGeneralWarehouseReportAIUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessGeneralWarehouseReportAI.
     */
    data: XOR<BusinessGeneralWarehouseReportAIUpdateInput, BusinessGeneralWarehouseReportAIUncheckedUpdateInput>
    /**
     * Choose, which BusinessGeneralWarehouseReportAI to update.
     */
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralWarehouseReportAI updateMany
   */
  export type BusinessGeneralWarehouseReportAIUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessGeneralWarehouseReportAIS.
     */
    data: XOR<BusinessGeneralWarehouseReportAIUpdateManyMutationInput, BusinessGeneralWarehouseReportAIUncheckedUpdateManyInput>
    /**
     * Filter which BusinessGeneralWarehouseReportAIS to update
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * Limit how many BusinessGeneralWarehouseReportAIS to update.
     */
    limit?: number
  }

  /**
   * BusinessGeneralWarehouseReportAI updateManyAndReturn
   */
  export type BusinessGeneralWarehouseReportAIUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * The data used to update BusinessGeneralWarehouseReportAIS.
     */
    data: XOR<BusinessGeneralWarehouseReportAIUpdateManyMutationInput, BusinessGeneralWarehouseReportAIUncheckedUpdateManyInput>
    /**
     * Filter which BusinessGeneralWarehouseReportAIS to update
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * Limit how many BusinessGeneralWarehouseReportAIS to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessGeneralWarehouseReportAI upsert
   */
  export type BusinessGeneralWarehouseReportAIUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessGeneralWarehouseReportAI to update in case it exists.
     */
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
    /**
     * In case the BusinessGeneralWarehouseReportAI found by the `where` argument doesn't exist, create a new BusinessGeneralWarehouseReportAI with this data.
     */
    create: XOR<BusinessGeneralWarehouseReportAICreateInput, BusinessGeneralWarehouseReportAIUncheckedCreateInput>
    /**
     * In case the BusinessGeneralWarehouseReportAI was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessGeneralWarehouseReportAIUpdateInput, BusinessGeneralWarehouseReportAIUncheckedUpdateInput>
  }

  /**
   * BusinessGeneralWarehouseReportAI delete
   */
  export type BusinessGeneralWarehouseReportAIDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    /**
     * Filter which BusinessGeneralWarehouseReportAI to delete.
     */
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
  }

  /**
   * BusinessGeneralWarehouseReportAI deleteMany
   */
  export type BusinessGeneralWarehouseReportAIDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessGeneralWarehouseReportAIS to delete
     */
    where?: BusinessGeneralWarehouseReportAIWhereInput
    /**
     * Limit how many BusinessGeneralWarehouseReportAIS to delete.
     */
    limit?: number
  }

  /**
   * BusinessGeneralWarehouseReportAI without action
   */
  export type BusinessGeneralWarehouseReportAIDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
  }


  /**
   * Model BusinessWarehouseReplenishmentReportAI
   */

  export type AggregateBusinessWarehouseReplenishmentReportAI = {
    _count: BusinessWarehouseReplenishmentReportAICountAggregateOutputType | null
    _min: BusinessWarehouseReplenishmentReportAIMinAggregateOutputType | null
    _max: BusinessWarehouseReplenishmentReportAIMaxAggregateOutputType | null
  }

  export type BusinessWarehouseReplenishmentReportAIMinAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessWarehouseReplenishmentReportAIMaxAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessWarehouseReplenishmentReportAICountAggregateOutputType = {
    id: number
    url: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessWarehouseReplenishmentReportAIMinAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessWarehouseReplenishmentReportAIMaxAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessWarehouseReplenishmentReportAICountAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessWarehouseReplenishmentReportAIAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessWarehouseReplenishmentReportAI to aggregate.
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessWarehouseReplenishmentReportAIS to fetch.
     */
    orderBy?: BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput | BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessWarehouseReplenishmentReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessWarehouseReplenishmentReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessWarehouseReplenishmentReportAIS
    **/
    _count?: true | BusinessWarehouseReplenishmentReportAICountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessWarehouseReplenishmentReportAIMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessWarehouseReplenishmentReportAIMaxAggregateInputType
  }

  export type GetBusinessWarehouseReplenishmentReportAIAggregateType<T extends BusinessWarehouseReplenishmentReportAIAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessWarehouseReplenishmentReportAI]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessWarehouseReplenishmentReportAI[P]>
      : GetScalarType<T[P], AggregateBusinessWarehouseReplenishmentReportAI[P]>
  }




  export type BusinessWarehouseReplenishmentReportAIGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    orderBy?: BusinessWarehouseReplenishmentReportAIOrderByWithAggregationInput | BusinessWarehouseReplenishmentReportAIOrderByWithAggregationInput[]
    by: BusinessWarehouseReplenishmentReportAIScalarFieldEnum[] | BusinessWarehouseReplenishmentReportAIScalarFieldEnum
    having?: BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessWarehouseReplenishmentReportAICountAggregateInputType | true
    _min?: BusinessWarehouseReplenishmentReportAIMinAggregateInputType
    _max?: BusinessWarehouseReplenishmentReportAIMaxAggregateInputType
  }

  export type BusinessWarehouseReplenishmentReportAIGroupByOutputType = {
    id: string
    url: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: BusinessWarehouseReplenishmentReportAICountAggregateOutputType | null
    _min: BusinessWarehouseReplenishmentReportAIMinAggregateOutputType | null
    _max: BusinessWarehouseReplenishmentReportAIMaxAggregateOutputType | null
  }

  type GetBusinessWarehouseReplenishmentReportAIGroupByPayload<T extends BusinessWarehouseReplenishmentReportAIGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessWarehouseReplenishmentReportAIGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessWarehouseReplenishmentReportAIGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessWarehouseReplenishmentReportAIGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessWarehouseReplenishmentReportAIGroupByOutputType[P]>
        }
      >
    >


  export type BusinessWarehouseReplenishmentReportAISelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessWarehouseReplenishmentReportAI"]>

  export type BusinessWarehouseReplenishmentReportAISelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessWarehouseReplenishmentReportAI"]>

  export type BusinessWarehouseReplenishmentReportAISelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessWarehouseReplenishmentReportAI"]>

  export type BusinessWarehouseReplenishmentReportAISelectScalar = {
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessWarehouseReplenishmentReportAIOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["businessWarehouseReplenishmentReportAI"]>
  export type BusinessWarehouseReplenishmentReportAIInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessWarehouseReplenishmentReportAIIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type BusinessWarehouseReplenishmentReportAIIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $BusinessWarehouseReplenishmentReportAIPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessWarehouseReplenishmentReportAI"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessWarehouseReplenishmentReportAI"]>
    composites: {}
  }

  type BusinessWarehouseReplenishmentReportAIGetPayload<S extends boolean | null | undefined | BusinessWarehouseReplenishmentReportAIDefaultArgs> = $Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload, S>

  type BusinessWarehouseReplenishmentReportAICountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessWarehouseReplenishmentReportAIFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessWarehouseReplenishmentReportAICountAggregateInputType | true
    }

  export interface BusinessWarehouseReplenishmentReportAIDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessWarehouseReplenishmentReportAI'], meta: { name: 'BusinessWarehouseReplenishmentReportAI' } }
    /**
     * Find zero or one BusinessWarehouseReplenishmentReportAI that matches the filter.
     * @param {BusinessWarehouseReplenishmentReportAIFindUniqueArgs} args - Arguments to find a BusinessWarehouseReplenishmentReportAI
     * @example
     * // Get one BusinessWarehouseReplenishmentReportAI
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessWarehouseReplenishmentReportAIFindUniqueArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIFindUniqueArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessWarehouseReplenishmentReportAI that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessWarehouseReplenishmentReportAIFindUniqueOrThrowArgs} args - Arguments to find a BusinessWarehouseReplenishmentReportAI
     * @example
     * // Get one BusinessWarehouseReplenishmentReportAI
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessWarehouseReplenishmentReportAIFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessWarehouseReplenishmentReportAI that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAIFindFirstArgs} args - Arguments to find a BusinessWarehouseReplenishmentReportAI
     * @example
     * // Get one BusinessWarehouseReplenishmentReportAI
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessWarehouseReplenishmentReportAIFindFirstArgs>(args?: SelectSubset<T, BusinessWarehouseReplenishmentReportAIFindFirstArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessWarehouseReplenishmentReportAI that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAIFindFirstOrThrowArgs} args - Arguments to find a BusinessWarehouseReplenishmentReportAI
     * @example
     * // Get one BusinessWarehouseReplenishmentReportAI
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessWarehouseReplenishmentReportAIFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessWarehouseReplenishmentReportAIFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessWarehouseReplenishmentReportAIS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAIFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessWarehouseReplenishmentReportAIS
     * const businessWarehouseReplenishmentReportAIS = await prisma.businessWarehouseReplenishmentReportAI.findMany()
     * 
     * // Get first 10 BusinessWarehouseReplenishmentReportAIS
     * const businessWarehouseReplenishmentReportAIS = await prisma.businessWarehouseReplenishmentReportAI.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessWarehouseReplenishmentReportAIWithIdOnly = await prisma.businessWarehouseReplenishmentReportAI.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessWarehouseReplenishmentReportAIFindManyArgs>(args?: SelectSubset<T, BusinessWarehouseReplenishmentReportAIFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessWarehouseReplenishmentReportAI.
     * @param {BusinessWarehouseReplenishmentReportAICreateArgs} args - Arguments to create a BusinessWarehouseReplenishmentReportAI.
     * @example
     * // Create one BusinessWarehouseReplenishmentReportAI
     * const BusinessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.create({
     *   data: {
     *     // ... data to create a BusinessWarehouseReplenishmentReportAI
     *   }
     * })
     * 
     */
    create<T extends BusinessWarehouseReplenishmentReportAICreateArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAICreateArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessWarehouseReplenishmentReportAIS.
     * @param {BusinessWarehouseReplenishmentReportAICreateManyArgs} args - Arguments to create many BusinessWarehouseReplenishmentReportAIS.
     * @example
     * // Create many BusinessWarehouseReplenishmentReportAIS
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessWarehouseReplenishmentReportAICreateManyArgs>(args?: SelectSubset<T, BusinessWarehouseReplenishmentReportAICreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessWarehouseReplenishmentReportAIS and returns the data saved in the database.
     * @param {BusinessWarehouseReplenishmentReportAICreateManyAndReturnArgs} args - Arguments to create many BusinessWarehouseReplenishmentReportAIS.
     * @example
     * // Create many BusinessWarehouseReplenishmentReportAIS
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessWarehouseReplenishmentReportAIS and only return the `id`
     * const businessWarehouseReplenishmentReportAIWithIdOnly = await prisma.businessWarehouseReplenishmentReportAI.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessWarehouseReplenishmentReportAICreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessWarehouseReplenishmentReportAICreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessWarehouseReplenishmentReportAI.
     * @param {BusinessWarehouseReplenishmentReportAIDeleteArgs} args - Arguments to delete one BusinessWarehouseReplenishmentReportAI.
     * @example
     * // Delete one BusinessWarehouseReplenishmentReportAI
     * const BusinessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.delete({
     *   where: {
     *     // ... filter to delete one BusinessWarehouseReplenishmentReportAI
     *   }
     * })
     * 
     */
    delete<T extends BusinessWarehouseReplenishmentReportAIDeleteArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIDeleteArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessWarehouseReplenishmentReportAI.
     * @param {BusinessWarehouseReplenishmentReportAIUpdateArgs} args - Arguments to update one BusinessWarehouseReplenishmentReportAI.
     * @example
     * // Update one BusinessWarehouseReplenishmentReportAI
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessWarehouseReplenishmentReportAIUpdateArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIUpdateArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessWarehouseReplenishmentReportAIS.
     * @param {BusinessWarehouseReplenishmentReportAIDeleteManyArgs} args - Arguments to filter BusinessWarehouseReplenishmentReportAIS to delete.
     * @example
     * // Delete a few BusinessWarehouseReplenishmentReportAIS
     * const { count } = await prisma.businessWarehouseReplenishmentReportAI.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessWarehouseReplenishmentReportAIDeleteManyArgs>(args?: SelectSubset<T, BusinessWarehouseReplenishmentReportAIDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessWarehouseReplenishmentReportAIS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAIUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessWarehouseReplenishmentReportAIS
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessWarehouseReplenishmentReportAIUpdateManyArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessWarehouseReplenishmentReportAIS and returns the data updated in the database.
     * @param {BusinessWarehouseReplenishmentReportAIUpdateManyAndReturnArgs} args - Arguments to update many BusinessWarehouseReplenishmentReportAIS.
     * @example
     * // Update many BusinessWarehouseReplenishmentReportAIS
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessWarehouseReplenishmentReportAIS and only return the `id`
     * const businessWarehouseReplenishmentReportAIWithIdOnly = await prisma.businessWarehouseReplenishmentReportAI.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessWarehouseReplenishmentReportAIUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessWarehouseReplenishmentReportAI.
     * @param {BusinessWarehouseReplenishmentReportAIUpsertArgs} args - Arguments to update or create a BusinessWarehouseReplenishmentReportAI.
     * @example
     * // Update or create a BusinessWarehouseReplenishmentReportAI
     * const businessWarehouseReplenishmentReportAI = await prisma.businessWarehouseReplenishmentReportAI.upsert({
     *   create: {
     *     // ... data to create a BusinessWarehouseReplenishmentReportAI
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessWarehouseReplenishmentReportAI we want to update
     *   }
     * })
     */
    upsert<T extends BusinessWarehouseReplenishmentReportAIUpsertArgs>(args: SelectSubset<T, BusinessWarehouseReplenishmentReportAIUpsertArgs<ExtArgs>>): Prisma__BusinessWarehouseReplenishmentReportAIClient<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessWarehouseReplenishmentReportAIS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAICountArgs} args - Arguments to filter BusinessWarehouseReplenishmentReportAIS to count.
     * @example
     * // Count the number of BusinessWarehouseReplenishmentReportAIS
     * const count = await prisma.businessWarehouseReplenishmentReportAI.count({
     *   where: {
     *     // ... the filter for the BusinessWarehouseReplenishmentReportAIS we want to count
     *   }
     * })
    **/
    count<T extends BusinessWarehouseReplenishmentReportAICountArgs>(
      args?: Subset<T, BusinessWarehouseReplenishmentReportAICountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessWarehouseReplenishmentReportAICountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessWarehouseReplenishmentReportAI.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAIAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessWarehouseReplenishmentReportAIAggregateArgs>(args: Subset<T, BusinessWarehouseReplenishmentReportAIAggregateArgs>): Prisma.PrismaPromise<GetBusinessWarehouseReplenishmentReportAIAggregateType<T>>

    /**
     * Group by BusinessWarehouseReplenishmentReportAI.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessWarehouseReplenishmentReportAIGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessWarehouseReplenishmentReportAIGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessWarehouseReplenishmentReportAIGroupByArgs['orderBy'] }
        : { orderBy?: BusinessWarehouseReplenishmentReportAIGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessWarehouseReplenishmentReportAIGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessWarehouseReplenishmentReportAIGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessWarehouseReplenishmentReportAI model
   */
  readonly fields: BusinessWarehouseReplenishmentReportAIFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessWarehouseReplenishmentReportAI.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessWarehouseReplenishmentReportAIClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessWarehouseReplenishmentReportAI model
   */
  interface BusinessWarehouseReplenishmentReportAIFieldRefs {
    readonly id: FieldRef<"BusinessWarehouseReplenishmentReportAI", 'String'>
    readonly url: FieldRef<"BusinessWarehouseReplenishmentReportAI", 'String'>
    readonly businessId: FieldRef<"BusinessWarehouseReplenishmentReportAI", 'String'>
    readonly createdAt: FieldRef<"BusinessWarehouseReplenishmentReportAI", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessWarehouseReplenishmentReportAI", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessWarehouseReplenishmentReportAI findUnique
   */
  export type BusinessWarehouseReplenishmentReportAIFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessWarehouseReplenishmentReportAI to fetch.
     */
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
  }

  /**
   * BusinessWarehouseReplenishmentReportAI findUniqueOrThrow
   */
  export type BusinessWarehouseReplenishmentReportAIFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessWarehouseReplenishmentReportAI to fetch.
     */
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
  }

  /**
   * BusinessWarehouseReplenishmentReportAI findFirst
   */
  export type BusinessWarehouseReplenishmentReportAIFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessWarehouseReplenishmentReportAI to fetch.
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessWarehouseReplenishmentReportAIS to fetch.
     */
    orderBy?: BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput | BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessWarehouseReplenishmentReportAIS.
     */
    cursor?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessWarehouseReplenishmentReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessWarehouseReplenishmentReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessWarehouseReplenishmentReportAIS.
     */
    distinct?: BusinessWarehouseReplenishmentReportAIScalarFieldEnum | BusinessWarehouseReplenishmentReportAIScalarFieldEnum[]
  }

  /**
   * BusinessWarehouseReplenishmentReportAI findFirstOrThrow
   */
  export type BusinessWarehouseReplenishmentReportAIFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessWarehouseReplenishmentReportAI to fetch.
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessWarehouseReplenishmentReportAIS to fetch.
     */
    orderBy?: BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput | BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessWarehouseReplenishmentReportAIS.
     */
    cursor?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessWarehouseReplenishmentReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessWarehouseReplenishmentReportAIS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessWarehouseReplenishmentReportAIS.
     */
    distinct?: BusinessWarehouseReplenishmentReportAIScalarFieldEnum | BusinessWarehouseReplenishmentReportAIScalarFieldEnum[]
  }

  /**
   * BusinessWarehouseReplenishmentReportAI findMany
   */
  export type BusinessWarehouseReplenishmentReportAIFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * Filter, which BusinessWarehouseReplenishmentReportAIS to fetch.
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessWarehouseReplenishmentReportAIS to fetch.
     */
    orderBy?: BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput | BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessWarehouseReplenishmentReportAIS.
     */
    cursor?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessWarehouseReplenishmentReportAIS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessWarehouseReplenishmentReportAIS.
     */
    skip?: number
    distinct?: BusinessWarehouseReplenishmentReportAIScalarFieldEnum | BusinessWarehouseReplenishmentReportAIScalarFieldEnum[]
  }

  /**
   * BusinessWarehouseReplenishmentReportAI create
   */
  export type BusinessWarehouseReplenishmentReportAICreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessWarehouseReplenishmentReportAI.
     */
    data: XOR<BusinessWarehouseReplenishmentReportAICreateInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateInput>
  }

  /**
   * BusinessWarehouseReplenishmentReportAI createMany
   */
  export type BusinessWarehouseReplenishmentReportAICreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessWarehouseReplenishmentReportAIS.
     */
    data: BusinessWarehouseReplenishmentReportAICreateManyInput | BusinessWarehouseReplenishmentReportAICreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessWarehouseReplenishmentReportAI createManyAndReturn
   */
  export type BusinessWarehouseReplenishmentReportAICreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessWarehouseReplenishmentReportAIS.
     */
    data: BusinessWarehouseReplenishmentReportAICreateManyInput | BusinessWarehouseReplenishmentReportAICreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessWarehouseReplenishmentReportAI update
   */
  export type BusinessWarehouseReplenishmentReportAIUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessWarehouseReplenishmentReportAI.
     */
    data: XOR<BusinessWarehouseReplenishmentReportAIUpdateInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateInput>
    /**
     * Choose, which BusinessWarehouseReplenishmentReportAI to update.
     */
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
  }

  /**
   * BusinessWarehouseReplenishmentReportAI updateMany
   */
  export type BusinessWarehouseReplenishmentReportAIUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessWarehouseReplenishmentReportAIS.
     */
    data: XOR<BusinessWarehouseReplenishmentReportAIUpdateManyMutationInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyInput>
    /**
     * Filter which BusinessWarehouseReplenishmentReportAIS to update
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * Limit how many BusinessWarehouseReplenishmentReportAIS to update.
     */
    limit?: number
  }

  /**
   * BusinessWarehouseReplenishmentReportAI updateManyAndReturn
   */
  export type BusinessWarehouseReplenishmentReportAIUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * The data used to update BusinessWarehouseReplenishmentReportAIS.
     */
    data: XOR<BusinessWarehouseReplenishmentReportAIUpdateManyMutationInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyInput>
    /**
     * Filter which BusinessWarehouseReplenishmentReportAIS to update
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * Limit how many BusinessWarehouseReplenishmentReportAIS to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessWarehouseReplenishmentReportAI upsert
   */
  export type BusinessWarehouseReplenishmentReportAIUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessWarehouseReplenishmentReportAI to update in case it exists.
     */
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    /**
     * In case the BusinessWarehouseReplenishmentReportAI found by the `where` argument doesn't exist, create a new BusinessWarehouseReplenishmentReportAI with this data.
     */
    create: XOR<BusinessWarehouseReplenishmentReportAICreateInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateInput>
    /**
     * In case the BusinessWarehouseReplenishmentReportAI was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessWarehouseReplenishmentReportAIUpdateInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateInput>
  }

  /**
   * BusinessWarehouseReplenishmentReportAI delete
   */
  export type BusinessWarehouseReplenishmentReportAIDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    /**
     * Filter which BusinessWarehouseReplenishmentReportAI to delete.
     */
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
  }

  /**
   * BusinessWarehouseReplenishmentReportAI deleteMany
   */
  export type BusinessWarehouseReplenishmentReportAIDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessWarehouseReplenishmentReportAIS to delete
     */
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    /**
     * Limit how many BusinessWarehouseReplenishmentReportAIS to delete.
     */
    limit?: number
  }

  /**
   * BusinessWarehouseReplenishmentReportAI without action
   */
  export type BusinessWarehouseReplenishmentReportAIDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
  }


  /**
   * Model business_commercial_relationship_documents_attached
   */

  export type AggregateBusiness_commercial_relationship_documents_attached = {
    _count: Business_commercial_relationship_documents_attachedCountAggregateOutputType | null
    _min: Business_commercial_relationship_documents_attachedMinAggregateOutputType | null
    _max: Business_commercial_relationship_documents_attachedMaxAggregateOutputType | null
  }

  export type Business_commercial_relationship_documents_attachedMinAggregateOutputType = {
    id: string | null
    url: string | null
    commercialRelationshipId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_commercial_relationship_documents_attachedMaxAggregateOutputType = {
    id: string | null
    url: string | null
    commercialRelationshipId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_commercial_relationship_documents_attachedCountAggregateOutputType = {
    id: number
    url: number
    commercialRelationshipId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_commercial_relationship_documents_attachedMinAggregateInputType = {
    id?: true
    url?: true
    commercialRelationshipId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_commercial_relationship_documents_attachedMaxAggregateInputType = {
    id?: true
    url?: true
    commercialRelationshipId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_commercial_relationship_documents_attachedCountAggregateInputType = {
    id?: true
    url?: true
    commercialRelationshipId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_commercial_relationship_documents_attachedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_commercial_relationship_documents_attached to aggregate.
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationship_documents_attacheds to fetch.
     */
    orderBy?: business_commercial_relationship_documents_attachedOrderByWithRelationInput | business_commercial_relationship_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_commercial_relationship_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationship_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationship_documents_attacheds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_commercial_relationship_documents_attacheds
    **/
    _count?: true | Business_commercial_relationship_documents_attachedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_commercial_relationship_documents_attachedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_commercial_relationship_documents_attachedMaxAggregateInputType
  }

  export type GetBusiness_commercial_relationship_documents_attachedAggregateType<T extends Business_commercial_relationship_documents_attachedAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_commercial_relationship_documents_attached]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_commercial_relationship_documents_attached[P]>
      : GetScalarType<T[P], AggregateBusiness_commercial_relationship_documents_attached[P]>
  }




  export type business_commercial_relationship_documents_attachedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_commercial_relationship_documents_attachedWhereInput
    orderBy?: business_commercial_relationship_documents_attachedOrderByWithAggregationInput | business_commercial_relationship_documents_attachedOrderByWithAggregationInput[]
    by: Business_commercial_relationship_documents_attachedScalarFieldEnum[] | Business_commercial_relationship_documents_attachedScalarFieldEnum
    having?: business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_commercial_relationship_documents_attachedCountAggregateInputType | true
    _min?: Business_commercial_relationship_documents_attachedMinAggregateInputType
    _max?: Business_commercial_relationship_documents_attachedMaxAggregateInputType
  }

  export type Business_commercial_relationship_documents_attachedGroupByOutputType = {
    id: string
    url: string
    commercialRelationshipId: string
    createdAt: Date
    updatedAt: Date
    _count: Business_commercial_relationship_documents_attachedCountAggregateOutputType | null
    _min: Business_commercial_relationship_documents_attachedMinAggregateOutputType | null
    _max: Business_commercial_relationship_documents_attachedMaxAggregateOutputType | null
  }

  type GetBusiness_commercial_relationship_documents_attachedGroupByPayload<T extends business_commercial_relationship_documents_attachedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_commercial_relationship_documents_attachedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_commercial_relationship_documents_attachedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_commercial_relationship_documents_attachedGroupByOutputType[P]>
            : GetScalarType<T[P], Business_commercial_relationship_documents_attachedGroupByOutputType[P]>
        }
      >
    >


  export type business_commercial_relationship_documents_attachedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    commercialRelationshipId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_commercial_relationships?: boolean | business_commercial_relationshipsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_commercial_relationship_documents_attached"]>

  export type business_commercial_relationship_documents_attachedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    commercialRelationshipId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_commercial_relationships?: boolean | business_commercial_relationshipsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_commercial_relationship_documents_attached"]>

  export type business_commercial_relationship_documents_attachedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    commercialRelationshipId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_commercial_relationships?: boolean | business_commercial_relationshipsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_commercial_relationship_documents_attached"]>

  export type business_commercial_relationship_documents_attachedSelectScalar = {
    id?: boolean
    url?: boolean
    commercialRelationshipId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_commercial_relationship_documents_attachedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "commercialRelationshipId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_commercial_relationship_documents_attached"]>
  export type business_commercial_relationship_documents_attachedInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_commercial_relationships?: boolean | business_commercial_relationshipsDefaultArgs<ExtArgs>
  }
  export type business_commercial_relationship_documents_attachedIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_commercial_relationships?: boolean | business_commercial_relationshipsDefaultArgs<ExtArgs>
  }
  export type business_commercial_relationship_documents_attachedIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_commercial_relationships?: boolean | business_commercial_relationshipsDefaultArgs<ExtArgs>
  }

  export type $business_commercial_relationship_documents_attachedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_commercial_relationship_documents_attached"
    objects: {
      business_commercial_relationships: Prisma.$business_commercial_relationshipsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      commercialRelationshipId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_commercial_relationship_documents_attached"]>
    composites: {}
  }

  type business_commercial_relationship_documents_attachedGetPayload<S extends boolean | null | undefined | business_commercial_relationship_documents_attachedDefaultArgs> = $Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload, S>

  type business_commercial_relationship_documents_attachedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_commercial_relationship_documents_attachedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_commercial_relationship_documents_attachedCountAggregateInputType | true
    }

  export interface business_commercial_relationship_documents_attachedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_commercial_relationship_documents_attached'], meta: { name: 'business_commercial_relationship_documents_attached' } }
    /**
     * Find zero or one Business_commercial_relationship_documents_attached that matches the filter.
     * @param {business_commercial_relationship_documents_attachedFindUniqueArgs} args - Arguments to find a Business_commercial_relationship_documents_attached
     * @example
     * // Get one Business_commercial_relationship_documents_attached
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_commercial_relationship_documents_attachedFindUniqueArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedFindUniqueArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_commercial_relationship_documents_attached that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_commercial_relationship_documents_attachedFindUniqueOrThrowArgs} args - Arguments to find a Business_commercial_relationship_documents_attached
     * @example
     * // Get one Business_commercial_relationship_documents_attached
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_commercial_relationship_documents_attachedFindUniqueOrThrowArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_commercial_relationship_documents_attached that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationship_documents_attachedFindFirstArgs} args - Arguments to find a Business_commercial_relationship_documents_attached
     * @example
     * // Get one Business_commercial_relationship_documents_attached
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_commercial_relationship_documents_attachedFindFirstArgs>(args?: SelectSubset<T, business_commercial_relationship_documents_attachedFindFirstArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_commercial_relationship_documents_attached that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationship_documents_attachedFindFirstOrThrowArgs} args - Arguments to find a Business_commercial_relationship_documents_attached
     * @example
     * // Get one Business_commercial_relationship_documents_attached
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_commercial_relationship_documents_attachedFindFirstOrThrowArgs>(args?: SelectSubset<T, business_commercial_relationship_documents_attachedFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_commercial_relationship_documents_attacheds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationship_documents_attachedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_commercial_relationship_documents_attacheds
     * const business_commercial_relationship_documents_attacheds = await prisma.business_commercial_relationship_documents_attached.findMany()
     * 
     * // Get first 10 Business_commercial_relationship_documents_attacheds
     * const business_commercial_relationship_documents_attacheds = await prisma.business_commercial_relationship_documents_attached.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_commercial_relationship_documents_attachedWithIdOnly = await prisma.business_commercial_relationship_documents_attached.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_commercial_relationship_documents_attachedFindManyArgs>(args?: SelectSubset<T, business_commercial_relationship_documents_attachedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_commercial_relationship_documents_attached.
     * @param {business_commercial_relationship_documents_attachedCreateArgs} args - Arguments to create a Business_commercial_relationship_documents_attached.
     * @example
     * // Create one Business_commercial_relationship_documents_attached
     * const Business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.create({
     *   data: {
     *     // ... data to create a Business_commercial_relationship_documents_attached
     *   }
     * })
     * 
     */
    create<T extends business_commercial_relationship_documents_attachedCreateArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedCreateArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_commercial_relationship_documents_attacheds.
     * @param {business_commercial_relationship_documents_attachedCreateManyArgs} args - Arguments to create many Business_commercial_relationship_documents_attacheds.
     * @example
     * // Create many Business_commercial_relationship_documents_attacheds
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_commercial_relationship_documents_attachedCreateManyArgs>(args?: SelectSubset<T, business_commercial_relationship_documents_attachedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_commercial_relationship_documents_attacheds and returns the data saved in the database.
     * @param {business_commercial_relationship_documents_attachedCreateManyAndReturnArgs} args - Arguments to create many Business_commercial_relationship_documents_attacheds.
     * @example
     * // Create many Business_commercial_relationship_documents_attacheds
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_commercial_relationship_documents_attacheds and only return the `id`
     * const business_commercial_relationship_documents_attachedWithIdOnly = await prisma.business_commercial_relationship_documents_attached.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_commercial_relationship_documents_attachedCreateManyAndReturnArgs>(args?: SelectSubset<T, business_commercial_relationship_documents_attachedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_commercial_relationship_documents_attached.
     * @param {business_commercial_relationship_documents_attachedDeleteArgs} args - Arguments to delete one Business_commercial_relationship_documents_attached.
     * @example
     * // Delete one Business_commercial_relationship_documents_attached
     * const Business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.delete({
     *   where: {
     *     // ... filter to delete one Business_commercial_relationship_documents_attached
     *   }
     * })
     * 
     */
    delete<T extends business_commercial_relationship_documents_attachedDeleteArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedDeleteArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_commercial_relationship_documents_attached.
     * @param {business_commercial_relationship_documents_attachedUpdateArgs} args - Arguments to update one Business_commercial_relationship_documents_attached.
     * @example
     * // Update one Business_commercial_relationship_documents_attached
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_commercial_relationship_documents_attachedUpdateArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedUpdateArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_commercial_relationship_documents_attacheds.
     * @param {business_commercial_relationship_documents_attachedDeleteManyArgs} args - Arguments to filter Business_commercial_relationship_documents_attacheds to delete.
     * @example
     * // Delete a few Business_commercial_relationship_documents_attacheds
     * const { count } = await prisma.business_commercial_relationship_documents_attached.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_commercial_relationship_documents_attachedDeleteManyArgs>(args?: SelectSubset<T, business_commercial_relationship_documents_attachedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_commercial_relationship_documents_attacheds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationship_documents_attachedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_commercial_relationship_documents_attacheds
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_commercial_relationship_documents_attachedUpdateManyArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_commercial_relationship_documents_attacheds and returns the data updated in the database.
     * @param {business_commercial_relationship_documents_attachedUpdateManyAndReturnArgs} args - Arguments to update many Business_commercial_relationship_documents_attacheds.
     * @example
     * // Update many Business_commercial_relationship_documents_attacheds
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_commercial_relationship_documents_attacheds and only return the `id`
     * const business_commercial_relationship_documents_attachedWithIdOnly = await prisma.business_commercial_relationship_documents_attached.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_commercial_relationship_documents_attachedUpdateManyAndReturnArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_commercial_relationship_documents_attached.
     * @param {business_commercial_relationship_documents_attachedUpsertArgs} args - Arguments to update or create a Business_commercial_relationship_documents_attached.
     * @example
     * // Update or create a Business_commercial_relationship_documents_attached
     * const business_commercial_relationship_documents_attached = await prisma.business_commercial_relationship_documents_attached.upsert({
     *   create: {
     *     // ... data to create a Business_commercial_relationship_documents_attached
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_commercial_relationship_documents_attached we want to update
     *   }
     * })
     */
    upsert<T extends business_commercial_relationship_documents_attachedUpsertArgs>(args: SelectSubset<T, business_commercial_relationship_documents_attachedUpsertArgs<ExtArgs>>): Prisma__business_commercial_relationship_documents_attachedClient<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_commercial_relationship_documents_attacheds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationship_documents_attachedCountArgs} args - Arguments to filter Business_commercial_relationship_documents_attacheds to count.
     * @example
     * // Count the number of Business_commercial_relationship_documents_attacheds
     * const count = await prisma.business_commercial_relationship_documents_attached.count({
     *   where: {
     *     // ... the filter for the Business_commercial_relationship_documents_attacheds we want to count
     *   }
     * })
    **/
    count<T extends business_commercial_relationship_documents_attachedCountArgs>(
      args?: Subset<T, business_commercial_relationship_documents_attachedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_commercial_relationship_documents_attachedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_commercial_relationship_documents_attached.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_commercial_relationship_documents_attachedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_commercial_relationship_documents_attachedAggregateArgs>(args: Subset<T, Business_commercial_relationship_documents_attachedAggregateArgs>): Prisma.PrismaPromise<GetBusiness_commercial_relationship_documents_attachedAggregateType<T>>

    /**
     * Group by Business_commercial_relationship_documents_attached.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationship_documents_attachedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_commercial_relationship_documents_attachedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_commercial_relationship_documents_attachedGroupByArgs['orderBy'] }
        : { orderBy?: business_commercial_relationship_documents_attachedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_commercial_relationship_documents_attachedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_commercial_relationship_documents_attachedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_commercial_relationship_documents_attached model
   */
  readonly fields: business_commercial_relationship_documents_attachedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_commercial_relationship_documents_attached.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_commercial_relationship_documents_attachedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    business_commercial_relationships<T extends business_commercial_relationshipsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, business_commercial_relationshipsDefaultArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_commercial_relationship_documents_attached model
   */
  interface business_commercial_relationship_documents_attachedFieldRefs {
    readonly id: FieldRef<"business_commercial_relationship_documents_attached", 'String'>
    readonly url: FieldRef<"business_commercial_relationship_documents_attached", 'String'>
    readonly commercialRelationshipId: FieldRef<"business_commercial_relationship_documents_attached", 'String'>
    readonly createdAt: FieldRef<"business_commercial_relationship_documents_attached", 'DateTime'>
    readonly updatedAt: FieldRef<"business_commercial_relationship_documents_attached", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_commercial_relationship_documents_attached findUnique
   */
  export type business_commercial_relationship_documents_attachedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationship_documents_attached to fetch.
     */
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
  }

  /**
   * business_commercial_relationship_documents_attached findUniqueOrThrow
   */
  export type business_commercial_relationship_documents_attachedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationship_documents_attached to fetch.
     */
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
  }

  /**
   * business_commercial_relationship_documents_attached findFirst
   */
  export type business_commercial_relationship_documents_attachedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationship_documents_attached to fetch.
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationship_documents_attacheds to fetch.
     */
    orderBy?: business_commercial_relationship_documents_attachedOrderByWithRelationInput | business_commercial_relationship_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_commercial_relationship_documents_attacheds.
     */
    cursor?: business_commercial_relationship_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationship_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationship_documents_attacheds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_commercial_relationship_documents_attacheds.
     */
    distinct?: Business_commercial_relationship_documents_attachedScalarFieldEnum | Business_commercial_relationship_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_commercial_relationship_documents_attached findFirstOrThrow
   */
  export type business_commercial_relationship_documents_attachedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationship_documents_attached to fetch.
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationship_documents_attacheds to fetch.
     */
    orderBy?: business_commercial_relationship_documents_attachedOrderByWithRelationInput | business_commercial_relationship_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_commercial_relationship_documents_attacheds.
     */
    cursor?: business_commercial_relationship_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationship_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationship_documents_attacheds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_commercial_relationship_documents_attacheds.
     */
    distinct?: Business_commercial_relationship_documents_attachedScalarFieldEnum | Business_commercial_relationship_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_commercial_relationship_documents_attached findMany
   */
  export type business_commercial_relationship_documents_attachedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationship_documents_attacheds to fetch.
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationship_documents_attacheds to fetch.
     */
    orderBy?: business_commercial_relationship_documents_attachedOrderByWithRelationInput | business_commercial_relationship_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_commercial_relationship_documents_attacheds.
     */
    cursor?: business_commercial_relationship_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationship_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationship_documents_attacheds.
     */
    skip?: number
    distinct?: Business_commercial_relationship_documents_attachedScalarFieldEnum | Business_commercial_relationship_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_commercial_relationship_documents_attached create
   */
  export type business_commercial_relationship_documents_attachedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * The data needed to create a business_commercial_relationship_documents_attached.
     */
    data: XOR<business_commercial_relationship_documents_attachedCreateInput, business_commercial_relationship_documents_attachedUncheckedCreateInput>
  }

  /**
   * business_commercial_relationship_documents_attached createMany
   */
  export type business_commercial_relationship_documents_attachedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_commercial_relationship_documents_attacheds.
     */
    data: business_commercial_relationship_documents_attachedCreateManyInput | business_commercial_relationship_documents_attachedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_commercial_relationship_documents_attached createManyAndReturn
   */
  export type business_commercial_relationship_documents_attachedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * The data used to create many business_commercial_relationship_documents_attacheds.
     */
    data: business_commercial_relationship_documents_attachedCreateManyInput | business_commercial_relationship_documents_attachedCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_commercial_relationship_documents_attached update
   */
  export type business_commercial_relationship_documents_attachedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * The data needed to update a business_commercial_relationship_documents_attached.
     */
    data: XOR<business_commercial_relationship_documents_attachedUpdateInput, business_commercial_relationship_documents_attachedUncheckedUpdateInput>
    /**
     * Choose, which business_commercial_relationship_documents_attached to update.
     */
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
  }

  /**
   * business_commercial_relationship_documents_attached updateMany
   */
  export type business_commercial_relationship_documents_attachedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_commercial_relationship_documents_attacheds.
     */
    data: XOR<business_commercial_relationship_documents_attachedUpdateManyMutationInput, business_commercial_relationship_documents_attachedUncheckedUpdateManyInput>
    /**
     * Filter which business_commercial_relationship_documents_attacheds to update
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * Limit how many business_commercial_relationship_documents_attacheds to update.
     */
    limit?: number
  }

  /**
   * business_commercial_relationship_documents_attached updateManyAndReturn
   */
  export type business_commercial_relationship_documents_attachedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * The data used to update business_commercial_relationship_documents_attacheds.
     */
    data: XOR<business_commercial_relationship_documents_attachedUpdateManyMutationInput, business_commercial_relationship_documents_attachedUncheckedUpdateManyInput>
    /**
     * Filter which business_commercial_relationship_documents_attacheds to update
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * Limit how many business_commercial_relationship_documents_attacheds to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_commercial_relationship_documents_attached upsert
   */
  export type business_commercial_relationship_documents_attachedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * The filter to search for the business_commercial_relationship_documents_attached to update in case it exists.
     */
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
    /**
     * In case the business_commercial_relationship_documents_attached found by the `where` argument doesn't exist, create a new business_commercial_relationship_documents_attached with this data.
     */
    create: XOR<business_commercial_relationship_documents_attachedCreateInput, business_commercial_relationship_documents_attachedUncheckedCreateInput>
    /**
     * In case the business_commercial_relationship_documents_attached was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_commercial_relationship_documents_attachedUpdateInput, business_commercial_relationship_documents_attachedUncheckedUpdateInput>
  }

  /**
   * business_commercial_relationship_documents_attached delete
   */
  export type business_commercial_relationship_documents_attachedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter which business_commercial_relationship_documents_attached to delete.
     */
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
  }

  /**
   * business_commercial_relationship_documents_attached deleteMany
   */
  export type business_commercial_relationship_documents_attachedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_commercial_relationship_documents_attacheds to delete
     */
    where?: business_commercial_relationship_documents_attachedWhereInput
    /**
     * Limit how many business_commercial_relationship_documents_attacheds to delete.
     */
    limit?: number
  }

  /**
   * business_commercial_relationship_documents_attached without action
   */
  export type business_commercial_relationship_documents_attachedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
  }


  /**
   * Model business_commercial_relationships
   */

  export type AggregateBusiness_commercial_relationships = {
    _count: Business_commercial_relationshipsCountAggregateOutputType | null
    _min: Business_commercial_relationshipsMinAggregateOutputType | null
    _max: Business_commercial_relationshipsMaxAggregateOutputType | null
  }

  export type Business_commercial_relationshipsMinAggregateOutputType = {
    id: string | null
    type: string | null
    signedContract: boolean | null
    thirdPartyPaymentPermission: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_commercial_relationshipsMaxAggregateOutputType = {
    id: string | null
    type: string | null
    signedContract: boolean | null
    thirdPartyPaymentPermission: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_commercial_relationshipsCountAggregateOutputType = {
    id: number
    type: number
    signedContract: number
    thirdPartyPaymentPermission: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_commercial_relationshipsMinAggregateInputType = {
    id?: true
    type?: true
    signedContract?: true
    thirdPartyPaymentPermission?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_commercial_relationshipsMaxAggregateInputType = {
    id?: true
    type?: true
    signedContract?: true
    thirdPartyPaymentPermission?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_commercial_relationshipsCountAggregateInputType = {
    id?: true
    type?: true
    signedContract?: true
    thirdPartyPaymentPermission?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_commercial_relationshipsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_commercial_relationships to aggregate.
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationships to fetch.
     */
    orderBy?: business_commercial_relationshipsOrderByWithRelationInput | business_commercial_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_commercial_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_commercial_relationships
    **/
    _count?: true | Business_commercial_relationshipsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_commercial_relationshipsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_commercial_relationshipsMaxAggregateInputType
  }

  export type GetBusiness_commercial_relationshipsAggregateType<T extends Business_commercial_relationshipsAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_commercial_relationships]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_commercial_relationships[P]>
      : GetScalarType<T[P], AggregateBusiness_commercial_relationships[P]>
  }




  export type business_commercial_relationshipsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_commercial_relationshipsWhereInput
    orderBy?: business_commercial_relationshipsOrderByWithAggregationInput | business_commercial_relationshipsOrderByWithAggregationInput[]
    by: Business_commercial_relationshipsScalarFieldEnum[] | Business_commercial_relationshipsScalarFieldEnum
    having?: business_commercial_relationshipsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_commercial_relationshipsCountAggregateInputType | true
    _min?: Business_commercial_relationshipsMinAggregateInputType
    _max?: Business_commercial_relationshipsMaxAggregateInputType
  }

  export type Business_commercial_relationshipsGroupByOutputType = {
    id: string
    type: string
    signedContract: boolean | null
    thirdPartyPaymentPermission: boolean | null
    createdAt: Date
    updatedAt: Date
    _count: Business_commercial_relationshipsCountAggregateOutputType | null
    _min: Business_commercial_relationshipsMinAggregateOutputType | null
    _max: Business_commercial_relationshipsMaxAggregateOutputType | null
  }

  type GetBusiness_commercial_relationshipsGroupByPayload<T extends business_commercial_relationshipsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_commercial_relationshipsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_commercial_relationshipsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_commercial_relationshipsGroupByOutputType[P]>
            : GetScalarType<T[P], Business_commercial_relationshipsGroupByOutputType[P]>
        }
      >
    >


  export type business_commercial_relationshipsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    signedContract?: boolean
    thirdPartyPaymentPermission?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_commercial_relationship_documents_attached?: boolean | business_commercial_relationships$business_commercial_relationship_documents_attachedArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    _count?: boolean | Business_commercial_relationshipsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_commercial_relationships"]>

  export type business_commercial_relationshipsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    signedContract?: boolean
    thirdPartyPaymentPermission?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_commercial_relationships"]>

  export type business_commercial_relationshipsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    signedContract?: boolean
    thirdPartyPaymentPermission?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_commercial_relationships"]>

  export type business_commercial_relationshipsSelectScalar = {
    id?: boolean
    type?: boolean
    signedContract?: boolean
    thirdPartyPaymentPermission?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_commercial_relationshipsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "signedContract" | "thirdPartyPaymentPermission" | "createdAt" | "updatedAt", ExtArgs["result"]["business_commercial_relationships"]>
  export type business_commercial_relationshipsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_commercial_relationship_documents_attached?: boolean | business_commercial_relationships$business_commercial_relationship_documents_attachedArgs<ExtArgs>
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    _count?: boolean | Business_commercial_relationshipsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type business_commercial_relationshipsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_commercial_relationshipsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_commercial_relationshipsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_commercial_relationships"
    objects: {
      business_commercial_relationship_documents_attached: Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>[]
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: string
      signedContract: boolean | null
      thirdPartyPaymentPermission: boolean | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_commercial_relationships"]>
    composites: {}
  }

  type business_commercial_relationshipsGetPayload<S extends boolean | null | undefined | business_commercial_relationshipsDefaultArgs> = $Result.GetResult<Prisma.$business_commercial_relationshipsPayload, S>

  type business_commercial_relationshipsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_commercial_relationshipsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_commercial_relationshipsCountAggregateInputType | true
    }

  export interface business_commercial_relationshipsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_commercial_relationships'], meta: { name: 'business_commercial_relationships' } }
    /**
     * Find zero or one Business_commercial_relationships that matches the filter.
     * @param {business_commercial_relationshipsFindUniqueArgs} args - Arguments to find a Business_commercial_relationships
     * @example
     * // Get one Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_commercial_relationshipsFindUniqueArgs>(args: SelectSubset<T, business_commercial_relationshipsFindUniqueArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_commercial_relationships that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_commercial_relationshipsFindUniqueOrThrowArgs} args - Arguments to find a Business_commercial_relationships
     * @example
     * // Get one Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_commercial_relationshipsFindUniqueOrThrowArgs>(args: SelectSubset<T, business_commercial_relationshipsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_commercial_relationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationshipsFindFirstArgs} args - Arguments to find a Business_commercial_relationships
     * @example
     * // Get one Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_commercial_relationshipsFindFirstArgs>(args?: SelectSubset<T, business_commercial_relationshipsFindFirstArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_commercial_relationships that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationshipsFindFirstOrThrowArgs} args - Arguments to find a Business_commercial_relationships
     * @example
     * // Get one Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_commercial_relationshipsFindFirstOrThrowArgs>(args?: SelectSubset<T, business_commercial_relationshipsFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_commercial_relationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationshipsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.findMany()
     * 
     * // Get first 10 Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_commercial_relationshipsWithIdOnly = await prisma.business_commercial_relationships.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_commercial_relationshipsFindManyArgs>(args?: SelectSubset<T, business_commercial_relationshipsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_commercial_relationships.
     * @param {business_commercial_relationshipsCreateArgs} args - Arguments to create a Business_commercial_relationships.
     * @example
     * // Create one Business_commercial_relationships
     * const Business_commercial_relationships = await prisma.business_commercial_relationships.create({
     *   data: {
     *     // ... data to create a Business_commercial_relationships
     *   }
     * })
     * 
     */
    create<T extends business_commercial_relationshipsCreateArgs>(args: SelectSubset<T, business_commercial_relationshipsCreateArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_commercial_relationships.
     * @param {business_commercial_relationshipsCreateManyArgs} args - Arguments to create many Business_commercial_relationships.
     * @example
     * // Create many Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_commercial_relationshipsCreateManyArgs>(args?: SelectSubset<T, business_commercial_relationshipsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_commercial_relationships and returns the data saved in the database.
     * @param {business_commercial_relationshipsCreateManyAndReturnArgs} args - Arguments to create many Business_commercial_relationships.
     * @example
     * // Create many Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_commercial_relationships and only return the `id`
     * const business_commercial_relationshipsWithIdOnly = await prisma.business_commercial_relationships.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_commercial_relationshipsCreateManyAndReturnArgs>(args?: SelectSubset<T, business_commercial_relationshipsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_commercial_relationships.
     * @param {business_commercial_relationshipsDeleteArgs} args - Arguments to delete one Business_commercial_relationships.
     * @example
     * // Delete one Business_commercial_relationships
     * const Business_commercial_relationships = await prisma.business_commercial_relationships.delete({
     *   where: {
     *     // ... filter to delete one Business_commercial_relationships
     *   }
     * })
     * 
     */
    delete<T extends business_commercial_relationshipsDeleteArgs>(args: SelectSubset<T, business_commercial_relationshipsDeleteArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_commercial_relationships.
     * @param {business_commercial_relationshipsUpdateArgs} args - Arguments to update one Business_commercial_relationships.
     * @example
     * // Update one Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_commercial_relationshipsUpdateArgs>(args: SelectSubset<T, business_commercial_relationshipsUpdateArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_commercial_relationships.
     * @param {business_commercial_relationshipsDeleteManyArgs} args - Arguments to filter Business_commercial_relationships to delete.
     * @example
     * // Delete a few Business_commercial_relationships
     * const { count } = await prisma.business_commercial_relationships.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_commercial_relationshipsDeleteManyArgs>(args?: SelectSubset<T, business_commercial_relationshipsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_commercial_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationshipsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_commercial_relationshipsUpdateManyArgs>(args: SelectSubset<T, business_commercial_relationshipsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_commercial_relationships and returns the data updated in the database.
     * @param {business_commercial_relationshipsUpdateManyAndReturnArgs} args - Arguments to update many Business_commercial_relationships.
     * @example
     * // Update many Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_commercial_relationships and only return the `id`
     * const business_commercial_relationshipsWithIdOnly = await prisma.business_commercial_relationships.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_commercial_relationshipsUpdateManyAndReturnArgs>(args: SelectSubset<T, business_commercial_relationshipsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_commercial_relationships.
     * @param {business_commercial_relationshipsUpsertArgs} args - Arguments to update or create a Business_commercial_relationships.
     * @example
     * // Update or create a Business_commercial_relationships
     * const business_commercial_relationships = await prisma.business_commercial_relationships.upsert({
     *   create: {
     *     // ... data to create a Business_commercial_relationships
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_commercial_relationships we want to update
     *   }
     * })
     */
    upsert<T extends business_commercial_relationshipsUpsertArgs>(args: SelectSubset<T, business_commercial_relationshipsUpsertArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_commercial_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationshipsCountArgs} args - Arguments to filter Business_commercial_relationships to count.
     * @example
     * // Count the number of Business_commercial_relationships
     * const count = await prisma.business_commercial_relationships.count({
     *   where: {
     *     // ... the filter for the Business_commercial_relationships we want to count
     *   }
     * })
    **/
    count<T extends business_commercial_relationshipsCountArgs>(
      args?: Subset<T, business_commercial_relationshipsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_commercial_relationshipsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_commercial_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_commercial_relationshipsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_commercial_relationshipsAggregateArgs>(args: Subset<T, Business_commercial_relationshipsAggregateArgs>): Prisma.PrismaPromise<GetBusiness_commercial_relationshipsAggregateType<T>>

    /**
     * Group by Business_commercial_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_commercial_relationshipsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_commercial_relationshipsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_commercial_relationshipsGroupByArgs['orderBy'] }
        : { orderBy?: business_commercial_relationshipsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_commercial_relationshipsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_commercial_relationshipsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_commercial_relationships model
   */
  readonly fields: business_commercial_relationshipsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_commercial_relationships.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_commercial_relationshipsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    business_commercial_relationship_documents_attached<T extends business_commercial_relationships$business_commercial_relationship_documents_attachedArgs<ExtArgs> = {}>(args?: Subset<T, business_commercial_relationships$business_commercial_relationship_documents_attachedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_commercial_relationship_documents_attachedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_commercial_relationships model
   */
  interface business_commercial_relationshipsFieldRefs {
    readonly id: FieldRef<"business_commercial_relationships", 'String'>
    readonly type: FieldRef<"business_commercial_relationships", 'String'>
    readonly signedContract: FieldRef<"business_commercial_relationships", 'Boolean'>
    readonly thirdPartyPaymentPermission: FieldRef<"business_commercial_relationships", 'Boolean'>
    readonly createdAt: FieldRef<"business_commercial_relationships", 'DateTime'>
    readonly updatedAt: FieldRef<"business_commercial_relationships", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_commercial_relationships findUnique
   */
  export type business_commercial_relationshipsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationships to fetch.
     */
    where: business_commercial_relationshipsWhereUniqueInput
  }

  /**
   * business_commercial_relationships findUniqueOrThrow
   */
  export type business_commercial_relationshipsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationships to fetch.
     */
    where: business_commercial_relationshipsWhereUniqueInput
  }

  /**
   * business_commercial_relationships findFirst
   */
  export type business_commercial_relationshipsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationships to fetch.
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationships to fetch.
     */
    orderBy?: business_commercial_relationshipsOrderByWithRelationInput | business_commercial_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_commercial_relationships.
     */
    cursor?: business_commercial_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_commercial_relationships.
     */
    distinct?: Business_commercial_relationshipsScalarFieldEnum | Business_commercial_relationshipsScalarFieldEnum[]
  }

  /**
   * business_commercial_relationships findFirstOrThrow
   */
  export type business_commercial_relationshipsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationships to fetch.
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationships to fetch.
     */
    orderBy?: business_commercial_relationshipsOrderByWithRelationInput | business_commercial_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_commercial_relationships.
     */
    cursor?: business_commercial_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_commercial_relationships.
     */
    distinct?: Business_commercial_relationshipsScalarFieldEnum | Business_commercial_relationshipsScalarFieldEnum[]
  }

  /**
   * business_commercial_relationships findMany
   */
  export type business_commercial_relationshipsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * Filter, which business_commercial_relationships to fetch.
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_commercial_relationships to fetch.
     */
    orderBy?: business_commercial_relationshipsOrderByWithRelationInput | business_commercial_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_commercial_relationships.
     */
    cursor?: business_commercial_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_commercial_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_commercial_relationships.
     */
    skip?: number
    distinct?: Business_commercial_relationshipsScalarFieldEnum | Business_commercial_relationshipsScalarFieldEnum[]
  }

  /**
   * business_commercial_relationships create
   */
  export type business_commercial_relationshipsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * The data needed to create a business_commercial_relationships.
     */
    data: XOR<business_commercial_relationshipsCreateInput, business_commercial_relationshipsUncheckedCreateInput>
  }

  /**
   * business_commercial_relationships createMany
   */
  export type business_commercial_relationshipsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_commercial_relationships.
     */
    data: business_commercial_relationshipsCreateManyInput | business_commercial_relationshipsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_commercial_relationships createManyAndReturn
   */
  export type business_commercial_relationshipsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * The data used to create many business_commercial_relationships.
     */
    data: business_commercial_relationshipsCreateManyInput | business_commercial_relationshipsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_commercial_relationships update
   */
  export type business_commercial_relationshipsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * The data needed to update a business_commercial_relationships.
     */
    data: XOR<business_commercial_relationshipsUpdateInput, business_commercial_relationshipsUncheckedUpdateInput>
    /**
     * Choose, which business_commercial_relationships to update.
     */
    where: business_commercial_relationshipsWhereUniqueInput
  }

  /**
   * business_commercial_relationships updateMany
   */
  export type business_commercial_relationshipsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_commercial_relationships.
     */
    data: XOR<business_commercial_relationshipsUpdateManyMutationInput, business_commercial_relationshipsUncheckedUpdateManyInput>
    /**
     * Filter which business_commercial_relationships to update
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * Limit how many business_commercial_relationships to update.
     */
    limit?: number
  }

  /**
   * business_commercial_relationships updateManyAndReturn
   */
  export type business_commercial_relationshipsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * The data used to update business_commercial_relationships.
     */
    data: XOR<business_commercial_relationshipsUpdateManyMutationInput, business_commercial_relationshipsUncheckedUpdateManyInput>
    /**
     * Filter which business_commercial_relationships to update
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * Limit how many business_commercial_relationships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_commercial_relationships upsert
   */
  export type business_commercial_relationshipsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * The filter to search for the business_commercial_relationships to update in case it exists.
     */
    where: business_commercial_relationshipsWhereUniqueInput
    /**
     * In case the business_commercial_relationships found by the `where` argument doesn't exist, create a new business_commercial_relationships with this data.
     */
    create: XOR<business_commercial_relationshipsCreateInput, business_commercial_relationshipsUncheckedCreateInput>
    /**
     * In case the business_commercial_relationships was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_commercial_relationshipsUpdateInput, business_commercial_relationshipsUncheckedUpdateInput>
  }

  /**
   * business_commercial_relationships delete
   */
  export type business_commercial_relationshipsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    /**
     * Filter which business_commercial_relationships to delete.
     */
    where: business_commercial_relationshipsWhereUniqueInput
  }

  /**
   * business_commercial_relationships deleteMany
   */
  export type business_commercial_relationshipsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_commercial_relationships to delete
     */
    where?: business_commercial_relationshipsWhereInput
    /**
     * Limit how many business_commercial_relationships to delete.
     */
    limit?: number
  }

  /**
   * business_commercial_relationships.business_commercial_relationship_documents_attached
   */
  export type business_commercial_relationships$business_commercial_relationship_documents_attachedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationship_documents_attached
     */
    select?: business_commercial_relationship_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationship_documents_attached
     */
    omit?: business_commercial_relationship_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationship_documents_attachedInclude<ExtArgs> | null
    where?: business_commercial_relationship_documents_attachedWhereInput
    orderBy?: business_commercial_relationship_documents_attachedOrderByWithRelationInput | business_commercial_relationship_documents_attachedOrderByWithRelationInput[]
    cursor?: business_commercial_relationship_documents_attachedWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_commercial_relationship_documents_attachedScalarFieldEnum | Business_commercial_relationship_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_commercial_relationships without action
   */
  export type business_commercial_relationshipsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
  }


  /**
   * Model business_compliance
   */

  export type AggregateBusiness_compliance = {
    _count: Business_complianceCountAggregateOutputType | null
    _min: Business_complianceMinAggregateOutputType | null
    _max: Business_complianceMaxAggregateOutputType | null
  }

  export type Business_complianceMinAggregateOutputType = {
    id: string | null
    kycVerified: boolean | null
    amlApproved: boolean | null
    taxWithholdingApplicable: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_complianceMaxAggregateOutputType = {
    id: string | null
    kycVerified: boolean | null
    amlApproved: boolean | null
    taxWithholdingApplicable: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_complianceCountAggregateOutputType = {
    id: number
    kycVerified: number
    amlApproved: number
    taxWithholdingApplicable: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_complianceMinAggregateInputType = {
    id?: true
    kycVerified?: true
    amlApproved?: true
    taxWithholdingApplicable?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_complianceMaxAggregateInputType = {
    id?: true
    kycVerified?: true
    amlApproved?: true
    taxWithholdingApplicable?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_complianceCountAggregateInputType = {
    id?: true
    kycVerified?: true
    amlApproved?: true
    taxWithholdingApplicable?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_complianceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_compliance to aggregate.
     */
    where?: business_complianceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_compliances to fetch.
     */
    orderBy?: business_complianceOrderByWithRelationInput | business_complianceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_complianceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_compliances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_compliances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_compliances
    **/
    _count?: true | Business_complianceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_complianceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_complianceMaxAggregateInputType
  }

  export type GetBusiness_complianceAggregateType<T extends Business_complianceAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_compliance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_compliance[P]>
      : GetScalarType<T[P], AggregateBusiness_compliance[P]>
  }




  export type business_complianceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_complianceWhereInput
    orderBy?: business_complianceOrderByWithAggregationInput | business_complianceOrderByWithAggregationInput[]
    by: Business_complianceScalarFieldEnum[] | Business_complianceScalarFieldEnum
    having?: business_complianceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_complianceCountAggregateInputType | true
    _min?: Business_complianceMinAggregateInputType
    _max?: Business_complianceMaxAggregateInputType
  }

  export type Business_complianceGroupByOutputType = {
    id: string
    kycVerified: boolean | null
    amlApproved: boolean | null
    taxWithholdingApplicable: boolean | null
    createdAt: Date
    updatedAt: Date
    _count: Business_complianceCountAggregateOutputType | null
    _min: Business_complianceMinAggregateOutputType | null
    _max: Business_complianceMaxAggregateOutputType | null
  }

  type GetBusiness_complianceGroupByPayload<T extends business_complianceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_complianceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_complianceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_complianceGroupByOutputType[P]>
            : GetScalarType<T[P], Business_complianceGroupByOutputType[P]>
        }
      >
    >


  export type business_complianceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kycVerified?: boolean
    amlApproved?: boolean
    taxWithholdingApplicable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_compliance"]>

  export type business_complianceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kycVerified?: boolean
    amlApproved?: boolean
    taxWithholdingApplicable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_compliance"]>

  export type business_complianceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kycVerified?: boolean
    amlApproved?: boolean
    taxWithholdingApplicable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_compliance"]>

  export type business_complianceSelectScalar = {
    id?: boolean
    kycVerified?: boolean
    amlApproved?: boolean
    taxWithholdingApplicable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_complianceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "kycVerified" | "amlApproved" | "taxWithholdingApplicable" | "createdAt" | "updatedAt", ExtArgs["result"]["business_compliance"]>
  export type business_complianceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_complianceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_complianceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_compliancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_compliance"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      kycVerified: boolean | null
      amlApproved: boolean | null
      taxWithholdingApplicable: boolean | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_compliance"]>
    composites: {}
  }

  type business_complianceGetPayload<S extends boolean | null | undefined | business_complianceDefaultArgs> = $Result.GetResult<Prisma.$business_compliancePayload, S>

  type business_complianceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_complianceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_complianceCountAggregateInputType | true
    }

  export interface business_complianceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_compliance'], meta: { name: 'business_compliance' } }
    /**
     * Find zero or one Business_compliance that matches the filter.
     * @param {business_complianceFindUniqueArgs} args - Arguments to find a Business_compliance
     * @example
     * // Get one Business_compliance
     * const business_compliance = await prisma.business_compliance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_complianceFindUniqueArgs>(args: SelectSubset<T, business_complianceFindUniqueArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_compliance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_complianceFindUniqueOrThrowArgs} args - Arguments to find a Business_compliance
     * @example
     * // Get one Business_compliance
     * const business_compliance = await prisma.business_compliance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_complianceFindUniqueOrThrowArgs>(args: SelectSubset<T, business_complianceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_compliance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_complianceFindFirstArgs} args - Arguments to find a Business_compliance
     * @example
     * // Get one Business_compliance
     * const business_compliance = await prisma.business_compliance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_complianceFindFirstArgs>(args?: SelectSubset<T, business_complianceFindFirstArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_compliance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_complianceFindFirstOrThrowArgs} args - Arguments to find a Business_compliance
     * @example
     * // Get one Business_compliance
     * const business_compliance = await prisma.business_compliance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_complianceFindFirstOrThrowArgs>(args?: SelectSubset<T, business_complianceFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_compliances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_complianceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_compliances
     * const business_compliances = await prisma.business_compliance.findMany()
     * 
     * // Get first 10 Business_compliances
     * const business_compliances = await prisma.business_compliance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_complianceWithIdOnly = await prisma.business_compliance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_complianceFindManyArgs>(args?: SelectSubset<T, business_complianceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_compliance.
     * @param {business_complianceCreateArgs} args - Arguments to create a Business_compliance.
     * @example
     * // Create one Business_compliance
     * const Business_compliance = await prisma.business_compliance.create({
     *   data: {
     *     // ... data to create a Business_compliance
     *   }
     * })
     * 
     */
    create<T extends business_complianceCreateArgs>(args: SelectSubset<T, business_complianceCreateArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_compliances.
     * @param {business_complianceCreateManyArgs} args - Arguments to create many Business_compliances.
     * @example
     * // Create many Business_compliances
     * const business_compliance = await prisma.business_compliance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_complianceCreateManyArgs>(args?: SelectSubset<T, business_complianceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_compliances and returns the data saved in the database.
     * @param {business_complianceCreateManyAndReturnArgs} args - Arguments to create many Business_compliances.
     * @example
     * // Create many Business_compliances
     * const business_compliance = await prisma.business_compliance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_compliances and only return the `id`
     * const business_complianceWithIdOnly = await prisma.business_compliance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_complianceCreateManyAndReturnArgs>(args?: SelectSubset<T, business_complianceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_compliance.
     * @param {business_complianceDeleteArgs} args - Arguments to delete one Business_compliance.
     * @example
     * // Delete one Business_compliance
     * const Business_compliance = await prisma.business_compliance.delete({
     *   where: {
     *     // ... filter to delete one Business_compliance
     *   }
     * })
     * 
     */
    delete<T extends business_complianceDeleteArgs>(args: SelectSubset<T, business_complianceDeleteArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_compliance.
     * @param {business_complianceUpdateArgs} args - Arguments to update one Business_compliance.
     * @example
     * // Update one Business_compliance
     * const business_compliance = await prisma.business_compliance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_complianceUpdateArgs>(args: SelectSubset<T, business_complianceUpdateArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_compliances.
     * @param {business_complianceDeleteManyArgs} args - Arguments to filter Business_compliances to delete.
     * @example
     * // Delete a few Business_compliances
     * const { count } = await prisma.business_compliance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_complianceDeleteManyArgs>(args?: SelectSubset<T, business_complianceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_compliances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_complianceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_compliances
     * const business_compliance = await prisma.business_compliance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_complianceUpdateManyArgs>(args: SelectSubset<T, business_complianceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_compliances and returns the data updated in the database.
     * @param {business_complianceUpdateManyAndReturnArgs} args - Arguments to update many Business_compliances.
     * @example
     * // Update many Business_compliances
     * const business_compliance = await prisma.business_compliance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_compliances and only return the `id`
     * const business_complianceWithIdOnly = await prisma.business_compliance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_complianceUpdateManyAndReturnArgs>(args: SelectSubset<T, business_complianceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_compliance.
     * @param {business_complianceUpsertArgs} args - Arguments to update or create a Business_compliance.
     * @example
     * // Update or create a Business_compliance
     * const business_compliance = await prisma.business_compliance.upsert({
     *   create: {
     *     // ... data to create a Business_compliance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_compliance we want to update
     *   }
     * })
     */
    upsert<T extends business_complianceUpsertArgs>(args: SelectSubset<T, business_complianceUpsertArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_compliances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_complianceCountArgs} args - Arguments to filter Business_compliances to count.
     * @example
     * // Count the number of Business_compliances
     * const count = await prisma.business_compliance.count({
     *   where: {
     *     // ... the filter for the Business_compliances we want to count
     *   }
     * })
    **/
    count<T extends business_complianceCountArgs>(
      args?: Subset<T, business_complianceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_complianceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_compliance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_complianceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_complianceAggregateArgs>(args: Subset<T, Business_complianceAggregateArgs>): Prisma.PrismaPromise<GetBusiness_complianceAggregateType<T>>

    /**
     * Group by Business_compliance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_complianceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_complianceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_complianceGroupByArgs['orderBy'] }
        : { orderBy?: business_complianceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_complianceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_complianceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_compliance model
   */
  readonly fields: business_complianceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_compliance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_complianceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_compliance model
   */
  interface business_complianceFieldRefs {
    readonly id: FieldRef<"business_compliance", 'String'>
    readonly kycVerified: FieldRef<"business_compliance", 'Boolean'>
    readonly amlApproved: FieldRef<"business_compliance", 'Boolean'>
    readonly taxWithholdingApplicable: FieldRef<"business_compliance", 'Boolean'>
    readonly createdAt: FieldRef<"business_compliance", 'DateTime'>
    readonly updatedAt: FieldRef<"business_compliance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_compliance findUnique
   */
  export type business_complianceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * Filter, which business_compliance to fetch.
     */
    where: business_complianceWhereUniqueInput
  }

  /**
   * business_compliance findUniqueOrThrow
   */
  export type business_complianceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * Filter, which business_compliance to fetch.
     */
    where: business_complianceWhereUniqueInput
  }

  /**
   * business_compliance findFirst
   */
  export type business_complianceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * Filter, which business_compliance to fetch.
     */
    where?: business_complianceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_compliances to fetch.
     */
    orderBy?: business_complianceOrderByWithRelationInput | business_complianceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_compliances.
     */
    cursor?: business_complianceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_compliances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_compliances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_compliances.
     */
    distinct?: Business_complianceScalarFieldEnum | Business_complianceScalarFieldEnum[]
  }

  /**
   * business_compliance findFirstOrThrow
   */
  export type business_complianceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * Filter, which business_compliance to fetch.
     */
    where?: business_complianceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_compliances to fetch.
     */
    orderBy?: business_complianceOrderByWithRelationInput | business_complianceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_compliances.
     */
    cursor?: business_complianceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_compliances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_compliances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_compliances.
     */
    distinct?: Business_complianceScalarFieldEnum | Business_complianceScalarFieldEnum[]
  }

  /**
   * business_compliance findMany
   */
  export type business_complianceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * Filter, which business_compliances to fetch.
     */
    where?: business_complianceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_compliances to fetch.
     */
    orderBy?: business_complianceOrderByWithRelationInput | business_complianceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_compliances.
     */
    cursor?: business_complianceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_compliances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_compliances.
     */
    skip?: number
    distinct?: Business_complianceScalarFieldEnum | Business_complianceScalarFieldEnum[]
  }

  /**
   * business_compliance create
   */
  export type business_complianceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * The data needed to create a business_compliance.
     */
    data: XOR<business_complianceCreateInput, business_complianceUncheckedCreateInput>
  }

  /**
   * business_compliance createMany
   */
  export type business_complianceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_compliances.
     */
    data: business_complianceCreateManyInput | business_complianceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_compliance createManyAndReturn
   */
  export type business_complianceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * The data used to create many business_compliances.
     */
    data: business_complianceCreateManyInput | business_complianceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_compliance update
   */
  export type business_complianceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * The data needed to update a business_compliance.
     */
    data: XOR<business_complianceUpdateInput, business_complianceUncheckedUpdateInput>
    /**
     * Choose, which business_compliance to update.
     */
    where: business_complianceWhereUniqueInput
  }

  /**
   * business_compliance updateMany
   */
  export type business_complianceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_compliances.
     */
    data: XOR<business_complianceUpdateManyMutationInput, business_complianceUncheckedUpdateManyInput>
    /**
     * Filter which business_compliances to update
     */
    where?: business_complianceWhereInput
    /**
     * Limit how many business_compliances to update.
     */
    limit?: number
  }

  /**
   * business_compliance updateManyAndReturn
   */
  export type business_complianceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * The data used to update business_compliances.
     */
    data: XOR<business_complianceUpdateManyMutationInput, business_complianceUncheckedUpdateManyInput>
    /**
     * Filter which business_compliances to update
     */
    where?: business_complianceWhereInput
    /**
     * Limit how many business_compliances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_compliance upsert
   */
  export type business_complianceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * The filter to search for the business_compliance to update in case it exists.
     */
    where: business_complianceWhereUniqueInput
    /**
     * In case the business_compliance found by the `where` argument doesn't exist, create a new business_compliance with this data.
     */
    create: XOR<business_complianceCreateInput, business_complianceUncheckedCreateInput>
    /**
     * In case the business_compliance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_complianceUpdateInput, business_complianceUncheckedUpdateInput>
  }

  /**
   * business_compliance delete
   */
  export type business_complianceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    /**
     * Filter which business_compliance to delete.
     */
    where: business_complianceWhereUniqueInput
  }

  /**
   * business_compliance deleteMany
   */
  export type business_complianceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_compliances to delete
     */
    where?: business_complianceWhereInput
    /**
     * Limit how many business_compliances to delete.
     */
    limit?: number
  }

  /**
   * business_compliance without action
   */
  export type business_complianceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
  }


  /**
   * Model business_configurations
   */

  export type AggregateBusiness_configurations = {
    _count: Business_configurationsCountAggregateOutputType | null
    _avg: Business_configurationsAvgAggregateOutputType | null
    _sum: Business_configurationsSumAggregateOutputType | null
    _min: Business_configurationsMinAggregateOutputType | null
    _max: Business_configurationsMaxAggregateOutputType | null
  }

  export type Business_configurationsAvgAggregateOutputType = {
    maxPhonesDevices: number | null
  }

  export type Business_configurationsSumAggregateOutputType = {
    maxPhonesDevices: number | null
  }

  export type Business_configurationsMinAggregateOutputType = {
    id: string | null
    affiliate: boolean | null
    maxPhonesDevices: number | null
    displayUsername: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_configurationsMaxAggregateOutputType = {
    id: string | null
    affiliate: boolean | null
    maxPhonesDevices: number | null
    displayUsername: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_configurationsCountAggregateOutputType = {
    id: number
    wifi: number
    schedule: number
    functionsActivated: number
    apiKey: number
    affiliate: number
    maxPhonesDevices: number
    displayUsername: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_configurationsAvgAggregateInputType = {
    maxPhonesDevices?: true
  }

  export type Business_configurationsSumAggregateInputType = {
    maxPhonesDevices?: true
  }

  export type Business_configurationsMinAggregateInputType = {
    id?: true
    affiliate?: true
    maxPhonesDevices?: true
    displayUsername?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_configurationsMaxAggregateInputType = {
    id?: true
    affiliate?: true
    maxPhonesDevices?: true
    displayUsername?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_configurationsCountAggregateInputType = {
    id?: true
    wifi?: true
    schedule?: true
    functionsActivated?: true
    apiKey?: true
    affiliate?: true
    maxPhonesDevices?: true
    displayUsername?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_configurationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_configurations to aggregate.
     */
    where?: business_configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_configurations to fetch.
     */
    orderBy?: business_configurationsOrderByWithRelationInput | business_configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_configurations
    **/
    _count?: true | Business_configurationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Business_configurationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Business_configurationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_configurationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_configurationsMaxAggregateInputType
  }

  export type GetBusiness_configurationsAggregateType<T extends Business_configurationsAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_configurations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_configurations[P]>
      : GetScalarType<T[P], AggregateBusiness_configurations[P]>
  }




  export type business_configurationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_configurationsWhereInput
    orderBy?: business_configurationsOrderByWithAggregationInput | business_configurationsOrderByWithAggregationInput[]
    by: Business_configurationsScalarFieldEnum[] | Business_configurationsScalarFieldEnum
    having?: business_configurationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_configurationsCountAggregateInputType | true
    _avg?: Business_configurationsAvgAggregateInputType
    _sum?: Business_configurationsSumAggregateInputType
    _min?: Business_configurationsMinAggregateInputType
    _max?: Business_configurationsMaxAggregateInputType
  }

  export type Business_configurationsGroupByOutputType = {
    id: string
    wifi: JsonValue | null
    schedule: JsonValue | null
    functionsActivated: JsonValue | null
    apiKey: JsonValue | null
    affiliate: boolean | null
    maxPhonesDevices: number | null
    displayUsername: string | null
    createdAt: Date
    updatedAt: Date
    _count: Business_configurationsCountAggregateOutputType | null
    _avg: Business_configurationsAvgAggregateOutputType | null
    _sum: Business_configurationsSumAggregateOutputType | null
    _min: Business_configurationsMinAggregateOutputType | null
    _max: Business_configurationsMaxAggregateOutputType | null
  }

  type GetBusiness_configurationsGroupByPayload<T extends business_configurationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_configurationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_configurationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_configurationsGroupByOutputType[P]>
            : GetScalarType<T[P], Business_configurationsGroupByOutputType[P]>
        }
      >
    >


  export type business_configurationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    wifi?: boolean
    schedule?: boolean
    functionsActivated?: boolean
    apiKey?: boolean
    affiliate?: boolean
    maxPhonesDevices?: boolean
    displayUsername?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_configurations"]>

  export type business_configurationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    wifi?: boolean
    schedule?: boolean
    functionsActivated?: boolean
    apiKey?: boolean
    affiliate?: boolean
    maxPhonesDevices?: boolean
    displayUsername?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_configurations"]>

  export type business_configurationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    wifi?: boolean
    schedule?: boolean
    functionsActivated?: boolean
    apiKey?: boolean
    affiliate?: boolean
    maxPhonesDevices?: boolean
    displayUsername?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_configurations"]>

  export type business_configurationsSelectScalar = {
    id?: boolean
    wifi?: boolean
    schedule?: boolean
    functionsActivated?: boolean
    apiKey?: boolean
    affiliate?: boolean
    maxPhonesDevices?: boolean
    displayUsername?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_configurationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "wifi" | "schedule" | "functionsActivated" | "apiKey" | "affiliate" | "maxPhonesDevices" | "displayUsername" | "createdAt" | "updatedAt", ExtArgs["result"]["business_configurations"]>
  export type business_configurationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_configurationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_configurationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_configurationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_configurations"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      wifi: Prisma.JsonValue | null
      schedule: Prisma.JsonValue | null
      functionsActivated: Prisma.JsonValue | null
      apiKey: Prisma.JsonValue | null
      affiliate: boolean | null
      maxPhonesDevices: number | null
      displayUsername: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_configurations"]>
    composites: {}
  }

  type business_configurationsGetPayload<S extends boolean | null | undefined | business_configurationsDefaultArgs> = $Result.GetResult<Prisma.$business_configurationsPayload, S>

  type business_configurationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_configurationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_configurationsCountAggregateInputType | true
    }

  export interface business_configurationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_configurations'], meta: { name: 'business_configurations' } }
    /**
     * Find zero or one Business_configurations that matches the filter.
     * @param {business_configurationsFindUniqueArgs} args - Arguments to find a Business_configurations
     * @example
     * // Get one Business_configurations
     * const business_configurations = await prisma.business_configurations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_configurationsFindUniqueArgs>(args: SelectSubset<T, business_configurationsFindUniqueArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_configurations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_configurationsFindUniqueOrThrowArgs} args - Arguments to find a Business_configurations
     * @example
     * // Get one Business_configurations
     * const business_configurations = await prisma.business_configurations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_configurationsFindUniqueOrThrowArgs>(args: SelectSubset<T, business_configurationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_configurationsFindFirstArgs} args - Arguments to find a Business_configurations
     * @example
     * // Get one Business_configurations
     * const business_configurations = await prisma.business_configurations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_configurationsFindFirstArgs>(args?: SelectSubset<T, business_configurationsFindFirstArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_configurations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_configurationsFindFirstOrThrowArgs} args - Arguments to find a Business_configurations
     * @example
     * // Get one Business_configurations
     * const business_configurations = await prisma.business_configurations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_configurationsFindFirstOrThrowArgs>(args?: SelectSubset<T, business_configurationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_configurationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_configurations
     * const business_configurations = await prisma.business_configurations.findMany()
     * 
     * // Get first 10 Business_configurations
     * const business_configurations = await prisma.business_configurations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_configurationsWithIdOnly = await prisma.business_configurations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_configurationsFindManyArgs>(args?: SelectSubset<T, business_configurationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_configurations.
     * @param {business_configurationsCreateArgs} args - Arguments to create a Business_configurations.
     * @example
     * // Create one Business_configurations
     * const Business_configurations = await prisma.business_configurations.create({
     *   data: {
     *     // ... data to create a Business_configurations
     *   }
     * })
     * 
     */
    create<T extends business_configurationsCreateArgs>(args: SelectSubset<T, business_configurationsCreateArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_configurations.
     * @param {business_configurationsCreateManyArgs} args - Arguments to create many Business_configurations.
     * @example
     * // Create many Business_configurations
     * const business_configurations = await prisma.business_configurations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_configurationsCreateManyArgs>(args?: SelectSubset<T, business_configurationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_configurations and returns the data saved in the database.
     * @param {business_configurationsCreateManyAndReturnArgs} args - Arguments to create many Business_configurations.
     * @example
     * // Create many Business_configurations
     * const business_configurations = await prisma.business_configurations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_configurations and only return the `id`
     * const business_configurationsWithIdOnly = await prisma.business_configurations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_configurationsCreateManyAndReturnArgs>(args?: SelectSubset<T, business_configurationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_configurations.
     * @param {business_configurationsDeleteArgs} args - Arguments to delete one Business_configurations.
     * @example
     * // Delete one Business_configurations
     * const Business_configurations = await prisma.business_configurations.delete({
     *   where: {
     *     // ... filter to delete one Business_configurations
     *   }
     * })
     * 
     */
    delete<T extends business_configurationsDeleteArgs>(args: SelectSubset<T, business_configurationsDeleteArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_configurations.
     * @param {business_configurationsUpdateArgs} args - Arguments to update one Business_configurations.
     * @example
     * // Update one Business_configurations
     * const business_configurations = await prisma.business_configurations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_configurationsUpdateArgs>(args: SelectSubset<T, business_configurationsUpdateArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_configurations.
     * @param {business_configurationsDeleteManyArgs} args - Arguments to filter Business_configurations to delete.
     * @example
     * // Delete a few Business_configurations
     * const { count } = await prisma.business_configurations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_configurationsDeleteManyArgs>(args?: SelectSubset<T, business_configurationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_configurationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_configurations
     * const business_configurations = await prisma.business_configurations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_configurationsUpdateManyArgs>(args: SelectSubset<T, business_configurationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_configurations and returns the data updated in the database.
     * @param {business_configurationsUpdateManyAndReturnArgs} args - Arguments to update many Business_configurations.
     * @example
     * // Update many Business_configurations
     * const business_configurations = await prisma.business_configurations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_configurations and only return the `id`
     * const business_configurationsWithIdOnly = await prisma.business_configurations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_configurationsUpdateManyAndReturnArgs>(args: SelectSubset<T, business_configurationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_configurations.
     * @param {business_configurationsUpsertArgs} args - Arguments to update or create a Business_configurations.
     * @example
     * // Update or create a Business_configurations
     * const business_configurations = await prisma.business_configurations.upsert({
     *   create: {
     *     // ... data to create a Business_configurations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_configurations we want to update
     *   }
     * })
     */
    upsert<T extends business_configurationsUpsertArgs>(args: SelectSubset<T, business_configurationsUpsertArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_configurationsCountArgs} args - Arguments to filter Business_configurations to count.
     * @example
     * // Count the number of Business_configurations
     * const count = await prisma.business_configurations.count({
     *   where: {
     *     // ... the filter for the Business_configurations we want to count
     *   }
     * })
    **/
    count<T extends business_configurationsCountArgs>(
      args?: Subset<T, business_configurationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_configurationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_configurationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_configurationsAggregateArgs>(args: Subset<T, Business_configurationsAggregateArgs>): Prisma.PrismaPromise<GetBusiness_configurationsAggregateType<T>>

    /**
     * Group by Business_configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_configurationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_configurationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_configurationsGroupByArgs['orderBy'] }
        : { orderBy?: business_configurationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_configurationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_configurationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_configurations model
   */
  readonly fields: business_configurationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_configurations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_configurationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_configurations model
   */
  interface business_configurationsFieldRefs {
    readonly id: FieldRef<"business_configurations", 'String'>
    readonly wifi: FieldRef<"business_configurations", 'Json'>
    readonly schedule: FieldRef<"business_configurations", 'Json'>
    readonly functionsActivated: FieldRef<"business_configurations", 'Json'>
    readonly apiKey: FieldRef<"business_configurations", 'Json'>
    readonly affiliate: FieldRef<"business_configurations", 'Boolean'>
    readonly maxPhonesDevices: FieldRef<"business_configurations", 'Int'>
    readonly displayUsername: FieldRef<"business_configurations", 'String'>
    readonly createdAt: FieldRef<"business_configurations", 'DateTime'>
    readonly updatedAt: FieldRef<"business_configurations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_configurations findUnique
   */
  export type business_configurationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * Filter, which business_configurations to fetch.
     */
    where: business_configurationsWhereUniqueInput
  }

  /**
   * business_configurations findUniqueOrThrow
   */
  export type business_configurationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * Filter, which business_configurations to fetch.
     */
    where: business_configurationsWhereUniqueInput
  }

  /**
   * business_configurations findFirst
   */
  export type business_configurationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * Filter, which business_configurations to fetch.
     */
    where?: business_configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_configurations to fetch.
     */
    orderBy?: business_configurationsOrderByWithRelationInput | business_configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_configurations.
     */
    cursor?: business_configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_configurations.
     */
    distinct?: Business_configurationsScalarFieldEnum | Business_configurationsScalarFieldEnum[]
  }

  /**
   * business_configurations findFirstOrThrow
   */
  export type business_configurationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * Filter, which business_configurations to fetch.
     */
    where?: business_configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_configurations to fetch.
     */
    orderBy?: business_configurationsOrderByWithRelationInput | business_configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_configurations.
     */
    cursor?: business_configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_configurations.
     */
    distinct?: Business_configurationsScalarFieldEnum | Business_configurationsScalarFieldEnum[]
  }

  /**
   * business_configurations findMany
   */
  export type business_configurationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * Filter, which business_configurations to fetch.
     */
    where?: business_configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_configurations to fetch.
     */
    orderBy?: business_configurationsOrderByWithRelationInput | business_configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_configurations.
     */
    cursor?: business_configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_configurations.
     */
    skip?: number
    distinct?: Business_configurationsScalarFieldEnum | Business_configurationsScalarFieldEnum[]
  }

  /**
   * business_configurations create
   */
  export type business_configurationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * The data needed to create a business_configurations.
     */
    data: XOR<business_configurationsCreateInput, business_configurationsUncheckedCreateInput>
  }

  /**
   * business_configurations createMany
   */
  export type business_configurationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_configurations.
     */
    data: business_configurationsCreateManyInput | business_configurationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_configurations createManyAndReturn
   */
  export type business_configurationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * The data used to create many business_configurations.
     */
    data: business_configurationsCreateManyInput | business_configurationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_configurations update
   */
  export type business_configurationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * The data needed to update a business_configurations.
     */
    data: XOR<business_configurationsUpdateInput, business_configurationsUncheckedUpdateInput>
    /**
     * Choose, which business_configurations to update.
     */
    where: business_configurationsWhereUniqueInput
  }

  /**
   * business_configurations updateMany
   */
  export type business_configurationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_configurations.
     */
    data: XOR<business_configurationsUpdateManyMutationInput, business_configurationsUncheckedUpdateManyInput>
    /**
     * Filter which business_configurations to update
     */
    where?: business_configurationsWhereInput
    /**
     * Limit how many business_configurations to update.
     */
    limit?: number
  }

  /**
   * business_configurations updateManyAndReturn
   */
  export type business_configurationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * The data used to update business_configurations.
     */
    data: XOR<business_configurationsUpdateManyMutationInput, business_configurationsUncheckedUpdateManyInput>
    /**
     * Filter which business_configurations to update
     */
    where?: business_configurationsWhereInput
    /**
     * Limit how many business_configurations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_configurations upsert
   */
  export type business_configurationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * The filter to search for the business_configurations to update in case it exists.
     */
    where: business_configurationsWhereUniqueInput
    /**
     * In case the business_configurations found by the `where` argument doesn't exist, create a new business_configurations with this data.
     */
    create: XOR<business_configurationsCreateInput, business_configurationsUncheckedCreateInput>
    /**
     * In case the business_configurations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_configurationsUpdateInput, business_configurationsUncheckedUpdateInput>
  }

  /**
   * business_configurations delete
   */
  export type business_configurationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    /**
     * Filter which business_configurations to delete.
     */
    where: business_configurationsWhereUniqueInput
  }

  /**
   * business_configurations deleteMany
   */
  export type business_configurationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_configurations to delete
     */
    where?: business_configurationsWhereInput
    /**
     * Limit how many business_configurations to delete.
     */
    limit?: number
  }

  /**
   * business_configurations without action
   */
  export type business_configurationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
  }


  /**
   * Model business_employees
   */

  export type AggregateBusiness_employees = {
    _count: Business_employeesCountAggregateOutputType | null
    _min: Business_employeesMinAggregateOutputType | null
    _max: Business_employeesMaxAggregateOutputType | null
  }

  export type Business_employeesMinAggregateOutputType = {
    id: string | null
    nameEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_employeesMaxAggregateOutputType = {
    id: string | null
    nameEmployee: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_employeesCountAggregateOutputType = {
    id: number
    nameEmployee: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_employeesMinAggregateInputType = {
    id?: true
    nameEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_employeesMaxAggregateInputType = {
    id?: true
    nameEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_employeesCountAggregateInputType = {
    id?: true
    nameEmployee?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_employeesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_employees to aggregate.
     */
    where?: business_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees to fetch.
     */
    orderBy?: business_employeesOrderByWithRelationInput | business_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_employees
    **/
    _count?: true | Business_employeesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_employeesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_employeesMaxAggregateInputType
  }

  export type GetBusiness_employeesAggregateType<T extends Business_employeesAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_employees]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_employees[P]>
      : GetScalarType<T[P], AggregateBusiness_employees[P]>
  }




  export type business_employeesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_employeesWhereInput
    orderBy?: business_employeesOrderByWithAggregationInput | business_employeesOrderByWithAggregationInput[]
    by: Business_employeesScalarFieldEnum[] | Business_employeesScalarFieldEnum
    having?: business_employeesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_employeesCountAggregateInputType | true
    _min?: Business_employeesMinAggregateInputType
    _max?: Business_employeesMaxAggregateInputType
  }

  export type Business_employeesGroupByOutputType = {
    id: string
    nameEmployee: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Business_employeesCountAggregateOutputType | null
    _min: Business_employeesMinAggregateOutputType | null
    _max: Business_employeesMaxAggregateOutputType | null
  }

  type GetBusiness_employeesGroupByPayload<T extends business_employeesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_employeesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_employeesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_employeesGroupByOutputType[P]>
            : GetScalarType<T[P], Business_employeesGroupByOutputType[P]>
        }
      >
    >


  export type business_employeesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nameEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees_clock_records?: boolean | business_employees$business_employees_clock_recordsArgs<ExtArgs>
    _count?: boolean | Business_employeesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_employees"]>

  export type business_employeesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nameEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_employees"]>

  export type business_employeesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nameEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_employees"]>

  export type business_employeesSelectScalar = {
    id?: boolean
    nameEmployee?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_employeesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nameEmployee" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_employees"]>
  export type business_employeesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees_clock_records?: boolean | business_employees$business_employees_clock_recordsArgs<ExtArgs>
    _count?: boolean | Business_employeesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type business_employeesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_employeesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_employeesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_employees"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_employees_clock_records: Prisma.$business_employees_clock_recordsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nameEmployee: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_employees"]>
    composites: {}
  }

  type business_employeesGetPayload<S extends boolean | null | undefined | business_employeesDefaultArgs> = $Result.GetResult<Prisma.$business_employeesPayload, S>

  type business_employeesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_employeesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_employeesCountAggregateInputType | true
    }

  export interface business_employeesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_employees'], meta: { name: 'business_employees' } }
    /**
     * Find zero or one Business_employees that matches the filter.
     * @param {business_employeesFindUniqueArgs} args - Arguments to find a Business_employees
     * @example
     * // Get one Business_employees
     * const business_employees = await prisma.business_employees.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_employeesFindUniqueArgs>(args: SelectSubset<T, business_employeesFindUniqueArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_employees that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_employeesFindUniqueOrThrowArgs} args - Arguments to find a Business_employees
     * @example
     * // Get one Business_employees
     * const business_employees = await prisma.business_employees.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_employeesFindUniqueOrThrowArgs>(args: SelectSubset<T, business_employeesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employeesFindFirstArgs} args - Arguments to find a Business_employees
     * @example
     * // Get one Business_employees
     * const business_employees = await prisma.business_employees.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_employeesFindFirstArgs>(args?: SelectSubset<T, business_employeesFindFirstArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_employees that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employeesFindFirstOrThrowArgs} args - Arguments to find a Business_employees
     * @example
     * // Get one Business_employees
     * const business_employees = await prisma.business_employees.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_employeesFindFirstOrThrowArgs>(args?: SelectSubset<T, business_employeesFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employeesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_employees
     * const business_employees = await prisma.business_employees.findMany()
     * 
     * // Get first 10 Business_employees
     * const business_employees = await prisma.business_employees.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_employeesWithIdOnly = await prisma.business_employees.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_employeesFindManyArgs>(args?: SelectSubset<T, business_employeesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_employees.
     * @param {business_employeesCreateArgs} args - Arguments to create a Business_employees.
     * @example
     * // Create one Business_employees
     * const Business_employees = await prisma.business_employees.create({
     *   data: {
     *     // ... data to create a Business_employees
     *   }
     * })
     * 
     */
    create<T extends business_employeesCreateArgs>(args: SelectSubset<T, business_employeesCreateArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_employees.
     * @param {business_employeesCreateManyArgs} args - Arguments to create many Business_employees.
     * @example
     * // Create many Business_employees
     * const business_employees = await prisma.business_employees.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_employeesCreateManyArgs>(args?: SelectSubset<T, business_employeesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_employees and returns the data saved in the database.
     * @param {business_employeesCreateManyAndReturnArgs} args - Arguments to create many Business_employees.
     * @example
     * // Create many Business_employees
     * const business_employees = await prisma.business_employees.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_employees and only return the `id`
     * const business_employeesWithIdOnly = await prisma.business_employees.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_employeesCreateManyAndReturnArgs>(args?: SelectSubset<T, business_employeesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_employees.
     * @param {business_employeesDeleteArgs} args - Arguments to delete one Business_employees.
     * @example
     * // Delete one Business_employees
     * const Business_employees = await prisma.business_employees.delete({
     *   where: {
     *     // ... filter to delete one Business_employees
     *   }
     * })
     * 
     */
    delete<T extends business_employeesDeleteArgs>(args: SelectSubset<T, business_employeesDeleteArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_employees.
     * @param {business_employeesUpdateArgs} args - Arguments to update one Business_employees.
     * @example
     * // Update one Business_employees
     * const business_employees = await prisma.business_employees.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_employeesUpdateArgs>(args: SelectSubset<T, business_employeesUpdateArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_employees.
     * @param {business_employeesDeleteManyArgs} args - Arguments to filter Business_employees to delete.
     * @example
     * // Delete a few Business_employees
     * const { count } = await prisma.business_employees.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_employeesDeleteManyArgs>(args?: SelectSubset<T, business_employeesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employeesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_employees
     * const business_employees = await prisma.business_employees.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_employeesUpdateManyArgs>(args: SelectSubset<T, business_employeesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_employees and returns the data updated in the database.
     * @param {business_employeesUpdateManyAndReturnArgs} args - Arguments to update many Business_employees.
     * @example
     * // Update many Business_employees
     * const business_employees = await prisma.business_employees.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_employees and only return the `id`
     * const business_employeesWithIdOnly = await prisma.business_employees.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_employeesUpdateManyAndReturnArgs>(args: SelectSubset<T, business_employeesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_employees.
     * @param {business_employeesUpsertArgs} args - Arguments to update or create a Business_employees.
     * @example
     * // Update or create a Business_employees
     * const business_employees = await prisma.business_employees.upsert({
     *   create: {
     *     // ... data to create a Business_employees
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_employees we want to update
     *   }
     * })
     */
    upsert<T extends business_employeesUpsertArgs>(args: SelectSubset<T, business_employeesUpsertArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employeesCountArgs} args - Arguments to filter Business_employees to count.
     * @example
     * // Count the number of Business_employees
     * const count = await prisma.business_employees.count({
     *   where: {
     *     // ... the filter for the Business_employees we want to count
     *   }
     * })
    **/
    count<T extends business_employeesCountArgs>(
      args?: Subset<T, business_employeesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_employeesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_employeesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_employeesAggregateArgs>(args: Subset<T, Business_employeesAggregateArgs>): Prisma.PrismaPromise<GetBusiness_employeesAggregateType<T>>

    /**
     * Group by Business_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employeesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_employeesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_employeesGroupByArgs['orderBy'] }
        : { orderBy?: business_employeesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_employeesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_employeesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_employees model
   */
  readonly fields: business_employeesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_employees.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_employeesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_employees_clock_records<T extends business_employees$business_employees_clock_recordsArgs<ExtArgs> = {}>(args?: Subset<T, business_employees$business_employees_clock_recordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_employees model
   */
  interface business_employeesFieldRefs {
    readonly id: FieldRef<"business_employees", 'String'>
    readonly nameEmployee: FieldRef<"business_employees", 'String'>
    readonly businessId: FieldRef<"business_employees", 'String'>
    readonly createdAt: FieldRef<"business_employees", 'DateTime'>
    readonly updatedAt: FieldRef<"business_employees", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_employees findUnique
   */
  export type business_employeesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * Filter, which business_employees to fetch.
     */
    where: business_employeesWhereUniqueInput
  }

  /**
   * business_employees findUniqueOrThrow
   */
  export type business_employeesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * Filter, which business_employees to fetch.
     */
    where: business_employeesWhereUniqueInput
  }

  /**
   * business_employees findFirst
   */
  export type business_employeesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * Filter, which business_employees to fetch.
     */
    where?: business_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees to fetch.
     */
    orderBy?: business_employeesOrderByWithRelationInput | business_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_employees.
     */
    cursor?: business_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_employees.
     */
    distinct?: Business_employeesScalarFieldEnum | Business_employeesScalarFieldEnum[]
  }

  /**
   * business_employees findFirstOrThrow
   */
  export type business_employeesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * Filter, which business_employees to fetch.
     */
    where?: business_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees to fetch.
     */
    orderBy?: business_employeesOrderByWithRelationInput | business_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_employees.
     */
    cursor?: business_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_employees.
     */
    distinct?: Business_employeesScalarFieldEnum | Business_employeesScalarFieldEnum[]
  }

  /**
   * business_employees findMany
   */
  export type business_employeesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * Filter, which business_employees to fetch.
     */
    where?: business_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees to fetch.
     */
    orderBy?: business_employeesOrderByWithRelationInput | business_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_employees.
     */
    cursor?: business_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees.
     */
    skip?: number
    distinct?: Business_employeesScalarFieldEnum | Business_employeesScalarFieldEnum[]
  }

  /**
   * business_employees create
   */
  export type business_employeesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * The data needed to create a business_employees.
     */
    data: XOR<business_employeesCreateInput, business_employeesUncheckedCreateInput>
  }

  /**
   * business_employees createMany
   */
  export type business_employeesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_employees.
     */
    data: business_employeesCreateManyInput | business_employeesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_employees createManyAndReturn
   */
  export type business_employeesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * The data used to create many business_employees.
     */
    data: business_employeesCreateManyInput | business_employeesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_employees update
   */
  export type business_employeesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * The data needed to update a business_employees.
     */
    data: XOR<business_employeesUpdateInput, business_employeesUncheckedUpdateInput>
    /**
     * Choose, which business_employees to update.
     */
    where: business_employeesWhereUniqueInput
  }

  /**
   * business_employees updateMany
   */
  export type business_employeesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_employees.
     */
    data: XOR<business_employeesUpdateManyMutationInput, business_employeesUncheckedUpdateManyInput>
    /**
     * Filter which business_employees to update
     */
    where?: business_employeesWhereInput
    /**
     * Limit how many business_employees to update.
     */
    limit?: number
  }

  /**
   * business_employees updateManyAndReturn
   */
  export type business_employeesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * The data used to update business_employees.
     */
    data: XOR<business_employeesUpdateManyMutationInput, business_employeesUncheckedUpdateManyInput>
    /**
     * Filter which business_employees to update
     */
    where?: business_employeesWhereInput
    /**
     * Limit how many business_employees to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_employees upsert
   */
  export type business_employeesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * The filter to search for the business_employees to update in case it exists.
     */
    where: business_employeesWhereUniqueInput
    /**
     * In case the business_employees found by the `where` argument doesn't exist, create a new business_employees with this data.
     */
    create: XOR<business_employeesCreateInput, business_employeesUncheckedCreateInput>
    /**
     * In case the business_employees was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_employeesUpdateInput, business_employeesUncheckedUpdateInput>
  }

  /**
   * business_employees delete
   */
  export type business_employeesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    /**
     * Filter which business_employees to delete.
     */
    where: business_employeesWhereUniqueInput
  }

  /**
   * business_employees deleteMany
   */
  export type business_employeesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_employees to delete
     */
    where?: business_employeesWhereInput
    /**
     * Limit how many business_employees to delete.
     */
    limit?: number
  }

  /**
   * business_employees.business_employees_clock_records
   */
  export type business_employees$business_employees_clock_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    where?: business_employees_clock_recordsWhereInput
    orderBy?: business_employees_clock_recordsOrderByWithRelationInput | business_employees_clock_recordsOrderByWithRelationInput[]
    cursor?: business_employees_clock_recordsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_employees_clock_recordsScalarFieldEnum | Business_employees_clock_recordsScalarFieldEnum[]
  }

  /**
   * business_employees without action
   */
  export type business_employeesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
  }


  /**
   * Model business_employees_clock_records
   */

  export type AggregateBusiness_employees_clock_records = {
    _count: Business_employees_clock_recordsCountAggregateOutputType | null
    _min: Business_employees_clock_recordsMinAggregateOutputType | null
    _max: Business_employees_clock_recordsMaxAggregateOutputType | null
  }

  export type Business_employees_clock_recordsMinAggregateOutputType = {
    id: string | null
    employeeId: string | null
    recordTime: Date | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_employees_clock_recordsMaxAggregateOutputType = {
    id: string | null
    employeeId: string | null
    recordTime: Date | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_employees_clock_recordsCountAggregateOutputType = {
    id: number
    employeeId: number
    recordTime: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_employees_clock_recordsMinAggregateInputType = {
    id?: true
    employeeId?: true
    recordTime?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_employees_clock_recordsMaxAggregateInputType = {
    id?: true
    employeeId?: true
    recordTime?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_employees_clock_recordsCountAggregateInputType = {
    id?: true
    employeeId?: true
    recordTime?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_employees_clock_recordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_employees_clock_records to aggregate.
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees_clock_records to fetch.
     */
    orderBy?: business_employees_clock_recordsOrderByWithRelationInput | business_employees_clock_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_employees_clock_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees_clock_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees_clock_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_employees_clock_records
    **/
    _count?: true | Business_employees_clock_recordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_employees_clock_recordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_employees_clock_recordsMaxAggregateInputType
  }

  export type GetBusiness_employees_clock_recordsAggregateType<T extends Business_employees_clock_recordsAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_employees_clock_records]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_employees_clock_records[P]>
      : GetScalarType<T[P], AggregateBusiness_employees_clock_records[P]>
  }




  export type business_employees_clock_recordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_employees_clock_recordsWhereInput
    orderBy?: business_employees_clock_recordsOrderByWithAggregationInput | business_employees_clock_recordsOrderByWithAggregationInput[]
    by: Business_employees_clock_recordsScalarFieldEnum[] | Business_employees_clock_recordsScalarFieldEnum
    having?: business_employees_clock_recordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_employees_clock_recordsCountAggregateInputType | true
    _min?: Business_employees_clock_recordsMinAggregateInputType
    _max?: Business_employees_clock_recordsMaxAggregateInputType
  }

  export type Business_employees_clock_recordsGroupByOutputType = {
    id: string
    employeeId: string
    recordTime: Date
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Business_employees_clock_recordsCountAggregateOutputType | null
    _min: Business_employees_clock_recordsMinAggregateOutputType | null
    _max: Business_employees_clock_recordsMaxAggregateOutputType | null
  }

  type GetBusiness_employees_clock_recordsGroupByPayload<T extends business_employees_clock_recordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_employees_clock_recordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_employees_clock_recordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_employees_clock_recordsGroupByOutputType[P]>
            : GetScalarType<T[P], Business_employees_clock_recordsGroupByOutputType[P]>
        }
      >
    >


  export type business_employees_clock_recordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employeeId?: boolean
    recordTime?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees?: boolean | business_employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_employees_clock_records"]>

  export type business_employees_clock_recordsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employeeId?: boolean
    recordTime?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees?: boolean | business_employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_employees_clock_records"]>

  export type business_employees_clock_recordsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employeeId?: boolean
    recordTime?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees?: boolean | business_employeesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_employees_clock_records"]>

  export type business_employees_clock_recordsSelectScalar = {
    id?: boolean
    employeeId?: boolean
    recordTime?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_employees_clock_recordsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employeeId" | "recordTime" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_employees_clock_records"]>
  export type business_employees_clock_recordsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees?: boolean | business_employeesDefaultArgs<ExtArgs>
  }
  export type business_employees_clock_recordsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees?: boolean | business_employeesDefaultArgs<ExtArgs>
  }
  export type business_employees_clock_recordsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_employees?: boolean | business_employeesDefaultArgs<ExtArgs>
  }

  export type $business_employees_clock_recordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_employees_clock_records"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_employees: Prisma.$business_employeesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      employeeId: string
      recordTime: Date
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_employees_clock_records"]>
    composites: {}
  }

  type business_employees_clock_recordsGetPayload<S extends boolean | null | undefined | business_employees_clock_recordsDefaultArgs> = $Result.GetResult<Prisma.$business_employees_clock_recordsPayload, S>

  type business_employees_clock_recordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_employees_clock_recordsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_employees_clock_recordsCountAggregateInputType | true
    }

  export interface business_employees_clock_recordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_employees_clock_records'], meta: { name: 'business_employees_clock_records' } }
    /**
     * Find zero or one Business_employees_clock_records that matches the filter.
     * @param {business_employees_clock_recordsFindUniqueArgs} args - Arguments to find a Business_employees_clock_records
     * @example
     * // Get one Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_employees_clock_recordsFindUniqueArgs>(args: SelectSubset<T, business_employees_clock_recordsFindUniqueArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_employees_clock_records that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_employees_clock_recordsFindUniqueOrThrowArgs} args - Arguments to find a Business_employees_clock_records
     * @example
     * // Get one Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_employees_clock_recordsFindUniqueOrThrowArgs>(args: SelectSubset<T, business_employees_clock_recordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_employees_clock_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employees_clock_recordsFindFirstArgs} args - Arguments to find a Business_employees_clock_records
     * @example
     * // Get one Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_employees_clock_recordsFindFirstArgs>(args?: SelectSubset<T, business_employees_clock_recordsFindFirstArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_employees_clock_records that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employees_clock_recordsFindFirstOrThrowArgs} args - Arguments to find a Business_employees_clock_records
     * @example
     * // Get one Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_employees_clock_recordsFindFirstOrThrowArgs>(args?: SelectSubset<T, business_employees_clock_recordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_employees_clock_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employees_clock_recordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.findMany()
     * 
     * // Get first 10 Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_employees_clock_recordsWithIdOnly = await prisma.business_employees_clock_records.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_employees_clock_recordsFindManyArgs>(args?: SelectSubset<T, business_employees_clock_recordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_employees_clock_records.
     * @param {business_employees_clock_recordsCreateArgs} args - Arguments to create a Business_employees_clock_records.
     * @example
     * // Create one Business_employees_clock_records
     * const Business_employees_clock_records = await prisma.business_employees_clock_records.create({
     *   data: {
     *     // ... data to create a Business_employees_clock_records
     *   }
     * })
     * 
     */
    create<T extends business_employees_clock_recordsCreateArgs>(args: SelectSubset<T, business_employees_clock_recordsCreateArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_employees_clock_records.
     * @param {business_employees_clock_recordsCreateManyArgs} args - Arguments to create many Business_employees_clock_records.
     * @example
     * // Create many Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_employees_clock_recordsCreateManyArgs>(args?: SelectSubset<T, business_employees_clock_recordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_employees_clock_records and returns the data saved in the database.
     * @param {business_employees_clock_recordsCreateManyAndReturnArgs} args - Arguments to create many Business_employees_clock_records.
     * @example
     * // Create many Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_employees_clock_records and only return the `id`
     * const business_employees_clock_recordsWithIdOnly = await prisma.business_employees_clock_records.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_employees_clock_recordsCreateManyAndReturnArgs>(args?: SelectSubset<T, business_employees_clock_recordsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_employees_clock_records.
     * @param {business_employees_clock_recordsDeleteArgs} args - Arguments to delete one Business_employees_clock_records.
     * @example
     * // Delete one Business_employees_clock_records
     * const Business_employees_clock_records = await prisma.business_employees_clock_records.delete({
     *   where: {
     *     // ... filter to delete one Business_employees_clock_records
     *   }
     * })
     * 
     */
    delete<T extends business_employees_clock_recordsDeleteArgs>(args: SelectSubset<T, business_employees_clock_recordsDeleteArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_employees_clock_records.
     * @param {business_employees_clock_recordsUpdateArgs} args - Arguments to update one Business_employees_clock_records.
     * @example
     * // Update one Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_employees_clock_recordsUpdateArgs>(args: SelectSubset<T, business_employees_clock_recordsUpdateArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_employees_clock_records.
     * @param {business_employees_clock_recordsDeleteManyArgs} args - Arguments to filter Business_employees_clock_records to delete.
     * @example
     * // Delete a few Business_employees_clock_records
     * const { count } = await prisma.business_employees_clock_records.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_employees_clock_recordsDeleteManyArgs>(args?: SelectSubset<T, business_employees_clock_recordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_employees_clock_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employees_clock_recordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_employees_clock_recordsUpdateManyArgs>(args: SelectSubset<T, business_employees_clock_recordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_employees_clock_records and returns the data updated in the database.
     * @param {business_employees_clock_recordsUpdateManyAndReturnArgs} args - Arguments to update many Business_employees_clock_records.
     * @example
     * // Update many Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_employees_clock_records and only return the `id`
     * const business_employees_clock_recordsWithIdOnly = await prisma.business_employees_clock_records.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_employees_clock_recordsUpdateManyAndReturnArgs>(args: SelectSubset<T, business_employees_clock_recordsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_employees_clock_records.
     * @param {business_employees_clock_recordsUpsertArgs} args - Arguments to update or create a Business_employees_clock_records.
     * @example
     * // Update or create a Business_employees_clock_records
     * const business_employees_clock_records = await prisma.business_employees_clock_records.upsert({
     *   create: {
     *     // ... data to create a Business_employees_clock_records
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_employees_clock_records we want to update
     *   }
     * })
     */
    upsert<T extends business_employees_clock_recordsUpsertArgs>(args: SelectSubset<T, business_employees_clock_recordsUpsertArgs<ExtArgs>>): Prisma__business_employees_clock_recordsClient<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_employees_clock_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employees_clock_recordsCountArgs} args - Arguments to filter Business_employees_clock_records to count.
     * @example
     * // Count the number of Business_employees_clock_records
     * const count = await prisma.business_employees_clock_records.count({
     *   where: {
     *     // ... the filter for the Business_employees_clock_records we want to count
     *   }
     * })
    **/
    count<T extends business_employees_clock_recordsCountArgs>(
      args?: Subset<T, business_employees_clock_recordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_employees_clock_recordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_employees_clock_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_employees_clock_recordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_employees_clock_recordsAggregateArgs>(args: Subset<T, Business_employees_clock_recordsAggregateArgs>): Prisma.PrismaPromise<GetBusiness_employees_clock_recordsAggregateType<T>>

    /**
     * Group by Business_employees_clock_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_employees_clock_recordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_employees_clock_recordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_employees_clock_recordsGroupByArgs['orderBy'] }
        : { orderBy?: business_employees_clock_recordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_employees_clock_recordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_employees_clock_recordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_employees_clock_records model
   */
  readonly fields: business_employees_clock_recordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_employees_clock_records.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_employees_clock_recordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_employees<T extends business_employeesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, business_employeesDefaultArgs<ExtArgs>>): Prisma__business_employeesClient<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_employees_clock_records model
   */
  interface business_employees_clock_recordsFieldRefs {
    readonly id: FieldRef<"business_employees_clock_records", 'String'>
    readonly employeeId: FieldRef<"business_employees_clock_records", 'String'>
    readonly recordTime: FieldRef<"business_employees_clock_records", 'DateTime'>
    readonly businessId: FieldRef<"business_employees_clock_records", 'String'>
    readonly createdAt: FieldRef<"business_employees_clock_records", 'DateTime'>
    readonly updatedAt: FieldRef<"business_employees_clock_records", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_employees_clock_records findUnique
   */
  export type business_employees_clock_recordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * Filter, which business_employees_clock_records to fetch.
     */
    where: business_employees_clock_recordsWhereUniqueInput
  }

  /**
   * business_employees_clock_records findUniqueOrThrow
   */
  export type business_employees_clock_recordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * Filter, which business_employees_clock_records to fetch.
     */
    where: business_employees_clock_recordsWhereUniqueInput
  }

  /**
   * business_employees_clock_records findFirst
   */
  export type business_employees_clock_recordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * Filter, which business_employees_clock_records to fetch.
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees_clock_records to fetch.
     */
    orderBy?: business_employees_clock_recordsOrderByWithRelationInput | business_employees_clock_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_employees_clock_records.
     */
    cursor?: business_employees_clock_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees_clock_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees_clock_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_employees_clock_records.
     */
    distinct?: Business_employees_clock_recordsScalarFieldEnum | Business_employees_clock_recordsScalarFieldEnum[]
  }

  /**
   * business_employees_clock_records findFirstOrThrow
   */
  export type business_employees_clock_recordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * Filter, which business_employees_clock_records to fetch.
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees_clock_records to fetch.
     */
    orderBy?: business_employees_clock_recordsOrderByWithRelationInput | business_employees_clock_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_employees_clock_records.
     */
    cursor?: business_employees_clock_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees_clock_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees_clock_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_employees_clock_records.
     */
    distinct?: Business_employees_clock_recordsScalarFieldEnum | Business_employees_clock_recordsScalarFieldEnum[]
  }

  /**
   * business_employees_clock_records findMany
   */
  export type business_employees_clock_recordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * Filter, which business_employees_clock_records to fetch.
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_employees_clock_records to fetch.
     */
    orderBy?: business_employees_clock_recordsOrderByWithRelationInput | business_employees_clock_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_employees_clock_records.
     */
    cursor?: business_employees_clock_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_employees_clock_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_employees_clock_records.
     */
    skip?: number
    distinct?: Business_employees_clock_recordsScalarFieldEnum | Business_employees_clock_recordsScalarFieldEnum[]
  }

  /**
   * business_employees_clock_records create
   */
  export type business_employees_clock_recordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * The data needed to create a business_employees_clock_records.
     */
    data: XOR<business_employees_clock_recordsCreateInput, business_employees_clock_recordsUncheckedCreateInput>
  }

  /**
   * business_employees_clock_records createMany
   */
  export type business_employees_clock_recordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_employees_clock_records.
     */
    data: business_employees_clock_recordsCreateManyInput | business_employees_clock_recordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_employees_clock_records createManyAndReturn
   */
  export type business_employees_clock_recordsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * The data used to create many business_employees_clock_records.
     */
    data: business_employees_clock_recordsCreateManyInput | business_employees_clock_recordsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_employees_clock_records update
   */
  export type business_employees_clock_recordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * The data needed to update a business_employees_clock_records.
     */
    data: XOR<business_employees_clock_recordsUpdateInput, business_employees_clock_recordsUncheckedUpdateInput>
    /**
     * Choose, which business_employees_clock_records to update.
     */
    where: business_employees_clock_recordsWhereUniqueInput
  }

  /**
   * business_employees_clock_records updateMany
   */
  export type business_employees_clock_recordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_employees_clock_records.
     */
    data: XOR<business_employees_clock_recordsUpdateManyMutationInput, business_employees_clock_recordsUncheckedUpdateManyInput>
    /**
     * Filter which business_employees_clock_records to update
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * Limit how many business_employees_clock_records to update.
     */
    limit?: number
  }

  /**
   * business_employees_clock_records updateManyAndReturn
   */
  export type business_employees_clock_recordsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * The data used to update business_employees_clock_records.
     */
    data: XOR<business_employees_clock_recordsUpdateManyMutationInput, business_employees_clock_recordsUncheckedUpdateManyInput>
    /**
     * Filter which business_employees_clock_records to update
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * Limit how many business_employees_clock_records to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_employees_clock_records upsert
   */
  export type business_employees_clock_recordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * The filter to search for the business_employees_clock_records to update in case it exists.
     */
    where: business_employees_clock_recordsWhereUniqueInput
    /**
     * In case the business_employees_clock_records found by the `where` argument doesn't exist, create a new business_employees_clock_records with this data.
     */
    create: XOR<business_employees_clock_recordsCreateInput, business_employees_clock_recordsUncheckedCreateInput>
    /**
     * In case the business_employees_clock_records was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_employees_clock_recordsUpdateInput, business_employees_clock_recordsUncheckedUpdateInput>
  }

  /**
   * business_employees_clock_records delete
   */
  export type business_employees_clock_recordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    /**
     * Filter which business_employees_clock_records to delete.
     */
    where: business_employees_clock_recordsWhereUniqueInput
  }

  /**
   * business_employees_clock_records deleteMany
   */
  export type business_employees_clock_recordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_employees_clock_records to delete
     */
    where?: business_employees_clock_recordsWhereInput
    /**
     * Limit how many business_employees_clock_records to delete.
     */
    limit?: number
  }

  /**
   * business_employees_clock_records without action
   */
  export type business_employees_clock_recordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
  }


  /**
   * Model business_payment_history
   */

  export type AggregateBusiness_payment_history = {
    _count: Business_payment_historyCountAggregateOutputType | null
    _avg: Business_payment_historyAvgAggregateOutputType | null
    _sum: Business_payment_historySumAggregateOutputType | null
    _min: Business_payment_historyMinAggregateOutputType | null
    _max: Business_payment_historyMaxAggregateOutputType | null
  }

  export type Business_payment_historyAvgAggregateOutputType = {
    amount: number | null
  }

  export type Business_payment_historySumAggregateOutputType = {
    amount: number | null
  }

  export type Business_payment_historyMinAggregateOutputType = {
    id: string | null
    businessId: string | null
    paymentDetailId: string | null
    amount: number | null
    currency: string | null
    type: string | null
    status: string | null
    stripeInvoiceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_payment_historyMaxAggregateOutputType = {
    id: string | null
    businessId: string | null
    paymentDetailId: string | null
    amount: number | null
    currency: string | null
    type: string | null
    status: string | null
    stripeInvoiceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_payment_historyCountAggregateOutputType = {
    id: number
    businessId: number
    paymentDetailId: number
    amount: number
    currency: number
    type: number
    status: number
    stripeInvoiceId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_payment_historyAvgAggregateInputType = {
    amount?: true
  }

  export type Business_payment_historySumAggregateInputType = {
    amount?: true
  }

  export type Business_payment_historyMinAggregateInputType = {
    id?: true
    businessId?: true
    paymentDetailId?: true
    amount?: true
    currency?: true
    type?: true
    status?: true
    stripeInvoiceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_payment_historyMaxAggregateInputType = {
    id?: true
    businessId?: true
    paymentDetailId?: true
    amount?: true
    currency?: true
    type?: true
    status?: true
    stripeInvoiceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_payment_historyCountAggregateInputType = {
    id?: true
    businessId?: true
    paymentDetailId?: true
    amount?: true
    currency?: true
    type?: true
    status?: true
    stripeInvoiceId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_payment_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_payment_history to aggregate.
     */
    where?: business_payment_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_payment_histories to fetch.
     */
    orderBy?: business_payment_historyOrderByWithRelationInput | business_payment_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_payment_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_payment_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_payment_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_payment_histories
    **/
    _count?: true | Business_payment_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Business_payment_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Business_payment_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_payment_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_payment_historyMaxAggregateInputType
  }

  export type GetBusiness_payment_historyAggregateType<T extends Business_payment_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_payment_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_payment_history[P]>
      : GetScalarType<T[P], AggregateBusiness_payment_history[P]>
  }




  export type business_payment_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_payment_historyWhereInput
    orderBy?: business_payment_historyOrderByWithAggregationInput | business_payment_historyOrderByWithAggregationInput[]
    by: Business_payment_historyScalarFieldEnum[] | Business_payment_historyScalarFieldEnum
    having?: business_payment_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_payment_historyCountAggregateInputType | true
    _avg?: Business_payment_historyAvgAggregateInputType
    _sum?: Business_payment_historySumAggregateInputType
    _min?: Business_payment_historyMinAggregateInputType
    _max?: Business_payment_historyMaxAggregateInputType
  }

  export type Business_payment_historyGroupByOutputType = {
    id: string
    businessId: string
    paymentDetailId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId: string | null
    createdAt: Date
    updatedAt: Date
    _count: Business_payment_historyCountAggregateOutputType | null
    _avg: Business_payment_historyAvgAggregateOutputType | null
    _sum: Business_payment_historySumAggregateOutputType | null
    _min: Business_payment_historyMinAggregateOutputType | null
    _max: Business_payment_historyMaxAggregateOutputType | null
  }

  type GetBusiness_payment_historyGroupByPayload<T extends business_payment_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_payment_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_payment_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_payment_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Business_payment_historyGroupByOutputType[P]>
        }
      >
    >


  export type business_payment_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessId?: boolean
    paymentDetailId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    stripeInvoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_payment_history_details?: boolean | BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_payment_history"]>

  export type business_payment_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessId?: boolean
    paymentDetailId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    stripeInvoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_payment_history_details?: boolean | BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_payment_history"]>

  export type business_payment_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessId?: boolean
    paymentDetailId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    stripeInvoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_payment_history_details?: boolean | BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_payment_history"]>

  export type business_payment_historySelectScalar = {
    id?: boolean
    businessId?: boolean
    paymentDetailId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    stripeInvoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_payment_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "businessId" | "paymentDetailId" | "amount" | "currency" | "type" | "status" | "stripeInvoiceId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_payment_history"]>
  export type business_payment_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_payment_history_details?: boolean | BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>
  }
  export type business_payment_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_payment_history_details?: boolean | BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>
  }
  export type business_payment_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_payment_history_details?: boolean | BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>
  }

  export type $business_payment_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_payment_history"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_payment_history_details: Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      businessId: string
      paymentDetailId: string
      amount: number
      currency: string
      type: string
      status: string
      stripeInvoiceId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_payment_history"]>
    composites: {}
  }

  type business_payment_historyGetPayload<S extends boolean | null | undefined | business_payment_historyDefaultArgs> = $Result.GetResult<Prisma.$business_payment_historyPayload, S>

  type business_payment_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_payment_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_payment_historyCountAggregateInputType | true
    }

  export interface business_payment_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_payment_history'], meta: { name: 'business_payment_history' } }
    /**
     * Find zero or one Business_payment_history that matches the filter.
     * @param {business_payment_historyFindUniqueArgs} args - Arguments to find a Business_payment_history
     * @example
     * // Get one Business_payment_history
     * const business_payment_history = await prisma.business_payment_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_payment_historyFindUniqueArgs>(args: SelectSubset<T, business_payment_historyFindUniqueArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_payment_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_payment_historyFindUniqueOrThrowArgs} args - Arguments to find a Business_payment_history
     * @example
     * // Get one Business_payment_history
     * const business_payment_history = await prisma.business_payment_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_payment_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, business_payment_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_payment_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_payment_historyFindFirstArgs} args - Arguments to find a Business_payment_history
     * @example
     * // Get one Business_payment_history
     * const business_payment_history = await prisma.business_payment_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_payment_historyFindFirstArgs>(args?: SelectSubset<T, business_payment_historyFindFirstArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_payment_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_payment_historyFindFirstOrThrowArgs} args - Arguments to find a Business_payment_history
     * @example
     * // Get one Business_payment_history
     * const business_payment_history = await prisma.business_payment_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_payment_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, business_payment_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_payment_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_payment_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_payment_histories
     * const business_payment_histories = await prisma.business_payment_history.findMany()
     * 
     * // Get first 10 Business_payment_histories
     * const business_payment_histories = await prisma.business_payment_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_payment_historyWithIdOnly = await prisma.business_payment_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_payment_historyFindManyArgs>(args?: SelectSubset<T, business_payment_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_payment_history.
     * @param {business_payment_historyCreateArgs} args - Arguments to create a Business_payment_history.
     * @example
     * // Create one Business_payment_history
     * const Business_payment_history = await prisma.business_payment_history.create({
     *   data: {
     *     // ... data to create a Business_payment_history
     *   }
     * })
     * 
     */
    create<T extends business_payment_historyCreateArgs>(args: SelectSubset<T, business_payment_historyCreateArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_payment_histories.
     * @param {business_payment_historyCreateManyArgs} args - Arguments to create many Business_payment_histories.
     * @example
     * // Create many Business_payment_histories
     * const business_payment_history = await prisma.business_payment_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_payment_historyCreateManyArgs>(args?: SelectSubset<T, business_payment_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_payment_histories and returns the data saved in the database.
     * @param {business_payment_historyCreateManyAndReturnArgs} args - Arguments to create many Business_payment_histories.
     * @example
     * // Create many Business_payment_histories
     * const business_payment_history = await prisma.business_payment_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_payment_histories and only return the `id`
     * const business_payment_historyWithIdOnly = await prisma.business_payment_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_payment_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, business_payment_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_payment_history.
     * @param {business_payment_historyDeleteArgs} args - Arguments to delete one Business_payment_history.
     * @example
     * // Delete one Business_payment_history
     * const Business_payment_history = await prisma.business_payment_history.delete({
     *   where: {
     *     // ... filter to delete one Business_payment_history
     *   }
     * })
     * 
     */
    delete<T extends business_payment_historyDeleteArgs>(args: SelectSubset<T, business_payment_historyDeleteArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_payment_history.
     * @param {business_payment_historyUpdateArgs} args - Arguments to update one Business_payment_history.
     * @example
     * // Update one Business_payment_history
     * const business_payment_history = await prisma.business_payment_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_payment_historyUpdateArgs>(args: SelectSubset<T, business_payment_historyUpdateArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_payment_histories.
     * @param {business_payment_historyDeleteManyArgs} args - Arguments to filter Business_payment_histories to delete.
     * @example
     * // Delete a few Business_payment_histories
     * const { count } = await prisma.business_payment_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_payment_historyDeleteManyArgs>(args?: SelectSubset<T, business_payment_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_payment_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_payment_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_payment_histories
     * const business_payment_history = await prisma.business_payment_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_payment_historyUpdateManyArgs>(args: SelectSubset<T, business_payment_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_payment_histories and returns the data updated in the database.
     * @param {business_payment_historyUpdateManyAndReturnArgs} args - Arguments to update many Business_payment_histories.
     * @example
     * // Update many Business_payment_histories
     * const business_payment_history = await prisma.business_payment_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_payment_histories and only return the `id`
     * const business_payment_historyWithIdOnly = await prisma.business_payment_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_payment_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, business_payment_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_payment_history.
     * @param {business_payment_historyUpsertArgs} args - Arguments to update or create a Business_payment_history.
     * @example
     * // Update or create a Business_payment_history
     * const business_payment_history = await prisma.business_payment_history.upsert({
     *   create: {
     *     // ... data to create a Business_payment_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_payment_history we want to update
     *   }
     * })
     */
    upsert<T extends business_payment_historyUpsertArgs>(args: SelectSubset<T, business_payment_historyUpsertArgs<ExtArgs>>): Prisma__business_payment_historyClient<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_payment_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_payment_historyCountArgs} args - Arguments to filter Business_payment_histories to count.
     * @example
     * // Count the number of Business_payment_histories
     * const count = await prisma.business_payment_history.count({
     *   where: {
     *     // ... the filter for the Business_payment_histories we want to count
     *   }
     * })
    **/
    count<T extends business_payment_historyCountArgs>(
      args?: Subset<T, business_payment_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_payment_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_payment_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_payment_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_payment_historyAggregateArgs>(args: Subset<T, Business_payment_historyAggregateArgs>): Prisma.PrismaPromise<GetBusiness_payment_historyAggregateType<T>>

    /**
     * Group by Business_payment_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_payment_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_payment_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_payment_historyGroupByArgs['orderBy'] }
        : { orderBy?: business_payment_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_payment_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_payment_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_payment_history model
   */
  readonly fields: business_payment_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_payment_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_payment_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_payment_history_details<T extends BusinessPaymentHistoryDetailDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessPaymentHistoryDetailDefaultArgs<ExtArgs>>): Prisma__BusinessPaymentHistoryDetailClient<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_payment_history model
   */
  interface business_payment_historyFieldRefs {
    readonly id: FieldRef<"business_payment_history", 'String'>
    readonly businessId: FieldRef<"business_payment_history", 'String'>
    readonly paymentDetailId: FieldRef<"business_payment_history", 'String'>
    readonly amount: FieldRef<"business_payment_history", 'Float'>
    readonly currency: FieldRef<"business_payment_history", 'String'>
    readonly type: FieldRef<"business_payment_history", 'String'>
    readonly status: FieldRef<"business_payment_history", 'String'>
    readonly stripeInvoiceId: FieldRef<"business_payment_history", 'String'>
    readonly createdAt: FieldRef<"business_payment_history", 'DateTime'>
    readonly updatedAt: FieldRef<"business_payment_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_payment_history findUnique
   */
  export type business_payment_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * Filter, which business_payment_history to fetch.
     */
    where: business_payment_historyWhereUniqueInput
  }

  /**
   * business_payment_history findUniqueOrThrow
   */
  export type business_payment_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * Filter, which business_payment_history to fetch.
     */
    where: business_payment_historyWhereUniqueInput
  }

  /**
   * business_payment_history findFirst
   */
  export type business_payment_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * Filter, which business_payment_history to fetch.
     */
    where?: business_payment_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_payment_histories to fetch.
     */
    orderBy?: business_payment_historyOrderByWithRelationInput | business_payment_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_payment_histories.
     */
    cursor?: business_payment_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_payment_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_payment_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_payment_histories.
     */
    distinct?: Business_payment_historyScalarFieldEnum | Business_payment_historyScalarFieldEnum[]
  }

  /**
   * business_payment_history findFirstOrThrow
   */
  export type business_payment_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * Filter, which business_payment_history to fetch.
     */
    where?: business_payment_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_payment_histories to fetch.
     */
    orderBy?: business_payment_historyOrderByWithRelationInput | business_payment_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_payment_histories.
     */
    cursor?: business_payment_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_payment_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_payment_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_payment_histories.
     */
    distinct?: Business_payment_historyScalarFieldEnum | Business_payment_historyScalarFieldEnum[]
  }

  /**
   * business_payment_history findMany
   */
  export type business_payment_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * Filter, which business_payment_histories to fetch.
     */
    where?: business_payment_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_payment_histories to fetch.
     */
    orderBy?: business_payment_historyOrderByWithRelationInput | business_payment_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_payment_histories.
     */
    cursor?: business_payment_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_payment_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_payment_histories.
     */
    skip?: number
    distinct?: Business_payment_historyScalarFieldEnum | Business_payment_historyScalarFieldEnum[]
  }

  /**
   * business_payment_history create
   */
  export type business_payment_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a business_payment_history.
     */
    data: XOR<business_payment_historyCreateInput, business_payment_historyUncheckedCreateInput>
  }

  /**
   * business_payment_history createMany
   */
  export type business_payment_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_payment_histories.
     */
    data: business_payment_historyCreateManyInput | business_payment_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_payment_history createManyAndReturn
   */
  export type business_payment_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * The data used to create many business_payment_histories.
     */
    data: business_payment_historyCreateManyInput | business_payment_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_payment_history update
   */
  export type business_payment_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a business_payment_history.
     */
    data: XOR<business_payment_historyUpdateInput, business_payment_historyUncheckedUpdateInput>
    /**
     * Choose, which business_payment_history to update.
     */
    where: business_payment_historyWhereUniqueInput
  }

  /**
   * business_payment_history updateMany
   */
  export type business_payment_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_payment_histories.
     */
    data: XOR<business_payment_historyUpdateManyMutationInput, business_payment_historyUncheckedUpdateManyInput>
    /**
     * Filter which business_payment_histories to update
     */
    where?: business_payment_historyWhereInput
    /**
     * Limit how many business_payment_histories to update.
     */
    limit?: number
  }

  /**
   * business_payment_history updateManyAndReturn
   */
  export type business_payment_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * The data used to update business_payment_histories.
     */
    data: XOR<business_payment_historyUpdateManyMutationInput, business_payment_historyUncheckedUpdateManyInput>
    /**
     * Filter which business_payment_histories to update
     */
    where?: business_payment_historyWhereInput
    /**
     * Limit how many business_payment_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_payment_history upsert
   */
  export type business_payment_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the business_payment_history to update in case it exists.
     */
    where: business_payment_historyWhereUniqueInput
    /**
     * In case the business_payment_history found by the `where` argument doesn't exist, create a new business_payment_history with this data.
     */
    create: XOR<business_payment_historyCreateInput, business_payment_historyUncheckedCreateInput>
    /**
     * In case the business_payment_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_payment_historyUpdateInput, business_payment_historyUncheckedUpdateInput>
  }

  /**
   * business_payment_history delete
   */
  export type business_payment_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    /**
     * Filter which business_payment_history to delete.
     */
    where: business_payment_historyWhereUniqueInput
  }

  /**
   * business_payment_history deleteMany
   */
  export type business_payment_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_payment_histories to delete
     */
    where?: business_payment_historyWhereInput
    /**
     * Limit how many business_payment_histories to delete.
     */
    limit?: number
  }

  /**
   * business_payment_history without action
   */
  export type business_payment_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
  }


  /**
   * Model business_phone_ids
   */

  export type AggregateBusiness_phone_ids = {
    _count: Business_phone_idsCountAggregateOutputType | null
    _min: Business_phone_idsMinAggregateOutputType | null
    _max: Business_phone_idsMaxAggregateOutputType | null
  }

  export type Business_phone_idsMinAggregateOutputType = {
    id: string | null
    title: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_phone_idsMaxAggregateOutputType = {
    id: string | null
    title: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_phone_idsCountAggregateOutputType = {
    id: number
    title: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_phone_idsMinAggregateInputType = {
    id?: true
    title?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_phone_idsMaxAggregateInputType = {
    id?: true
    title?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_phone_idsCountAggregateInputType = {
    id?: true
    title?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_phone_idsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_phone_ids to aggregate.
     */
    where?: business_phone_idsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_phone_ids to fetch.
     */
    orderBy?: business_phone_idsOrderByWithRelationInput | business_phone_idsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_phone_idsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_phone_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_phone_ids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_phone_ids
    **/
    _count?: true | Business_phone_idsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_phone_idsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_phone_idsMaxAggregateInputType
  }

  export type GetBusiness_phone_idsAggregateType<T extends Business_phone_idsAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_phone_ids]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_phone_ids[P]>
      : GetScalarType<T[P], AggregateBusiness_phone_ids[P]>
  }




  export type business_phone_idsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_phone_idsWhereInput
    orderBy?: business_phone_idsOrderByWithAggregationInput | business_phone_idsOrderByWithAggregationInput[]
    by: Business_phone_idsScalarFieldEnum[] | Business_phone_idsScalarFieldEnum
    having?: business_phone_idsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_phone_idsCountAggregateInputType | true
    _min?: Business_phone_idsMinAggregateInputType
    _max?: Business_phone_idsMaxAggregateInputType
  }

  export type Business_phone_idsGroupByOutputType = {
    id: string
    title: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Business_phone_idsCountAggregateOutputType | null
    _min: Business_phone_idsMinAggregateOutputType | null
    _max: Business_phone_idsMaxAggregateOutputType | null
  }

  type GetBusiness_phone_idsGroupByPayload<T extends business_phone_idsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_phone_idsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_phone_idsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_phone_idsGroupByOutputType[P]>
            : GetScalarType<T[P], Business_phone_idsGroupByOutputType[P]>
        }
      >
    >


  export type business_phone_idsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_phone_ids"]>

  export type business_phone_idsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_phone_ids"]>

  export type business_phone_idsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_phone_ids"]>

  export type business_phone_idsSelectScalar = {
    id?: boolean
    title?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_phone_idsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_phone_ids"]>
  export type business_phone_idsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_phone_idsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_phone_idsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_phone_idsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_phone_ids"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_phone_ids"]>
    composites: {}
  }

  type business_phone_idsGetPayload<S extends boolean | null | undefined | business_phone_idsDefaultArgs> = $Result.GetResult<Prisma.$business_phone_idsPayload, S>

  type business_phone_idsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_phone_idsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_phone_idsCountAggregateInputType | true
    }

  export interface business_phone_idsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_phone_ids'], meta: { name: 'business_phone_ids' } }
    /**
     * Find zero or one Business_phone_ids that matches the filter.
     * @param {business_phone_idsFindUniqueArgs} args - Arguments to find a Business_phone_ids
     * @example
     * // Get one Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_phone_idsFindUniqueArgs>(args: SelectSubset<T, business_phone_idsFindUniqueArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_phone_ids that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_phone_idsFindUniqueOrThrowArgs} args - Arguments to find a Business_phone_ids
     * @example
     * // Get one Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_phone_idsFindUniqueOrThrowArgs>(args: SelectSubset<T, business_phone_idsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_phone_ids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_phone_idsFindFirstArgs} args - Arguments to find a Business_phone_ids
     * @example
     * // Get one Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_phone_idsFindFirstArgs>(args?: SelectSubset<T, business_phone_idsFindFirstArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_phone_ids that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_phone_idsFindFirstOrThrowArgs} args - Arguments to find a Business_phone_ids
     * @example
     * // Get one Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_phone_idsFindFirstOrThrowArgs>(args?: SelectSubset<T, business_phone_idsFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_phone_ids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_phone_idsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.findMany()
     * 
     * // Get first 10 Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_phone_idsWithIdOnly = await prisma.business_phone_ids.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_phone_idsFindManyArgs>(args?: SelectSubset<T, business_phone_idsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_phone_ids.
     * @param {business_phone_idsCreateArgs} args - Arguments to create a Business_phone_ids.
     * @example
     * // Create one Business_phone_ids
     * const Business_phone_ids = await prisma.business_phone_ids.create({
     *   data: {
     *     // ... data to create a Business_phone_ids
     *   }
     * })
     * 
     */
    create<T extends business_phone_idsCreateArgs>(args: SelectSubset<T, business_phone_idsCreateArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_phone_ids.
     * @param {business_phone_idsCreateManyArgs} args - Arguments to create many Business_phone_ids.
     * @example
     * // Create many Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_phone_idsCreateManyArgs>(args?: SelectSubset<T, business_phone_idsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_phone_ids and returns the data saved in the database.
     * @param {business_phone_idsCreateManyAndReturnArgs} args - Arguments to create many Business_phone_ids.
     * @example
     * // Create many Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_phone_ids and only return the `id`
     * const business_phone_idsWithIdOnly = await prisma.business_phone_ids.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_phone_idsCreateManyAndReturnArgs>(args?: SelectSubset<T, business_phone_idsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_phone_ids.
     * @param {business_phone_idsDeleteArgs} args - Arguments to delete one Business_phone_ids.
     * @example
     * // Delete one Business_phone_ids
     * const Business_phone_ids = await prisma.business_phone_ids.delete({
     *   where: {
     *     // ... filter to delete one Business_phone_ids
     *   }
     * })
     * 
     */
    delete<T extends business_phone_idsDeleteArgs>(args: SelectSubset<T, business_phone_idsDeleteArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_phone_ids.
     * @param {business_phone_idsUpdateArgs} args - Arguments to update one Business_phone_ids.
     * @example
     * // Update one Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_phone_idsUpdateArgs>(args: SelectSubset<T, business_phone_idsUpdateArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_phone_ids.
     * @param {business_phone_idsDeleteManyArgs} args - Arguments to filter Business_phone_ids to delete.
     * @example
     * // Delete a few Business_phone_ids
     * const { count } = await prisma.business_phone_ids.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_phone_idsDeleteManyArgs>(args?: SelectSubset<T, business_phone_idsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_phone_ids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_phone_idsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_phone_idsUpdateManyArgs>(args: SelectSubset<T, business_phone_idsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_phone_ids and returns the data updated in the database.
     * @param {business_phone_idsUpdateManyAndReturnArgs} args - Arguments to update many Business_phone_ids.
     * @example
     * // Update many Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_phone_ids and only return the `id`
     * const business_phone_idsWithIdOnly = await prisma.business_phone_ids.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_phone_idsUpdateManyAndReturnArgs>(args: SelectSubset<T, business_phone_idsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_phone_ids.
     * @param {business_phone_idsUpsertArgs} args - Arguments to update or create a Business_phone_ids.
     * @example
     * // Update or create a Business_phone_ids
     * const business_phone_ids = await prisma.business_phone_ids.upsert({
     *   create: {
     *     // ... data to create a Business_phone_ids
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_phone_ids we want to update
     *   }
     * })
     */
    upsert<T extends business_phone_idsUpsertArgs>(args: SelectSubset<T, business_phone_idsUpsertArgs<ExtArgs>>): Prisma__business_phone_idsClient<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_phone_ids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_phone_idsCountArgs} args - Arguments to filter Business_phone_ids to count.
     * @example
     * // Count the number of Business_phone_ids
     * const count = await prisma.business_phone_ids.count({
     *   where: {
     *     // ... the filter for the Business_phone_ids we want to count
     *   }
     * })
    **/
    count<T extends business_phone_idsCountArgs>(
      args?: Subset<T, business_phone_idsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_phone_idsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_phone_ids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_phone_idsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_phone_idsAggregateArgs>(args: Subset<T, Business_phone_idsAggregateArgs>): Prisma.PrismaPromise<GetBusiness_phone_idsAggregateType<T>>

    /**
     * Group by Business_phone_ids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_phone_idsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_phone_idsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_phone_idsGroupByArgs['orderBy'] }
        : { orderBy?: business_phone_idsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_phone_idsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_phone_idsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_phone_ids model
   */
  readonly fields: business_phone_idsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_phone_ids.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_phone_idsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_phone_ids model
   */
  interface business_phone_idsFieldRefs {
    readonly id: FieldRef<"business_phone_ids", 'String'>
    readonly title: FieldRef<"business_phone_ids", 'String'>
    readonly businessId: FieldRef<"business_phone_ids", 'String'>
    readonly createdAt: FieldRef<"business_phone_ids", 'DateTime'>
    readonly updatedAt: FieldRef<"business_phone_ids", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_phone_ids findUnique
   */
  export type business_phone_idsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * Filter, which business_phone_ids to fetch.
     */
    where: business_phone_idsWhereUniqueInput
  }

  /**
   * business_phone_ids findUniqueOrThrow
   */
  export type business_phone_idsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * Filter, which business_phone_ids to fetch.
     */
    where: business_phone_idsWhereUniqueInput
  }

  /**
   * business_phone_ids findFirst
   */
  export type business_phone_idsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * Filter, which business_phone_ids to fetch.
     */
    where?: business_phone_idsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_phone_ids to fetch.
     */
    orderBy?: business_phone_idsOrderByWithRelationInput | business_phone_idsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_phone_ids.
     */
    cursor?: business_phone_idsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_phone_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_phone_ids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_phone_ids.
     */
    distinct?: Business_phone_idsScalarFieldEnum | Business_phone_idsScalarFieldEnum[]
  }

  /**
   * business_phone_ids findFirstOrThrow
   */
  export type business_phone_idsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * Filter, which business_phone_ids to fetch.
     */
    where?: business_phone_idsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_phone_ids to fetch.
     */
    orderBy?: business_phone_idsOrderByWithRelationInput | business_phone_idsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_phone_ids.
     */
    cursor?: business_phone_idsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_phone_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_phone_ids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_phone_ids.
     */
    distinct?: Business_phone_idsScalarFieldEnum | Business_phone_idsScalarFieldEnum[]
  }

  /**
   * business_phone_ids findMany
   */
  export type business_phone_idsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * Filter, which business_phone_ids to fetch.
     */
    where?: business_phone_idsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_phone_ids to fetch.
     */
    orderBy?: business_phone_idsOrderByWithRelationInput | business_phone_idsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_phone_ids.
     */
    cursor?: business_phone_idsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_phone_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_phone_ids.
     */
    skip?: number
    distinct?: Business_phone_idsScalarFieldEnum | Business_phone_idsScalarFieldEnum[]
  }

  /**
   * business_phone_ids create
   */
  export type business_phone_idsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * The data needed to create a business_phone_ids.
     */
    data: XOR<business_phone_idsCreateInput, business_phone_idsUncheckedCreateInput>
  }

  /**
   * business_phone_ids createMany
   */
  export type business_phone_idsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_phone_ids.
     */
    data: business_phone_idsCreateManyInput | business_phone_idsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_phone_ids createManyAndReturn
   */
  export type business_phone_idsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * The data used to create many business_phone_ids.
     */
    data: business_phone_idsCreateManyInput | business_phone_idsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_phone_ids update
   */
  export type business_phone_idsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * The data needed to update a business_phone_ids.
     */
    data: XOR<business_phone_idsUpdateInput, business_phone_idsUncheckedUpdateInput>
    /**
     * Choose, which business_phone_ids to update.
     */
    where: business_phone_idsWhereUniqueInput
  }

  /**
   * business_phone_ids updateMany
   */
  export type business_phone_idsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_phone_ids.
     */
    data: XOR<business_phone_idsUpdateManyMutationInput, business_phone_idsUncheckedUpdateManyInput>
    /**
     * Filter which business_phone_ids to update
     */
    where?: business_phone_idsWhereInput
    /**
     * Limit how many business_phone_ids to update.
     */
    limit?: number
  }

  /**
   * business_phone_ids updateManyAndReturn
   */
  export type business_phone_idsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * The data used to update business_phone_ids.
     */
    data: XOR<business_phone_idsUpdateManyMutationInput, business_phone_idsUncheckedUpdateManyInput>
    /**
     * Filter which business_phone_ids to update
     */
    where?: business_phone_idsWhereInput
    /**
     * Limit how many business_phone_ids to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_phone_ids upsert
   */
  export type business_phone_idsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * The filter to search for the business_phone_ids to update in case it exists.
     */
    where: business_phone_idsWhereUniqueInput
    /**
     * In case the business_phone_ids found by the `where` argument doesn't exist, create a new business_phone_ids with this data.
     */
    create: XOR<business_phone_idsCreateInput, business_phone_idsUncheckedCreateInput>
    /**
     * In case the business_phone_ids was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_phone_idsUpdateInput, business_phone_idsUncheckedUpdateInput>
  }

  /**
   * business_phone_ids delete
   */
  export type business_phone_idsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    /**
     * Filter which business_phone_ids to delete.
     */
    where: business_phone_idsWhereUniqueInput
  }

  /**
   * business_phone_ids deleteMany
   */
  export type business_phone_idsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_phone_ids to delete
     */
    where?: business_phone_idsWhereInput
    /**
     * Limit how many business_phone_ids to delete.
     */
    limit?: number
  }

  /**
   * business_phone_ids without action
   */
  export type business_phone_idsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
  }


  /**
   * Model business_supplier_information
   */

  export type AggregateBusiness_supplier_information = {
    _count: Business_supplier_informationCountAggregateOutputType | null
    _min: Business_supplier_informationMinAggregateOutputType | null
    _max: Business_supplier_informationMaxAggregateOutputType | null
  }

  export type Business_supplier_informationMinAggregateOutputType = {
    id: string | null
    inUse: boolean | null
    title: string | null
    description: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_supplier_informationMaxAggregateOutputType = {
    id: string | null
    inUse: boolean | null
    title: string | null
    description: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_supplier_informationCountAggregateOutputType = {
    id: number
    inUse: number
    title: number
    description: number
    schedule: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_supplier_informationMinAggregateInputType = {
    id?: true
    inUse?: true
    title?: true
    description?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_supplier_informationMaxAggregateInputType = {
    id?: true
    inUse?: true
    title?: true
    description?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_supplier_informationCountAggregateInputType = {
    id?: true
    inUse?: true
    title?: true
    description?: true
    schedule?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_supplier_informationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_supplier_information to aggregate.
     */
    where?: business_supplier_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supplier_informations to fetch.
     */
    orderBy?: business_supplier_informationOrderByWithRelationInput | business_supplier_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_supplier_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supplier_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supplier_informations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_supplier_informations
    **/
    _count?: true | Business_supplier_informationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_supplier_informationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_supplier_informationMaxAggregateInputType
  }

  export type GetBusiness_supplier_informationAggregateType<T extends Business_supplier_informationAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_supplier_information]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_supplier_information[P]>
      : GetScalarType<T[P], AggregateBusiness_supplier_information[P]>
  }




  export type business_supplier_informationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_supplier_informationWhereInput
    orderBy?: business_supplier_informationOrderByWithAggregationInput | business_supplier_informationOrderByWithAggregationInput[]
    by: Business_supplier_informationScalarFieldEnum[] | Business_supplier_informationScalarFieldEnum
    having?: business_supplier_informationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_supplier_informationCountAggregateInputType | true
    _min?: Business_supplier_informationMinAggregateInputType
    _max?: Business_supplier_informationMaxAggregateInputType
  }

  export type Business_supplier_informationGroupByOutputType = {
    id: string
    inUse: boolean
    title: string
    description: string | null
    schedule: JsonValue | null
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Business_supplier_informationCountAggregateOutputType | null
    _min: Business_supplier_informationMinAggregateOutputType | null
    _max: Business_supplier_informationMaxAggregateOutputType | null
  }

  type GetBusiness_supplier_informationGroupByPayload<T extends business_supplier_informationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_supplier_informationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_supplier_informationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_supplier_informationGroupByOutputType[P]>
            : GetScalarType<T[P], Business_supplier_informationGroupByOutputType[P]>
        }
      >
    >


  export type business_supplier_informationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inUse?: boolean
    title?: boolean
    description?: boolean
    schedule?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_pictures?: boolean | business_supplier_information$business_supplier_picturesArgs<ExtArgs>
    _count?: boolean | Business_supplier_informationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supplier_information"]>

  export type business_supplier_informationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inUse?: boolean
    title?: boolean
    description?: boolean
    schedule?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supplier_information"]>

  export type business_supplier_informationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inUse?: boolean
    title?: boolean
    description?: boolean
    schedule?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supplier_information"]>

  export type business_supplier_informationSelectScalar = {
    id?: boolean
    inUse?: boolean
    title?: boolean
    description?: boolean
    schedule?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_supplier_informationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "inUse" | "title" | "description" | "schedule" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_supplier_information"]>
  export type business_supplier_informationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    business_supplier_pictures?: boolean | business_supplier_information$business_supplier_picturesArgs<ExtArgs>
    _count?: boolean | Business_supplier_informationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type business_supplier_informationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_supplier_informationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_supplier_informationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_supplier_information"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      business_supplier_pictures: Prisma.$BusinessSupplierPicturePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      inUse: boolean
      title: string
      description: string | null
      schedule: Prisma.JsonValue | null
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_supplier_information"]>
    composites: {}
  }

  type business_supplier_informationGetPayload<S extends boolean | null | undefined | business_supplier_informationDefaultArgs> = $Result.GetResult<Prisma.$business_supplier_informationPayload, S>

  type business_supplier_informationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_supplier_informationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_supplier_informationCountAggregateInputType | true
    }

  export interface business_supplier_informationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_supplier_information'], meta: { name: 'business_supplier_information' } }
    /**
     * Find zero or one Business_supplier_information that matches the filter.
     * @param {business_supplier_informationFindUniqueArgs} args - Arguments to find a Business_supplier_information
     * @example
     * // Get one Business_supplier_information
     * const business_supplier_information = await prisma.business_supplier_information.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_supplier_informationFindUniqueArgs>(args: SelectSubset<T, business_supplier_informationFindUniqueArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_supplier_information that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_supplier_informationFindUniqueOrThrowArgs} args - Arguments to find a Business_supplier_information
     * @example
     * // Get one Business_supplier_information
     * const business_supplier_information = await prisma.business_supplier_information.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_supplier_informationFindUniqueOrThrowArgs>(args: SelectSubset<T, business_supplier_informationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_supplier_information that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supplier_informationFindFirstArgs} args - Arguments to find a Business_supplier_information
     * @example
     * // Get one Business_supplier_information
     * const business_supplier_information = await prisma.business_supplier_information.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_supplier_informationFindFirstArgs>(args?: SelectSubset<T, business_supplier_informationFindFirstArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_supplier_information that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supplier_informationFindFirstOrThrowArgs} args - Arguments to find a Business_supplier_information
     * @example
     * // Get one Business_supplier_information
     * const business_supplier_information = await prisma.business_supplier_information.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_supplier_informationFindFirstOrThrowArgs>(args?: SelectSubset<T, business_supplier_informationFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_supplier_informations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supplier_informationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_supplier_informations
     * const business_supplier_informations = await prisma.business_supplier_information.findMany()
     * 
     * // Get first 10 Business_supplier_informations
     * const business_supplier_informations = await prisma.business_supplier_information.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_supplier_informationWithIdOnly = await prisma.business_supplier_information.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_supplier_informationFindManyArgs>(args?: SelectSubset<T, business_supplier_informationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_supplier_information.
     * @param {business_supplier_informationCreateArgs} args - Arguments to create a Business_supplier_information.
     * @example
     * // Create one Business_supplier_information
     * const Business_supplier_information = await prisma.business_supplier_information.create({
     *   data: {
     *     // ... data to create a Business_supplier_information
     *   }
     * })
     * 
     */
    create<T extends business_supplier_informationCreateArgs>(args: SelectSubset<T, business_supplier_informationCreateArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_supplier_informations.
     * @param {business_supplier_informationCreateManyArgs} args - Arguments to create many Business_supplier_informations.
     * @example
     * // Create many Business_supplier_informations
     * const business_supplier_information = await prisma.business_supplier_information.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_supplier_informationCreateManyArgs>(args?: SelectSubset<T, business_supplier_informationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_supplier_informations and returns the data saved in the database.
     * @param {business_supplier_informationCreateManyAndReturnArgs} args - Arguments to create many Business_supplier_informations.
     * @example
     * // Create many Business_supplier_informations
     * const business_supplier_information = await prisma.business_supplier_information.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_supplier_informations and only return the `id`
     * const business_supplier_informationWithIdOnly = await prisma.business_supplier_information.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_supplier_informationCreateManyAndReturnArgs>(args?: SelectSubset<T, business_supplier_informationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_supplier_information.
     * @param {business_supplier_informationDeleteArgs} args - Arguments to delete one Business_supplier_information.
     * @example
     * // Delete one Business_supplier_information
     * const Business_supplier_information = await prisma.business_supplier_information.delete({
     *   where: {
     *     // ... filter to delete one Business_supplier_information
     *   }
     * })
     * 
     */
    delete<T extends business_supplier_informationDeleteArgs>(args: SelectSubset<T, business_supplier_informationDeleteArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_supplier_information.
     * @param {business_supplier_informationUpdateArgs} args - Arguments to update one Business_supplier_information.
     * @example
     * // Update one Business_supplier_information
     * const business_supplier_information = await prisma.business_supplier_information.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_supplier_informationUpdateArgs>(args: SelectSubset<T, business_supplier_informationUpdateArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_supplier_informations.
     * @param {business_supplier_informationDeleteManyArgs} args - Arguments to filter Business_supplier_informations to delete.
     * @example
     * // Delete a few Business_supplier_informations
     * const { count } = await prisma.business_supplier_information.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_supplier_informationDeleteManyArgs>(args?: SelectSubset<T, business_supplier_informationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_supplier_informations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supplier_informationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_supplier_informations
     * const business_supplier_information = await prisma.business_supplier_information.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_supplier_informationUpdateManyArgs>(args: SelectSubset<T, business_supplier_informationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_supplier_informations and returns the data updated in the database.
     * @param {business_supplier_informationUpdateManyAndReturnArgs} args - Arguments to update many Business_supplier_informations.
     * @example
     * // Update many Business_supplier_informations
     * const business_supplier_information = await prisma.business_supplier_information.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_supplier_informations and only return the `id`
     * const business_supplier_informationWithIdOnly = await prisma.business_supplier_information.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_supplier_informationUpdateManyAndReturnArgs>(args: SelectSubset<T, business_supplier_informationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_supplier_information.
     * @param {business_supplier_informationUpsertArgs} args - Arguments to update or create a Business_supplier_information.
     * @example
     * // Update or create a Business_supplier_information
     * const business_supplier_information = await prisma.business_supplier_information.upsert({
     *   create: {
     *     // ... data to create a Business_supplier_information
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_supplier_information we want to update
     *   }
     * })
     */
    upsert<T extends business_supplier_informationUpsertArgs>(args: SelectSubset<T, business_supplier_informationUpsertArgs<ExtArgs>>): Prisma__business_supplier_informationClient<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_supplier_informations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supplier_informationCountArgs} args - Arguments to filter Business_supplier_informations to count.
     * @example
     * // Count the number of Business_supplier_informations
     * const count = await prisma.business_supplier_information.count({
     *   where: {
     *     // ... the filter for the Business_supplier_informations we want to count
     *   }
     * })
    **/
    count<T extends business_supplier_informationCountArgs>(
      args?: Subset<T, business_supplier_informationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_supplier_informationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_supplier_information.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_supplier_informationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_supplier_informationAggregateArgs>(args: Subset<T, Business_supplier_informationAggregateArgs>): Prisma.PrismaPromise<GetBusiness_supplier_informationAggregateType<T>>

    /**
     * Group by Business_supplier_information.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supplier_informationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_supplier_informationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_supplier_informationGroupByArgs['orderBy'] }
        : { orderBy?: business_supplier_informationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_supplier_informationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_supplier_informationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_supplier_information model
   */
  readonly fields: business_supplier_informationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_supplier_information.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_supplier_informationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    business_supplier_pictures<T extends business_supplier_information$business_supplier_picturesArgs<ExtArgs> = {}>(args?: Subset<T, business_supplier_information$business_supplier_picturesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_supplier_information model
   */
  interface business_supplier_informationFieldRefs {
    readonly id: FieldRef<"business_supplier_information", 'String'>
    readonly inUse: FieldRef<"business_supplier_information", 'Boolean'>
    readonly title: FieldRef<"business_supplier_information", 'String'>
    readonly description: FieldRef<"business_supplier_information", 'String'>
    readonly schedule: FieldRef<"business_supplier_information", 'Json'>
    readonly businessId: FieldRef<"business_supplier_information", 'String'>
    readonly createdAt: FieldRef<"business_supplier_information", 'DateTime'>
    readonly updatedAt: FieldRef<"business_supplier_information", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_supplier_information findUnique
   */
  export type business_supplier_informationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * Filter, which business_supplier_information to fetch.
     */
    where: business_supplier_informationWhereUniqueInput
  }

  /**
   * business_supplier_information findUniqueOrThrow
   */
  export type business_supplier_informationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * Filter, which business_supplier_information to fetch.
     */
    where: business_supplier_informationWhereUniqueInput
  }

  /**
   * business_supplier_information findFirst
   */
  export type business_supplier_informationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * Filter, which business_supplier_information to fetch.
     */
    where?: business_supplier_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supplier_informations to fetch.
     */
    orderBy?: business_supplier_informationOrderByWithRelationInput | business_supplier_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_supplier_informations.
     */
    cursor?: business_supplier_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supplier_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supplier_informations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_supplier_informations.
     */
    distinct?: Business_supplier_informationScalarFieldEnum | Business_supplier_informationScalarFieldEnum[]
  }

  /**
   * business_supplier_information findFirstOrThrow
   */
  export type business_supplier_informationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * Filter, which business_supplier_information to fetch.
     */
    where?: business_supplier_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supplier_informations to fetch.
     */
    orderBy?: business_supplier_informationOrderByWithRelationInput | business_supplier_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_supplier_informations.
     */
    cursor?: business_supplier_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supplier_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supplier_informations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_supplier_informations.
     */
    distinct?: Business_supplier_informationScalarFieldEnum | Business_supplier_informationScalarFieldEnum[]
  }

  /**
   * business_supplier_information findMany
   */
  export type business_supplier_informationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * Filter, which business_supplier_informations to fetch.
     */
    where?: business_supplier_informationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supplier_informations to fetch.
     */
    orderBy?: business_supplier_informationOrderByWithRelationInput | business_supplier_informationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_supplier_informations.
     */
    cursor?: business_supplier_informationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supplier_informations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supplier_informations.
     */
    skip?: number
    distinct?: Business_supplier_informationScalarFieldEnum | Business_supplier_informationScalarFieldEnum[]
  }

  /**
   * business_supplier_information create
   */
  export type business_supplier_informationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * The data needed to create a business_supplier_information.
     */
    data: XOR<business_supplier_informationCreateInput, business_supplier_informationUncheckedCreateInput>
  }

  /**
   * business_supplier_information createMany
   */
  export type business_supplier_informationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_supplier_informations.
     */
    data: business_supplier_informationCreateManyInput | business_supplier_informationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_supplier_information createManyAndReturn
   */
  export type business_supplier_informationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * The data used to create many business_supplier_informations.
     */
    data: business_supplier_informationCreateManyInput | business_supplier_informationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_supplier_information update
   */
  export type business_supplier_informationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * The data needed to update a business_supplier_information.
     */
    data: XOR<business_supplier_informationUpdateInput, business_supplier_informationUncheckedUpdateInput>
    /**
     * Choose, which business_supplier_information to update.
     */
    where: business_supplier_informationWhereUniqueInput
  }

  /**
   * business_supplier_information updateMany
   */
  export type business_supplier_informationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_supplier_informations.
     */
    data: XOR<business_supplier_informationUpdateManyMutationInput, business_supplier_informationUncheckedUpdateManyInput>
    /**
     * Filter which business_supplier_informations to update
     */
    where?: business_supplier_informationWhereInput
    /**
     * Limit how many business_supplier_informations to update.
     */
    limit?: number
  }

  /**
   * business_supplier_information updateManyAndReturn
   */
  export type business_supplier_informationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * The data used to update business_supplier_informations.
     */
    data: XOR<business_supplier_informationUpdateManyMutationInput, business_supplier_informationUncheckedUpdateManyInput>
    /**
     * Filter which business_supplier_informations to update
     */
    where?: business_supplier_informationWhereInput
    /**
     * Limit how many business_supplier_informations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_supplier_information upsert
   */
  export type business_supplier_informationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * The filter to search for the business_supplier_information to update in case it exists.
     */
    where: business_supplier_informationWhereUniqueInput
    /**
     * In case the business_supplier_information found by the `where` argument doesn't exist, create a new business_supplier_information with this data.
     */
    create: XOR<business_supplier_informationCreateInput, business_supplier_informationUncheckedCreateInput>
    /**
     * In case the business_supplier_information was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_supplier_informationUpdateInput, business_supplier_informationUncheckedUpdateInput>
  }

  /**
   * business_supplier_information delete
   */
  export type business_supplier_informationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    /**
     * Filter which business_supplier_information to delete.
     */
    where: business_supplier_informationWhereUniqueInput
  }

  /**
   * business_supplier_information deleteMany
   */
  export type business_supplier_informationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_supplier_informations to delete
     */
    where?: business_supplier_informationWhereInput
    /**
     * Limit how many business_supplier_informations to delete.
     */
    limit?: number
  }

  /**
   * business_supplier_information.business_supplier_pictures
   */
  export type business_supplier_information$business_supplier_picturesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    where?: BusinessSupplierPictureWhereInput
    orderBy?: BusinessSupplierPictureOrderByWithRelationInput | BusinessSupplierPictureOrderByWithRelationInput[]
    cursor?: BusinessSupplierPictureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessSupplierPictureScalarFieldEnum | BusinessSupplierPictureScalarFieldEnum[]
  }

  /**
   * business_supplier_information without action
   */
  export type business_supplier_informationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
  }


  /**
   * Model business_supporting_documents
   */

  export type AggregateBusiness_supporting_documents = {
    _count: Business_supporting_documentsCountAggregateOutputType | null
    _min: Business_supporting_documentsMinAggregateOutputType | null
    _max: Business_supporting_documentsMaxAggregateOutputType | null
  }

  export type Business_supporting_documentsMinAggregateOutputType = {
    id: string | null
    serviceContract: boolean | null
    issuedInvoice: boolean | null
    thirdPartyPaymentAgreement: boolean | null
    ultimateBeneficialOwnerCertificate: boolean | null
    businessLicense: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_supporting_documentsMaxAggregateOutputType = {
    id: string | null
    serviceContract: boolean | null
    issuedInvoice: boolean | null
    thirdPartyPaymentAgreement: boolean | null
    ultimateBeneficialOwnerCertificate: boolean | null
    businessLicense: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_supporting_documentsCountAggregateOutputType = {
    id: number
    serviceContract: number
    issuedInvoice: number
    thirdPartyPaymentAgreement: number
    ultimateBeneficialOwnerCertificate: number
    businessLicense: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_supporting_documentsMinAggregateInputType = {
    id?: true
    serviceContract?: true
    issuedInvoice?: true
    thirdPartyPaymentAgreement?: true
    ultimateBeneficialOwnerCertificate?: true
    businessLicense?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_supporting_documentsMaxAggregateInputType = {
    id?: true
    serviceContract?: true
    issuedInvoice?: true
    thirdPartyPaymentAgreement?: true
    ultimateBeneficialOwnerCertificate?: true
    businessLicense?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_supporting_documentsCountAggregateInputType = {
    id?: true
    serviceContract?: true
    issuedInvoice?: true
    thirdPartyPaymentAgreement?: true
    ultimateBeneficialOwnerCertificate?: true
    businessLicense?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_supporting_documentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_supporting_documents to aggregate.
     */
    where?: business_supporting_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents to fetch.
     */
    orderBy?: business_supporting_documentsOrderByWithRelationInput | business_supporting_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_supporting_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_supporting_documents
    **/
    _count?: true | Business_supporting_documentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_supporting_documentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_supporting_documentsMaxAggregateInputType
  }

  export type GetBusiness_supporting_documentsAggregateType<T extends Business_supporting_documentsAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_supporting_documents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_supporting_documents[P]>
      : GetScalarType<T[P], AggregateBusiness_supporting_documents[P]>
  }




  export type business_supporting_documentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_supporting_documentsWhereInput
    orderBy?: business_supporting_documentsOrderByWithAggregationInput | business_supporting_documentsOrderByWithAggregationInput[]
    by: Business_supporting_documentsScalarFieldEnum[] | Business_supporting_documentsScalarFieldEnum
    having?: business_supporting_documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_supporting_documentsCountAggregateInputType | true
    _min?: Business_supporting_documentsMinAggregateInputType
    _max?: Business_supporting_documentsMaxAggregateInputType
  }

  export type Business_supporting_documentsGroupByOutputType = {
    id: string
    serviceContract: boolean | null
    issuedInvoice: boolean | null
    thirdPartyPaymentAgreement: boolean | null
    ultimateBeneficialOwnerCertificate: boolean | null
    businessLicense: boolean | null
    createdAt: Date
    updatedAt: Date
    _count: Business_supporting_documentsCountAggregateOutputType | null
    _min: Business_supporting_documentsMinAggregateOutputType | null
    _max: Business_supporting_documentsMaxAggregateOutputType | null
  }

  type GetBusiness_supporting_documentsGroupByPayload<T extends business_supporting_documentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_supporting_documentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_supporting_documentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_supporting_documentsGroupByOutputType[P]>
            : GetScalarType<T[P], Business_supporting_documentsGroupByOutputType[P]>
        }
      >
    >


  export type business_supporting_documentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceContract?: boolean
    issuedInvoice?: boolean
    thirdPartyPaymentAgreement?: boolean
    ultimateBeneficialOwnerCertificate?: boolean
    businessLicense?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supporting_documents"]>

  export type business_supporting_documentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceContract?: boolean
    issuedInvoice?: boolean
    thirdPartyPaymentAgreement?: boolean
    ultimateBeneficialOwnerCertificate?: boolean
    businessLicense?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supporting_documents"]>

  export type business_supporting_documentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceContract?: boolean
    issuedInvoice?: boolean
    thirdPartyPaymentAgreement?: boolean
    ultimateBeneficialOwnerCertificate?: boolean
    businessLicense?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supporting_documents"]>

  export type business_supporting_documentsSelectScalar = {
    id?: boolean
    serviceContract?: boolean
    issuedInvoice?: boolean
    thirdPartyPaymentAgreement?: boolean
    ultimateBeneficialOwnerCertificate?: boolean
    businessLicense?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_supporting_documentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "serviceContract" | "issuedInvoice" | "thirdPartyPaymentAgreement" | "ultimateBeneficialOwnerCertificate" | "businessLicense" | "createdAt" | "updatedAt", ExtArgs["result"]["business_supporting_documents"]>
  export type business_supporting_documentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_supporting_documentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_supporting_documentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_supporting_documentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_supporting_documents"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      serviceContract: boolean | null
      issuedInvoice: boolean | null
      thirdPartyPaymentAgreement: boolean | null
      ultimateBeneficialOwnerCertificate: boolean | null
      businessLicense: boolean | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_supporting_documents"]>
    composites: {}
  }

  type business_supporting_documentsGetPayload<S extends boolean | null | undefined | business_supporting_documentsDefaultArgs> = $Result.GetResult<Prisma.$business_supporting_documentsPayload, S>

  type business_supporting_documentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_supporting_documentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_supporting_documentsCountAggregateInputType | true
    }

  export interface business_supporting_documentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_supporting_documents'], meta: { name: 'business_supporting_documents' } }
    /**
     * Find zero or one Business_supporting_documents that matches the filter.
     * @param {business_supporting_documentsFindUniqueArgs} args - Arguments to find a Business_supporting_documents
     * @example
     * // Get one Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_supporting_documentsFindUniqueArgs>(args: SelectSubset<T, business_supporting_documentsFindUniqueArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_supporting_documents that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_supporting_documentsFindUniqueOrThrowArgs} args - Arguments to find a Business_supporting_documents
     * @example
     * // Get one Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_supporting_documentsFindUniqueOrThrowArgs>(args: SelectSubset<T, business_supporting_documentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_supporting_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documentsFindFirstArgs} args - Arguments to find a Business_supporting_documents
     * @example
     * // Get one Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_supporting_documentsFindFirstArgs>(args?: SelectSubset<T, business_supporting_documentsFindFirstArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_supporting_documents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documentsFindFirstOrThrowArgs} args - Arguments to find a Business_supporting_documents
     * @example
     * // Get one Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_supporting_documentsFindFirstOrThrowArgs>(args?: SelectSubset<T, business_supporting_documentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_supporting_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.findMany()
     * 
     * // Get first 10 Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_supporting_documentsWithIdOnly = await prisma.business_supporting_documents.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_supporting_documentsFindManyArgs>(args?: SelectSubset<T, business_supporting_documentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_supporting_documents.
     * @param {business_supporting_documentsCreateArgs} args - Arguments to create a Business_supporting_documents.
     * @example
     * // Create one Business_supporting_documents
     * const Business_supporting_documents = await prisma.business_supporting_documents.create({
     *   data: {
     *     // ... data to create a Business_supporting_documents
     *   }
     * })
     * 
     */
    create<T extends business_supporting_documentsCreateArgs>(args: SelectSubset<T, business_supporting_documentsCreateArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_supporting_documents.
     * @param {business_supporting_documentsCreateManyArgs} args - Arguments to create many Business_supporting_documents.
     * @example
     * // Create many Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_supporting_documentsCreateManyArgs>(args?: SelectSubset<T, business_supporting_documentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_supporting_documents and returns the data saved in the database.
     * @param {business_supporting_documentsCreateManyAndReturnArgs} args - Arguments to create many Business_supporting_documents.
     * @example
     * // Create many Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_supporting_documents and only return the `id`
     * const business_supporting_documentsWithIdOnly = await prisma.business_supporting_documents.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_supporting_documentsCreateManyAndReturnArgs>(args?: SelectSubset<T, business_supporting_documentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_supporting_documents.
     * @param {business_supporting_documentsDeleteArgs} args - Arguments to delete one Business_supporting_documents.
     * @example
     * // Delete one Business_supporting_documents
     * const Business_supporting_documents = await prisma.business_supporting_documents.delete({
     *   where: {
     *     // ... filter to delete one Business_supporting_documents
     *   }
     * })
     * 
     */
    delete<T extends business_supporting_documentsDeleteArgs>(args: SelectSubset<T, business_supporting_documentsDeleteArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_supporting_documents.
     * @param {business_supporting_documentsUpdateArgs} args - Arguments to update one Business_supporting_documents.
     * @example
     * // Update one Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_supporting_documentsUpdateArgs>(args: SelectSubset<T, business_supporting_documentsUpdateArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_supporting_documents.
     * @param {business_supporting_documentsDeleteManyArgs} args - Arguments to filter Business_supporting_documents to delete.
     * @example
     * // Delete a few Business_supporting_documents
     * const { count } = await prisma.business_supporting_documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_supporting_documentsDeleteManyArgs>(args?: SelectSubset<T, business_supporting_documentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_supporting_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_supporting_documentsUpdateManyArgs>(args: SelectSubset<T, business_supporting_documentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_supporting_documents and returns the data updated in the database.
     * @param {business_supporting_documentsUpdateManyAndReturnArgs} args - Arguments to update many Business_supporting_documents.
     * @example
     * // Update many Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_supporting_documents and only return the `id`
     * const business_supporting_documentsWithIdOnly = await prisma.business_supporting_documents.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_supporting_documentsUpdateManyAndReturnArgs>(args: SelectSubset<T, business_supporting_documentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_supporting_documents.
     * @param {business_supporting_documentsUpsertArgs} args - Arguments to update or create a Business_supporting_documents.
     * @example
     * // Update or create a Business_supporting_documents
     * const business_supporting_documents = await prisma.business_supporting_documents.upsert({
     *   create: {
     *     // ... data to create a Business_supporting_documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_supporting_documents we want to update
     *   }
     * })
     */
    upsert<T extends business_supporting_documentsUpsertArgs>(args: SelectSubset<T, business_supporting_documentsUpsertArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_supporting_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documentsCountArgs} args - Arguments to filter Business_supporting_documents to count.
     * @example
     * // Count the number of Business_supporting_documents
     * const count = await prisma.business_supporting_documents.count({
     *   where: {
     *     // ... the filter for the Business_supporting_documents we want to count
     *   }
     * })
    **/
    count<T extends business_supporting_documentsCountArgs>(
      args?: Subset<T, business_supporting_documentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_supporting_documentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_supporting_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_supporting_documentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_supporting_documentsAggregateArgs>(args: Subset<T, Business_supporting_documentsAggregateArgs>): Prisma.PrismaPromise<GetBusiness_supporting_documentsAggregateType<T>>

    /**
     * Group by Business_supporting_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_supporting_documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_supporting_documentsGroupByArgs['orderBy'] }
        : { orderBy?: business_supporting_documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_supporting_documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_supporting_documentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_supporting_documents model
   */
  readonly fields: business_supporting_documentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_supporting_documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_supporting_documentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_supporting_documents model
   */
  interface business_supporting_documentsFieldRefs {
    readonly id: FieldRef<"business_supporting_documents", 'String'>
    readonly serviceContract: FieldRef<"business_supporting_documents", 'Boolean'>
    readonly issuedInvoice: FieldRef<"business_supporting_documents", 'Boolean'>
    readonly thirdPartyPaymentAgreement: FieldRef<"business_supporting_documents", 'Boolean'>
    readonly ultimateBeneficialOwnerCertificate: FieldRef<"business_supporting_documents", 'Boolean'>
    readonly businessLicense: FieldRef<"business_supporting_documents", 'Boolean'>
    readonly createdAt: FieldRef<"business_supporting_documents", 'DateTime'>
    readonly updatedAt: FieldRef<"business_supporting_documents", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_supporting_documents findUnique
   */
  export type business_supporting_documentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents to fetch.
     */
    where: business_supporting_documentsWhereUniqueInput
  }

  /**
   * business_supporting_documents findUniqueOrThrow
   */
  export type business_supporting_documentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents to fetch.
     */
    where: business_supporting_documentsWhereUniqueInput
  }

  /**
   * business_supporting_documents findFirst
   */
  export type business_supporting_documentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents to fetch.
     */
    where?: business_supporting_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents to fetch.
     */
    orderBy?: business_supporting_documentsOrderByWithRelationInput | business_supporting_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_supporting_documents.
     */
    cursor?: business_supporting_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_supporting_documents.
     */
    distinct?: Business_supporting_documentsScalarFieldEnum | Business_supporting_documentsScalarFieldEnum[]
  }

  /**
   * business_supporting_documents findFirstOrThrow
   */
  export type business_supporting_documentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents to fetch.
     */
    where?: business_supporting_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents to fetch.
     */
    orderBy?: business_supporting_documentsOrderByWithRelationInput | business_supporting_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_supporting_documents.
     */
    cursor?: business_supporting_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_supporting_documents.
     */
    distinct?: Business_supporting_documentsScalarFieldEnum | Business_supporting_documentsScalarFieldEnum[]
  }

  /**
   * business_supporting_documents findMany
   */
  export type business_supporting_documentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents to fetch.
     */
    where?: business_supporting_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents to fetch.
     */
    orderBy?: business_supporting_documentsOrderByWithRelationInput | business_supporting_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_supporting_documents.
     */
    cursor?: business_supporting_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents.
     */
    skip?: number
    distinct?: Business_supporting_documentsScalarFieldEnum | Business_supporting_documentsScalarFieldEnum[]
  }

  /**
   * business_supporting_documents create
   */
  export type business_supporting_documentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * The data needed to create a business_supporting_documents.
     */
    data: XOR<business_supporting_documentsCreateInput, business_supporting_documentsUncheckedCreateInput>
  }

  /**
   * business_supporting_documents createMany
   */
  export type business_supporting_documentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_supporting_documents.
     */
    data: business_supporting_documentsCreateManyInput | business_supporting_documentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_supporting_documents createManyAndReturn
   */
  export type business_supporting_documentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * The data used to create many business_supporting_documents.
     */
    data: business_supporting_documentsCreateManyInput | business_supporting_documentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_supporting_documents update
   */
  export type business_supporting_documentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * The data needed to update a business_supporting_documents.
     */
    data: XOR<business_supporting_documentsUpdateInput, business_supporting_documentsUncheckedUpdateInput>
    /**
     * Choose, which business_supporting_documents to update.
     */
    where: business_supporting_documentsWhereUniqueInput
  }

  /**
   * business_supporting_documents updateMany
   */
  export type business_supporting_documentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_supporting_documents.
     */
    data: XOR<business_supporting_documentsUpdateManyMutationInput, business_supporting_documentsUncheckedUpdateManyInput>
    /**
     * Filter which business_supporting_documents to update
     */
    where?: business_supporting_documentsWhereInput
    /**
     * Limit how many business_supporting_documents to update.
     */
    limit?: number
  }

  /**
   * business_supporting_documents updateManyAndReturn
   */
  export type business_supporting_documentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * The data used to update business_supporting_documents.
     */
    data: XOR<business_supporting_documentsUpdateManyMutationInput, business_supporting_documentsUncheckedUpdateManyInput>
    /**
     * Filter which business_supporting_documents to update
     */
    where?: business_supporting_documentsWhereInput
    /**
     * Limit how many business_supporting_documents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_supporting_documents upsert
   */
  export type business_supporting_documentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * The filter to search for the business_supporting_documents to update in case it exists.
     */
    where: business_supporting_documentsWhereUniqueInput
    /**
     * In case the business_supporting_documents found by the `where` argument doesn't exist, create a new business_supporting_documents with this data.
     */
    create: XOR<business_supporting_documentsCreateInput, business_supporting_documentsUncheckedCreateInput>
    /**
     * In case the business_supporting_documents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_supporting_documentsUpdateInput, business_supporting_documentsUncheckedUpdateInput>
  }

  /**
   * business_supporting_documents delete
   */
  export type business_supporting_documentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    /**
     * Filter which business_supporting_documents to delete.
     */
    where: business_supporting_documentsWhereUniqueInput
  }

  /**
   * business_supporting_documents deleteMany
   */
  export type business_supporting_documentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_supporting_documents to delete
     */
    where?: business_supporting_documentsWhereInput
    /**
     * Limit how many business_supporting_documents to delete.
     */
    limit?: number
  }

  /**
   * business_supporting_documents without action
   */
  export type business_supporting_documentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
  }


  /**
   * Model business_supporting_documents_attached
   */

  export type AggregateBusiness_supporting_documents_attached = {
    _count: Business_supporting_documents_attachedCountAggregateOutputType | null
    _min: Business_supporting_documents_attachedMinAggregateOutputType | null
    _max: Business_supporting_documents_attachedMaxAggregateOutputType | null
  }

  export type Business_supporting_documents_attachedMinAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_supporting_documents_attachedMaxAggregateOutputType = {
    id: string | null
    url: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Business_supporting_documents_attachedCountAggregateOutputType = {
    id: number
    url: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Business_supporting_documents_attachedMinAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_supporting_documents_attachedMaxAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Business_supporting_documents_attachedCountAggregateInputType = {
    id?: true
    url?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Business_supporting_documents_attachedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_supporting_documents_attached to aggregate.
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents_attacheds to fetch.
     */
    orderBy?: business_supporting_documents_attachedOrderByWithRelationInput | business_supporting_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: business_supporting_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents_attacheds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned business_supporting_documents_attacheds
    **/
    _count?: true | Business_supporting_documents_attachedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Business_supporting_documents_attachedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Business_supporting_documents_attachedMaxAggregateInputType
  }

  export type GetBusiness_supporting_documents_attachedAggregateType<T extends Business_supporting_documents_attachedAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness_supporting_documents_attached]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness_supporting_documents_attached[P]>
      : GetScalarType<T[P], AggregateBusiness_supporting_documents_attached[P]>
  }




  export type business_supporting_documents_attachedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: business_supporting_documents_attachedWhereInput
    orderBy?: business_supporting_documents_attachedOrderByWithAggregationInput | business_supporting_documents_attachedOrderByWithAggregationInput[]
    by: Business_supporting_documents_attachedScalarFieldEnum[] | Business_supporting_documents_attachedScalarFieldEnum
    having?: business_supporting_documents_attachedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Business_supporting_documents_attachedCountAggregateInputType | true
    _min?: Business_supporting_documents_attachedMinAggregateInputType
    _max?: Business_supporting_documents_attachedMaxAggregateInputType
  }

  export type Business_supporting_documents_attachedGroupByOutputType = {
    id: string
    url: string
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Business_supporting_documents_attachedCountAggregateOutputType | null
    _min: Business_supporting_documents_attachedMinAggregateOutputType | null
    _max: Business_supporting_documents_attachedMaxAggregateOutputType | null
  }

  type GetBusiness_supporting_documents_attachedGroupByPayload<T extends business_supporting_documents_attachedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Business_supporting_documents_attachedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Business_supporting_documents_attachedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Business_supporting_documents_attachedGroupByOutputType[P]>
            : GetScalarType<T[P], Business_supporting_documents_attachedGroupByOutputType[P]>
        }
      >
    >


  export type business_supporting_documents_attachedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supporting_documents_attached"]>

  export type business_supporting_documents_attachedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supporting_documents_attached"]>

  export type business_supporting_documents_attachedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business_supporting_documents_attached"]>

  export type business_supporting_documents_attachedSelectScalar = {
    id?: boolean
    url?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type business_supporting_documents_attachedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["business_supporting_documents_attached"]>
  export type business_supporting_documents_attachedInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_supporting_documents_attachedIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }
  export type business_supporting_documents_attachedIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
  }

  export type $business_supporting_documents_attachedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "business_supporting_documents_attached"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["business_supporting_documents_attached"]>
    composites: {}
  }

  type business_supporting_documents_attachedGetPayload<S extends boolean | null | undefined | business_supporting_documents_attachedDefaultArgs> = $Result.GetResult<Prisma.$business_supporting_documents_attachedPayload, S>

  type business_supporting_documents_attachedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<business_supporting_documents_attachedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Business_supporting_documents_attachedCountAggregateInputType | true
    }

  export interface business_supporting_documents_attachedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['business_supporting_documents_attached'], meta: { name: 'business_supporting_documents_attached' } }
    /**
     * Find zero or one Business_supporting_documents_attached that matches the filter.
     * @param {business_supporting_documents_attachedFindUniqueArgs} args - Arguments to find a Business_supporting_documents_attached
     * @example
     * // Get one Business_supporting_documents_attached
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends business_supporting_documents_attachedFindUniqueArgs>(args: SelectSubset<T, business_supporting_documents_attachedFindUniqueArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business_supporting_documents_attached that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {business_supporting_documents_attachedFindUniqueOrThrowArgs} args - Arguments to find a Business_supporting_documents_attached
     * @example
     * // Get one Business_supporting_documents_attached
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends business_supporting_documents_attachedFindUniqueOrThrowArgs>(args: SelectSubset<T, business_supporting_documents_attachedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_supporting_documents_attached that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documents_attachedFindFirstArgs} args - Arguments to find a Business_supporting_documents_attached
     * @example
     * // Get one Business_supporting_documents_attached
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends business_supporting_documents_attachedFindFirstArgs>(args?: SelectSubset<T, business_supporting_documents_attachedFindFirstArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business_supporting_documents_attached that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documents_attachedFindFirstOrThrowArgs} args - Arguments to find a Business_supporting_documents_attached
     * @example
     * // Get one Business_supporting_documents_attached
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends business_supporting_documents_attachedFindFirstOrThrowArgs>(args?: SelectSubset<T, business_supporting_documents_attachedFindFirstOrThrowArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Business_supporting_documents_attacheds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documents_attachedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Business_supporting_documents_attacheds
     * const business_supporting_documents_attacheds = await prisma.business_supporting_documents_attached.findMany()
     * 
     * // Get first 10 Business_supporting_documents_attacheds
     * const business_supporting_documents_attacheds = await prisma.business_supporting_documents_attached.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const business_supporting_documents_attachedWithIdOnly = await prisma.business_supporting_documents_attached.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends business_supporting_documents_attachedFindManyArgs>(args?: SelectSubset<T, business_supporting_documents_attachedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business_supporting_documents_attached.
     * @param {business_supporting_documents_attachedCreateArgs} args - Arguments to create a Business_supporting_documents_attached.
     * @example
     * // Create one Business_supporting_documents_attached
     * const Business_supporting_documents_attached = await prisma.business_supporting_documents_attached.create({
     *   data: {
     *     // ... data to create a Business_supporting_documents_attached
     *   }
     * })
     * 
     */
    create<T extends business_supporting_documents_attachedCreateArgs>(args: SelectSubset<T, business_supporting_documents_attachedCreateArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Business_supporting_documents_attacheds.
     * @param {business_supporting_documents_attachedCreateManyArgs} args - Arguments to create many Business_supporting_documents_attacheds.
     * @example
     * // Create many Business_supporting_documents_attacheds
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends business_supporting_documents_attachedCreateManyArgs>(args?: SelectSubset<T, business_supporting_documents_attachedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Business_supporting_documents_attacheds and returns the data saved in the database.
     * @param {business_supporting_documents_attachedCreateManyAndReturnArgs} args - Arguments to create many Business_supporting_documents_attacheds.
     * @example
     * // Create many Business_supporting_documents_attacheds
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Business_supporting_documents_attacheds and only return the `id`
     * const business_supporting_documents_attachedWithIdOnly = await prisma.business_supporting_documents_attached.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends business_supporting_documents_attachedCreateManyAndReturnArgs>(args?: SelectSubset<T, business_supporting_documents_attachedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business_supporting_documents_attached.
     * @param {business_supporting_documents_attachedDeleteArgs} args - Arguments to delete one Business_supporting_documents_attached.
     * @example
     * // Delete one Business_supporting_documents_attached
     * const Business_supporting_documents_attached = await prisma.business_supporting_documents_attached.delete({
     *   where: {
     *     // ... filter to delete one Business_supporting_documents_attached
     *   }
     * })
     * 
     */
    delete<T extends business_supporting_documents_attachedDeleteArgs>(args: SelectSubset<T, business_supporting_documents_attachedDeleteArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business_supporting_documents_attached.
     * @param {business_supporting_documents_attachedUpdateArgs} args - Arguments to update one Business_supporting_documents_attached.
     * @example
     * // Update one Business_supporting_documents_attached
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends business_supporting_documents_attachedUpdateArgs>(args: SelectSubset<T, business_supporting_documents_attachedUpdateArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Business_supporting_documents_attacheds.
     * @param {business_supporting_documents_attachedDeleteManyArgs} args - Arguments to filter Business_supporting_documents_attacheds to delete.
     * @example
     * // Delete a few Business_supporting_documents_attacheds
     * const { count } = await prisma.business_supporting_documents_attached.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends business_supporting_documents_attachedDeleteManyArgs>(args?: SelectSubset<T, business_supporting_documents_attachedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_supporting_documents_attacheds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documents_attachedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Business_supporting_documents_attacheds
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends business_supporting_documents_attachedUpdateManyArgs>(args: SelectSubset<T, business_supporting_documents_attachedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Business_supporting_documents_attacheds and returns the data updated in the database.
     * @param {business_supporting_documents_attachedUpdateManyAndReturnArgs} args - Arguments to update many Business_supporting_documents_attacheds.
     * @example
     * // Update many Business_supporting_documents_attacheds
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Business_supporting_documents_attacheds and only return the `id`
     * const business_supporting_documents_attachedWithIdOnly = await prisma.business_supporting_documents_attached.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends business_supporting_documents_attachedUpdateManyAndReturnArgs>(args: SelectSubset<T, business_supporting_documents_attachedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business_supporting_documents_attached.
     * @param {business_supporting_documents_attachedUpsertArgs} args - Arguments to update or create a Business_supporting_documents_attached.
     * @example
     * // Update or create a Business_supporting_documents_attached
     * const business_supporting_documents_attached = await prisma.business_supporting_documents_attached.upsert({
     *   create: {
     *     // ... data to create a Business_supporting_documents_attached
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business_supporting_documents_attached we want to update
     *   }
     * })
     */
    upsert<T extends business_supporting_documents_attachedUpsertArgs>(args: SelectSubset<T, business_supporting_documents_attachedUpsertArgs<ExtArgs>>): Prisma__business_supporting_documents_attachedClient<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Business_supporting_documents_attacheds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documents_attachedCountArgs} args - Arguments to filter Business_supporting_documents_attacheds to count.
     * @example
     * // Count the number of Business_supporting_documents_attacheds
     * const count = await prisma.business_supporting_documents_attached.count({
     *   where: {
     *     // ... the filter for the Business_supporting_documents_attacheds we want to count
     *   }
     * })
    **/
    count<T extends business_supporting_documents_attachedCountArgs>(
      args?: Subset<T, business_supporting_documents_attachedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Business_supporting_documents_attachedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business_supporting_documents_attached.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Business_supporting_documents_attachedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Business_supporting_documents_attachedAggregateArgs>(args: Subset<T, Business_supporting_documents_attachedAggregateArgs>): Prisma.PrismaPromise<GetBusiness_supporting_documents_attachedAggregateType<T>>

    /**
     * Group by Business_supporting_documents_attached.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {business_supporting_documents_attachedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends business_supporting_documents_attachedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: business_supporting_documents_attachedGroupByArgs['orderBy'] }
        : { orderBy?: business_supporting_documents_attachedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, business_supporting_documents_attachedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusiness_supporting_documents_attachedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the business_supporting_documents_attached model
   */
  readonly fields: business_supporting_documents_attachedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for business_supporting_documents_attached.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__business_supporting_documents_attachedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the business_supporting_documents_attached model
   */
  interface business_supporting_documents_attachedFieldRefs {
    readonly id: FieldRef<"business_supporting_documents_attached", 'String'>
    readonly url: FieldRef<"business_supporting_documents_attached", 'String'>
    readonly businessId: FieldRef<"business_supporting_documents_attached", 'String'>
    readonly createdAt: FieldRef<"business_supporting_documents_attached", 'DateTime'>
    readonly updatedAt: FieldRef<"business_supporting_documents_attached", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * business_supporting_documents_attached findUnique
   */
  export type business_supporting_documents_attachedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents_attached to fetch.
     */
    where: business_supporting_documents_attachedWhereUniqueInput
  }

  /**
   * business_supporting_documents_attached findUniqueOrThrow
   */
  export type business_supporting_documents_attachedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents_attached to fetch.
     */
    where: business_supporting_documents_attachedWhereUniqueInput
  }

  /**
   * business_supporting_documents_attached findFirst
   */
  export type business_supporting_documents_attachedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents_attached to fetch.
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents_attacheds to fetch.
     */
    orderBy?: business_supporting_documents_attachedOrderByWithRelationInput | business_supporting_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_supporting_documents_attacheds.
     */
    cursor?: business_supporting_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents_attacheds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_supporting_documents_attacheds.
     */
    distinct?: Business_supporting_documents_attachedScalarFieldEnum | Business_supporting_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_supporting_documents_attached findFirstOrThrow
   */
  export type business_supporting_documents_attachedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents_attached to fetch.
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents_attacheds to fetch.
     */
    orderBy?: business_supporting_documents_attachedOrderByWithRelationInput | business_supporting_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for business_supporting_documents_attacheds.
     */
    cursor?: business_supporting_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents_attacheds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of business_supporting_documents_attacheds.
     */
    distinct?: Business_supporting_documents_attachedScalarFieldEnum | Business_supporting_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_supporting_documents_attached findMany
   */
  export type business_supporting_documents_attachedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter, which business_supporting_documents_attacheds to fetch.
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of business_supporting_documents_attacheds to fetch.
     */
    orderBy?: business_supporting_documents_attachedOrderByWithRelationInput | business_supporting_documents_attachedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing business_supporting_documents_attacheds.
     */
    cursor?: business_supporting_documents_attachedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` business_supporting_documents_attacheds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` business_supporting_documents_attacheds.
     */
    skip?: number
    distinct?: Business_supporting_documents_attachedScalarFieldEnum | Business_supporting_documents_attachedScalarFieldEnum[]
  }

  /**
   * business_supporting_documents_attached create
   */
  export type business_supporting_documents_attachedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * The data needed to create a business_supporting_documents_attached.
     */
    data: XOR<business_supporting_documents_attachedCreateInput, business_supporting_documents_attachedUncheckedCreateInput>
  }

  /**
   * business_supporting_documents_attached createMany
   */
  export type business_supporting_documents_attachedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many business_supporting_documents_attacheds.
     */
    data: business_supporting_documents_attachedCreateManyInput | business_supporting_documents_attachedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * business_supporting_documents_attached createManyAndReturn
   */
  export type business_supporting_documents_attachedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * The data used to create many business_supporting_documents_attacheds.
     */
    data: business_supporting_documents_attachedCreateManyInput | business_supporting_documents_attachedCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_supporting_documents_attached update
   */
  export type business_supporting_documents_attachedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * The data needed to update a business_supporting_documents_attached.
     */
    data: XOR<business_supporting_documents_attachedUpdateInput, business_supporting_documents_attachedUncheckedUpdateInput>
    /**
     * Choose, which business_supporting_documents_attached to update.
     */
    where: business_supporting_documents_attachedWhereUniqueInput
  }

  /**
   * business_supporting_documents_attached updateMany
   */
  export type business_supporting_documents_attachedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update business_supporting_documents_attacheds.
     */
    data: XOR<business_supporting_documents_attachedUpdateManyMutationInput, business_supporting_documents_attachedUncheckedUpdateManyInput>
    /**
     * Filter which business_supporting_documents_attacheds to update
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * Limit how many business_supporting_documents_attacheds to update.
     */
    limit?: number
  }

  /**
   * business_supporting_documents_attached updateManyAndReturn
   */
  export type business_supporting_documents_attachedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * The data used to update business_supporting_documents_attacheds.
     */
    data: XOR<business_supporting_documents_attachedUpdateManyMutationInput, business_supporting_documents_attachedUncheckedUpdateManyInput>
    /**
     * Filter which business_supporting_documents_attacheds to update
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * Limit how many business_supporting_documents_attacheds to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * business_supporting_documents_attached upsert
   */
  export type business_supporting_documents_attachedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * The filter to search for the business_supporting_documents_attached to update in case it exists.
     */
    where: business_supporting_documents_attachedWhereUniqueInput
    /**
     * In case the business_supporting_documents_attached found by the `where` argument doesn't exist, create a new business_supporting_documents_attached with this data.
     */
    create: XOR<business_supporting_documents_attachedCreateInput, business_supporting_documents_attachedUncheckedCreateInput>
    /**
     * In case the business_supporting_documents_attached was found with the provided `where` argument, update it with this data.
     */
    update: XOR<business_supporting_documents_attachedUpdateInput, business_supporting_documents_attachedUncheckedUpdateInput>
  }

  /**
   * business_supporting_documents_attached delete
   */
  export type business_supporting_documents_attachedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    /**
     * Filter which business_supporting_documents_attached to delete.
     */
    where: business_supporting_documents_attachedWhereUniqueInput
  }

  /**
   * business_supporting_documents_attached deleteMany
   */
  export type business_supporting_documents_attachedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which business_supporting_documents_attacheds to delete
     */
    where?: business_supporting_documents_attachedWhereInput
    /**
     * Limit how many business_supporting_documents_attacheds to delete.
     */
    limit?: number
  }

  /**
   * business_supporting_documents_attached without action
   */
  export type business_supporting_documents_attachedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
  }


  /**
   * Model businesses
   */

  export type AggregateBusinesses = {
    _count: BusinessesCountAggregateOutputType | null
    _min: BusinessesMinAggregateOutputType | null
    _max: BusinessesMaxAggregateOutputType | null
  }

  export type BusinessesMinAggregateOutputType = {
    id: string | null
    legalName: string | null
    taxId: string | null
    phone: string | null
    email: string | null
    registeredAddress: string | null
    countryOfIncorporation: string | null
    legalForm: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessesMaxAggregateOutputType = {
    id: string | null
    legalName: string | null
    taxId: string | null
    phone: string | null
    email: string | null
    registeredAddress: string | null
    countryOfIncorporation: string | null
    legalForm: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessesCountAggregateOutputType = {
    id: number
    legalName: number
    taxId: number
    phone: number
    email: number
    registeredAddress: number
    countryOfIncorporation: number
    legalForm: number
    legalRepresentative: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessesMinAggregateInputType = {
    id?: true
    legalName?: true
    taxId?: true
    phone?: true
    email?: true
    registeredAddress?: true
    countryOfIncorporation?: true
    legalForm?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessesMaxAggregateInputType = {
    id?: true
    legalName?: true
    taxId?: true
    phone?: true
    email?: true
    registeredAddress?: true
    countryOfIncorporation?: true
    legalForm?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessesCountAggregateInputType = {
    id?: true
    legalName?: true
    taxId?: true
    phone?: true
    email?: true
    registeredAddress?: true
    countryOfIncorporation?: true
    legalForm?: true
    legalRepresentative?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which businesses to aggregate.
     */
    where?: businessesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of businesses to fetch.
     */
    orderBy?: businessesOrderByWithRelationInput | businessesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: businessesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned businesses
    **/
    _count?: true | BusinessesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessesMaxAggregateInputType
  }

  export type GetBusinessesAggregateType<T extends BusinessesAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinesses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinesses[P]>
      : GetScalarType<T[P], AggregateBusinesses[P]>
  }




  export type businessesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: businessesWhereInput
    orderBy?: businessesOrderByWithAggregationInput | businessesOrderByWithAggregationInput[]
    by: BusinessesScalarFieldEnum[] | BusinessesScalarFieldEnum
    having?: businessesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessesCountAggregateInputType | true
    _min?: BusinessesMinAggregateInputType
    _max?: BusinessesMaxAggregateInputType
  }

  export type BusinessesGroupByOutputType = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonValue
    createdAt: Date
    updatedAt: Date
    _count: BusinessesCountAggregateOutputType | null
    _min: BusinessesMinAggregateOutputType | null
    _max: BusinessesMaxAggregateOutputType | null
  }

  type GetBusinessesGroupByPayload<T extends businessesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessesGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessesGroupByOutputType[P]>
        }
      >
    >


  export type businessesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    phone?: boolean
    email?: boolean
    registeredAddress?: boolean
    countryOfIncorporation?: boolean
    legalForm?: boolean
    legalRepresentative?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    business_bank_information?: boolean | businesses$business_bank_informationArgs<ExtArgs>
    business_commercial_relationships?: boolean | businesses$business_commercial_relationshipsArgs<ExtArgs>
    business_compliance?: boolean | businesses$business_complianceArgs<ExtArgs>
    business_configurations?: boolean | businesses$business_configurationsArgs<ExtArgs>
    business_employees?: boolean | businesses$business_employeesArgs<ExtArgs>
    business_employees_clock_records?: boolean | businesses$business_employees_clock_recordsArgs<ExtArgs>
    business_general_sales_reports_ai?: boolean | businesses$business_general_sales_reports_aiArgs<ExtArgs>
    business_general_warehouse_reports_ai?: boolean | businesses$business_general_warehouse_reports_aiArgs<ExtArgs>
    business_licenses?: boolean | businesses$business_licensesArgs<ExtArgs>
    business_menu_categories?: boolean | businesses$business_menu_categoriesArgs<ExtArgs>
    business_menus?: boolean | businesses$business_menusArgs<ExtArgs>
    business_paying_companies?: boolean | businesses$business_paying_companiesArgs<ExtArgs>
    business_payment_history?: boolean | businesses$business_payment_historyArgs<ExtArgs>
    business_payment_history_details?: boolean | businesses$business_payment_history_detailsArgs<ExtArgs>
    business_phone_ids?: boolean | businesses$business_phone_idsArgs<ExtArgs>
    business_products?: boolean | businesses$business_productsArgs<ExtArgs>
    business_supplier_information?: boolean | businesses$business_supplier_informationArgs<ExtArgs>
    business_supplier_pictures?: boolean | businesses$business_supplier_picturesArgs<ExtArgs>
    business_supporting_documents?: boolean | businesses$business_supporting_documentsArgs<ExtArgs>
    business_supporting_documents_attached?: boolean | businesses$business_supporting_documents_attachedArgs<ExtArgs>
    business_warehouse_replenishment_reports_ai?: boolean | businesses$business_warehouse_replenishment_reports_aiArgs<ExtArgs>
    client_order_product_lines?: boolean | businesses$client_order_product_linesArgs<ExtArgs>
    client_order_thermal_printers?: boolean | businesses$client_order_thermal_printersArgs<ExtArgs>
    client_order_tickets?: boolean | businesses$client_order_ticketsArgs<ExtArgs>
    client_order_transactions?: boolean | businesses$client_order_transactionsArgs<ExtArgs>
    client_orders?: boolean | businesses$client_ordersArgs<ExtArgs>
    _count?: boolean | BusinessesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businesses"]>

  export type businessesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    phone?: boolean
    email?: boolean
    registeredAddress?: boolean
    countryOfIncorporation?: boolean
    legalForm?: boolean
    legalRepresentative?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["businesses"]>

  export type businessesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    phone?: boolean
    email?: boolean
    registeredAddress?: boolean
    countryOfIncorporation?: boolean
    legalForm?: boolean
    legalRepresentative?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["businesses"]>

  export type businessesSelectScalar = {
    id?: boolean
    legalName?: boolean
    taxId?: boolean
    phone?: boolean
    email?: boolean
    registeredAddress?: boolean
    countryOfIncorporation?: boolean
    legalForm?: boolean
    legalRepresentative?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type businessesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "legalName" | "taxId" | "phone" | "email" | "registeredAddress" | "countryOfIncorporation" | "legalForm" | "legalRepresentative" | "createdAt" | "updatedAt", ExtArgs["result"]["businesses"]>
  export type businessesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    business_bank_information?: boolean | businesses$business_bank_informationArgs<ExtArgs>
    business_commercial_relationships?: boolean | businesses$business_commercial_relationshipsArgs<ExtArgs>
    business_compliance?: boolean | businesses$business_complianceArgs<ExtArgs>
    business_configurations?: boolean | businesses$business_configurationsArgs<ExtArgs>
    business_employees?: boolean | businesses$business_employeesArgs<ExtArgs>
    business_employees_clock_records?: boolean | businesses$business_employees_clock_recordsArgs<ExtArgs>
    business_general_sales_reports_ai?: boolean | businesses$business_general_sales_reports_aiArgs<ExtArgs>
    business_general_warehouse_reports_ai?: boolean | businesses$business_general_warehouse_reports_aiArgs<ExtArgs>
    business_licenses?: boolean | businesses$business_licensesArgs<ExtArgs>
    business_menu_categories?: boolean | businesses$business_menu_categoriesArgs<ExtArgs>
    business_menus?: boolean | businesses$business_menusArgs<ExtArgs>
    business_paying_companies?: boolean | businesses$business_paying_companiesArgs<ExtArgs>
    business_payment_history?: boolean | businesses$business_payment_historyArgs<ExtArgs>
    business_payment_history_details?: boolean | businesses$business_payment_history_detailsArgs<ExtArgs>
    business_phone_ids?: boolean | businesses$business_phone_idsArgs<ExtArgs>
    business_products?: boolean | businesses$business_productsArgs<ExtArgs>
    business_supplier_information?: boolean | businesses$business_supplier_informationArgs<ExtArgs>
    business_supplier_pictures?: boolean | businesses$business_supplier_picturesArgs<ExtArgs>
    business_supporting_documents?: boolean | businesses$business_supporting_documentsArgs<ExtArgs>
    business_supporting_documents_attached?: boolean | businesses$business_supporting_documents_attachedArgs<ExtArgs>
    business_warehouse_replenishment_reports_ai?: boolean | businesses$business_warehouse_replenishment_reports_aiArgs<ExtArgs>
    client_order_product_lines?: boolean | businesses$client_order_product_linesArgs<ExtArgs>
    client_order_thermal_printers?: boolean | businesses$client_order_thermal_printersArgs<ExtArgs>
    client_order_tickets?: boolean | businesses$client_order_ticketsArgs<ExtArgs>
    client_order_transactions?: boolean | businesses$client_order_transactionsArgs<ExtArgs>
    client_orders?: boolean | businesses$client_ordersArgs<ExtArgs>
    _count?: boolean | BusinessesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type businessesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type businessesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $businessesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "businesses"
    objects: {
      business_bank_information: Prisma.$BusinessBankInformationPayload<ExtArgs> | null
      business_commercial_relationships: Prisma.$business_commercial_relationshipsPayload<ExtArgs> | null
      business_compliance: Prisma.$business_compliancePayload<ExtArgs> | null
      business_configurations: Prisma.$business_configurationsPayload<ExtArgs> | null
      business_employees: Prisma.$business_employeesPayload<ExtArgs>[]
      business_employees_clock_records: Prisma.$business_employees_clock_recordsPayload<ExtArgs>[]
      business_general_sales_reports_ai: Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>[]
      business_general_warehouse_reports_ai: Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>[]
      business_licenses: Prisma.$BusinessLicensePayload<ExtArgs>[]
      business_menu_categories: Prisma.$BusinessMenuCategoryPayload<ExtArgs>[]
      business_menus: Prisma.$BusinessMenuPayload<ExtArgs>[]
      business_paying_companies: Prisma.$BusinessPayingCompanyPayload<ExtArgs> | null
      business_payment_history: Prisma.$business_payment_historyPayload<ExtArgs>[]
      business_payment_history_details: Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>[]
      business_phone_ids: Prisma.$business_phone_idsPayload<ExtArgs>[]
      business_products: Prisma.$BusinessProductPayload<ExtArgs>[]
      business_supplier_information: Prisma.$business_supplier_informationPayload<ExtArgs>[]
      business_supplier_pictures: Prisma.$BusinessSupplierPicturePayload<ExtArgs>[]
      business_supporting_documents: Prisma.$business_supporting_documentsPayload<ExtArgs> | null
      business_supporting_documents_attached: Prisma.$business_supporting_documents_attachedPayload<ExtArgs>[]
      business_warehouse_replenishment_reports_ai: Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>[]
      client_order_product_lines: Prisma.$client_order_product_linesPayload<ExtArgs>[]
      client_order_thermal_printers: Prisma.$client_order_thermal_printersPayload<ExtArgs>[]
      client_order_tickets: Prisma.$ClientOrderTicketPayload<ExtArgs>[]
      client_order_transactions: Prisma.$ClientOrderTransactionPayload<ExtArgs>[]
      client_orders: Prisma.$ClientOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      legalName: string
      taxId: string
      phone: string
      email: string
      registeredAddress: string
      countryOfIncorporation: string
      legalForm: string
      legalRepresentative: Prisma.JsonValue
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businesses"]>
    composites: {}
  }

  type businessesGetPayload<S extends boolean | null | undefined | businessesDefaultArgs> = $Result.GetResult<Prisma.$businessesPayload, S>

  type businessesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<businessesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessesCountAggregateInputType | true
    }

  export interface businessesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['businesses'], meta: { name: 'businesses' } }
    /**
     * Find zero or one Businesses that matches the filter.
     * @param {businessesFindUniqueArgs} args - Arguments to find a Businesses
     * @example
     * // Get one Businesses
     * const businesses = await prisma.businesses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends businessesFindUniqueArgs>(args: SelectSubset<T, businessesFindUniqueArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Businesses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {businessesFindUniqueOrThrowArgs} args - Arguments to find a Businesses
     * @example
     * // Get one Businesses
     * const businesses = await prisma.businesses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends businessesFindUniqueOrThrowArgs>(args: SelectSubset<T, businessesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Businesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {businessesFindFirstArgs} args - Arguments to find a Businesses
     * @example
     * // Get one Businesses
     * const businesses = await prisma.businesses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends businessesFindFirstArgs>(args?: SelectSubset<T, businessesFindFirstArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Businesses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {businessesFindFirstOrThrowArgs} args - Arguments to find a Businesses
     * @example
     * // Get one Businesses
     * const businesses = await prisma.businesses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends businessesFindFirstOrThrowArgs>(args?: SelectSubset<T, businessesFindFirstOrThrowArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Businesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {businessesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Businesses
     * const businesses = await prisma.businesses.findMany()
     * 
     * // Get first 10 Businesses
     * const businesses = await prisma.businesses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessesWithIdOnly = await prisma.businesses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends businessesFindManyArgs>(args?: SelectSubset<T, businessesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Businesses.
     * @param {businessesCreateArgs} args - Arguments to create a Businesses.
     * @example
     * // Create one Businesses
     * const Businesses = await prisma.businesses.create({
     *   data: {
     *     // ... data to create a Businesses
     *   }
     * })
     * 
     */
    create<T extends businessesCreateArgs>(args: SelectSubset<T, businessesCreateArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Businesses.
     * @param {businessesCreateManyArgs} args - Arguments to create many Businesses.
     * @example
     * // Create many Businesses
     * const businesses = await prisma.businesses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends businessesCreateManyArgs>(args?: SelectSubset<T, businessesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Businesses and returns the data saved in the database.
     * @param {businessesCreateManyAndReturnArgs} args - Arguments to create many Businesses.
     * @example
     * // Create many Businesses
     * const businesses = await prisma.businesses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Businesses and only return the `id`
     * const businessesWithIdOnly = await prisma.businesses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends businessesCreateManyAndReturnArgs>(args?: SelectSubset<T, businessesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Businesses.
     * @param {businessesDeleteArgs} args - Arguments to delete one Businesses.
     * @example
     * // Delete one Businesses
     * const Businesses = await prisma.businesses.delete({
     *   where: {
     *     // ... filter to delete one Businesses
     *   }
     * })
     * 
     */
    delete<T extends businessesDeleteArgs>(args: SelectSubset<T, businessesDeleteArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Businesses.
     * @param {businessesUpdateArgs} args - Arguments to update one Businesses.
     * @example
     * // Update one Businesses
     * const businesses = await prisma.businesses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends businessesUpdateArgs>(args: SelectSubset<T, businessesUpdateArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Businesses.
     * @param {businessesDeleteManyArgs} args - Arguments to filter Businesses to delete.
     * @example
     * // Delete a few Businesses
     * const { count } = await prisma.businesses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends businessesDeleteManyArgs>(args?: SelectSubset<T, businessesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {businessesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Businesses
     * const businesses = await prisma.businesses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends businessesUpdateManyArgs>(args: SelectSubset<T, businessesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Businesses and returns the data updated in the database.
     * @param {businessesUpdateManyAndReturnArgs} args - Arguments to update many Businesses.
     * @example
     * // Update many Businesses
     * const businesses = await prisma.businesses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Businesses and only return the `id`
     * const businessesWithIdOnly = await prisma.businesses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends businessesUpdateManyAndReturnArgs>(args: SelectSubset<T, businessesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Businesses.
     * @param {businessesUpsertArgs} args - Arguments to update or create a Businesses.
     * @example
     * // Update or create a Businesses
     * const businesses = await prisma.businesses.upsert({
     *   create: {
     *     // ... data to create a Businesses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Businesses we want to update
     *   }
     * })
     */
    upsert<T extends businessesUpsertArgs>(args: SelectSubset<T, businessesUpsertArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {businessesCountArgs} args - Arguments to filter Businesses to count.
     * @example
     * // Count the number of Businesses
     * const count = await prisma.businesses.count({
     *   where: {
     *     // ... the filter for the Businesses we want to count
     *   }
     * })
    **/
    count<T extends businessesCountArgs>(
      args?: Subset<T, businessesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessesAggregateArgs>(args: Subset<T, BusinessesAggregateArgs>): Prisma.PrismaPromise<GetBusinessesAggregateType<T>>

    /**
     * Group by Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {businessesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends businessesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: businessesGroupByArgs['orderBy'] }
        : { orderBy?: businessesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, businessesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the businesses model
   */
  readonly fields: businessesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for businesses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__businessesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    business_bank_information<T extends businesses$business_bank_informationArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_bank_informationArgs<ExtArgs>>): Prisma__BusinessBankInformationClient<$Result.GetResult<Prisma.$BusinessBankInformationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    business_commercial_relationships<T extends businesses$business_commercial_relationshipsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_commercial_relationshipsArgs<ExtArgs>>): Prisma__business_commercial_relationshipsClient<$Result.GetResult<Prisma.$business_commercial_relationshipsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    business_compliance<T extends businesses$business_complianceArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_complianceArgs<ExtArgs>>): Prisma__business_complianceClient<$Result.GetResult<Prisma.$business_compliancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    business_configurations<T extends businesses$business_configurationsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_configurationsArgs<ExtArgs>>): Prisma__business_configurationsClient<$Result.GetResult<Prisma.$business_configurationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    business_employees<T extends businesses$business_employeesArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_employeesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employeesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_employees_clock_records<T extends businesses$business_employees_clock_recordsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_employees_clock_recordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_employees_clock_recordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_general_sales_reports_ai<T extends businesses$business_general_sales_reports_aiArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_general_sales_reports_aiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralSalesReportAIPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_general_warehouse_reports_ai<T extends businesses$business_general_warehouse_reports_aiArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_general_warehouse_reports_aiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessGeneralWarehouseReportAIPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_licenses<T extends businesses$business_licensesArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_licensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessLicensePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_menu_categories<T extends businesses$business_menu_categoriesArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_menu_categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_menus<T extends businesses$business_menusArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_menusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessMenuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_paying_companies<T extends businesses$business_paying_companiesArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_paying_companiesArgs<ExtArgs>>): Prisma__BusinessPayingCompanyClient<$Result.GetResult<Prisma.$BusinessPayingCompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    business_payment_history<T extends businesses$business_payment_historyArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_payment_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_payment_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_payment_history_details<T extends businesses$business_payment_history_detailsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_payment_history_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPaymentHistoryDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_phone_ids<T extends businesses$business_phone_idsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_phone_idsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_phone_idsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_products<T extends businesses$business_productsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_supplier_information<T extends businesses$business_supplier_informationArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_supplier_informationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supplier_informationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_supplier_pictures<T extends businesses$business_supplier_picturesArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_supplier_picturesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessSupplierPicturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_supporting_documents<T extends businesses$business_supporting_documentsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_supporting_documentsArgs<ExtArgs>>): Prisma__business_supporting_documentsClient<$Result.GetResult<Prisma.$business_supporting_documentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    business_supporting_documents_attached<T extends businesses$business_supporting_documents_attachedArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_supporting_documents_attachedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$business_supporting_documents_attachedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    business_warehouse_replenishment_reports_ai<T extends businesses$business_warehouse_replenishment_reports_aiArgs<ExtArgs> = {}>(args?: Subset<T, businesses$business_warehouse_replenishment_reports_aiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessWarehouseReplenishmentReportAIPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client_order_product_lines<T extends businesses$client_order_product_linesArgs<ExtArgs> = {}>(args?: Subset<T, businesses$client_order_product_linesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client_order_thermal_printers<T extends businesses$client_order_thermal_printersArgs<ExtArgs> = {}>(args?: Subset<T, businesses$client_order_thermal_printersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client_order_tickets<T extends businesses$client_order_ticketsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$client_order_ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client_order_transactions<T extends businesses$client_order_transactionsArgs<ExtArgs> = {}>(args?: Subset<T, businesses$client_order_transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client_orders<T extends businesses$client_ordersArgs<ExtArgs> = {}>(args?: Subset<T, businesses$client_ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the businesses model
   */
  interface businessesFieldRefs {
    readonly id: FieldRef<"businesses", 'String'>
    readonly legalName: FieldRef<"businesses", 'String'>
    readonly taxId: FieldRef<"businesses", 'String'>
    readonly phone: FieldRef<"businesses", 'String'>
    readonly email: FieldRef<"businesses", 'String'>
    readonly registeredAddress: FieldRef<"businesses", 'String'>
    readonly countryOfIncorporation: FieldRef<"businesses", 'String'>
    readonly legalForm: FieldRef<"businesses", 'String'>
    readonly legalRepresentative: FieldRef<"businesses", 'Json'>
    readonly createdAt: FieldRef<"businesses", 'DateTime'>
    readonly updatedAt: FieldRef<"businesses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * businesses findUnique
   */
  export type businessesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * Filter, which businesses to fetch.
     */
    where: businessesWhereUniqueInput
  }

  /**
   * businesses findUniqueOrThrow
   */
  export type businessesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * Filter, which businesses to fetch.
     */
    where: businessesWhereUniqueInput
  }

  /**
   * businesses findFirst
   */
  export type businessesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * Filter, which businesses to fetch.
     */
    where?: businessesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of businesses to fetch.
     */
    orderBy?: businessesOrderByWithRelationInput | businessesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for businesses.
     */
    cursor?: businessesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of businesses.
     */
    distinct?: BusinessesScalarFieldEnum | BusinessesScalarFieldEnum[]
  }

  /**
   * businesses findFirstOrThrow
   */
  export type businessesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * Filter, which businesses to fetch.
     */
    where?: businessesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of businesses to fetch.
     */
    orderBy?: businessesOrderByWithRelationInput | businessesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for businesses.
     */
    cursor?: businessesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of businesses.
     */
    distinct?: BusinessesScalarFieldEnum | BusinessesScalarFieldEnum[]
  }

  /**
   * businesses findMany
   */
  export type businessesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * Filter, which businesses to fetch.
     */
    where?: businessesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of businesses to fetch.
     */
    orderBy?: businessesOrderByWithRelationInput | businessesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing businesses.
     */
    cursor?: businessesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` businesses.
     */
    skip?: number
    distinct?: BusinessesScalarFieldEnum | BusinessesScalarFieldEnum[]
  }

  /**
   * businesses create
   */
  export type businessesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * The data needed to create a businesses.
     */
    data: XOR<businessesCreateInput, businessesUncheckedCreateInput>
  }

  /**
   * businesses createMany
   */
  export type businessesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many businesses.
     */
    data: businessesCreateManyInput | businessesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * businesses createManyAndReturn
   */
  export type businessesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * The data used to create many businesses.
     */
    data: businessesCreateManyInput | businessesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * businesses update
   */
  export type businessesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * The data needed to update a businesses.
     */
    data: XOR<businessesUpdateInput, businessesUncheckedUpdateInput>
    /**
     * Choose, which businesses to update.
     */
    where: businessesWhereUniqueInput
  }

  /**
   * businesses updateMany
   */
  export type businessesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update businesses.
     */
    data: XOR<businessesUpdateManyMutationInput, businessesUncheckedUpdateManyInput>
    /**
     * Filter which businesses to update
     */
    where?: businessesWhereInput
    /**
     * Limit how many businesses to update.
     */
    limit?: number
  }

  /**
   * businesses updateManyAndReturn
   */
  export type businessesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * The data used to update businesses.
     */
    data: XOR<businessesUpdateManyMutationInput, businessesUncheckedUpdateManyInput>
    /**
     * Filter which businesses to update
     */
    where?: businessesWhereInput
    /**
     * Limit how many businesses to update.
     */
    limit?: number
  }

  /**
   * businesses upsert
   */
  export type businessesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * The filter to search for the businesses to update in case it exists.
     */
    where: businessesWhereUniqueInput
    /**
     * In case the businesses found by the `where` argument doesn't exist, create a new businesses with this data.
     */
    create: XOR<businessesCreateInput, businessesUncheckedCreateInput>
    /**
     * In case the businesses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<businessesUpdateInput, businessesUncheckedUpdateInput>
  }

  /**
   * businesses delete
   */
  export type businessesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
    /**
     * Filter which businesses to delete.
     */
    where: businessesWhereUniqueInput
  }

  /**
   * businesses deleteMany
   */
  export type businessesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which businesses to delete
     */
    where?: businessesWhereInput
    /**
     * Limit how many businesses to delete.
     */
    limit?: number
  }

  /**
   * businesses.business_bank_information
   */
  export type businesses$business_bank_informationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessBankInformation
     */
    select?: BusinessBankInformationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessBankInformation
     */
    omit?: BusinessBankInformationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessBankInformationInclude<ExtArgs> | null
    where?: BusinessBankInformationWhereInput
  }

  /**
   * businesses.business_commercial_relationships
   */
  export type businesses$business_commercial_relationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_commercial_relationships
     */
    select?: business_commercial_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_commercial_relationships
     */
    omit?: business_commercial_relationshipsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_commercial_relationshipsInclude<ExtArgs> | null
    where?: business_commercial_relationshipsWhereInput
  }

  /**
   * businesses.business_compliance
   */
  export type businesses$business_complianceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_compliance
     */
    select?: business_complianceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_compliance
     */
    omit?: business_complianceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_complianceInclude<ExtArgs> | null
    where?: business_complianceWhereInput
  }

  /**
   * businesses.business_configurations
   */
  export type businesses$business_configurationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_configurations
     */
    select?: business_configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_configurations
     */
    omit?: business_configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_configurationsInclude<ExtArgs> | null
    where?: business_configurationsWhereInput
  }

  /**
   * businesses.business_employees
   */
  export type businesses$business_employeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees
     */
    select?: business_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees
     */
    omit?: business_employeesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employeesInclude<ExtArgs> | null
    where?: business_employeesWhereInput
    orderBy?: business_employeesOrderByWithRelationInput | business_employeesOrderByWithRelationInput[]
    cursor?: business_employeesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_employeesScalarFieldEnum | Business_employeesScalarFieldEnum[]
  }

  /**
   * businesses.business_employees_clock_records
   */
  export type businesses$business_employees_clock_recordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_employees_clock_records
     */
    select?: business_employees_clock_recordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_employees_clock_records
     */
    omit?: business_employees_clock_recordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_employees_clock_recordsInclude<ExtArgs> | null
    where?: business_employees_clock_recordsWhereInput
    orderBy?: business_employees_clock_recordsOrderByWithRelationInput | business_employees_clock_recordsOrderByWithRelationInput[]
    cursor?: business_employees_clock_recordsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_employees_clock_recordsScalarFieldEnum | Business_employees_clock_recordsScalarFieldEnum[]
  }

  /**
   * businesses.business_general_sales_reports_ai
   */
  export type businesses$business_general_sales_reports_aiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralSalesReportAI
     */
    select?: BusinessGeneralSalesReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralSalesReportAI
     */
    omit?: BusinessGeneralSalesReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralSalesReportAIInclude<ExtArgs> | null
    where?: BusinessGeneralSalesReportAIWhereInput
    orderBy?: BusinessGeneralSalesReportAIOrderByWithRelationInput | BusinessGeneralSalesReportAIOrderByWithRelationInput[]
    cursor?: BusinessGeneralSalesReportAIWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessGeneralSalesReportAIScalarFieldEnum | BusinessGeneralSalesReportAIScalarFieldEnum[]
  }

  /**
   * businesses.business_general_warehouse_reports_ai
   */
  export type businesses$business_general_warehouse_reports_aiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessGeneralWarehouseReportAI
     */
    select?: BusinessGeneralWarehouseReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessGeneralWarehouseReportAI
     */
    omit?: BusinessGeneralWarehouseReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessGeneralWarehouseReportAIInclude<ExtArgs> | null
    where?: BusinessGeneralWarehouseReportAIWhereInput
    orderBy?: BusinessGeneralWarehouseReportAIOrderByWithRelationInput | BusinessGeneralWarehouseReportAIOrderByWithRelationInput[]
    cursor?: BusinessGeneralWarehouseReportAIWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessGeneralWarehouseReportAIScalarFieldEnum | BusinessGeneralWarehouseReportAIScalarFieldEnum[]
  }

  /**
   * businesses.business_licenses
   */
  export type businesses$business_licensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessLicense
     */
    select?: BusinessLicenseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessLicense
     */
    omit?: BusinessLicenseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessLicenseInclude<ExtArgs> | null
    where?: BusinessLicenseWhereInput
    orderBy?: BusinessLicenseOrderByWithRelationInput | BusinessLicenseOrderByWithRelationInput[]
    cursor?: BusinessLicenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessLicenseScalarFieldEnum | BusinessLicenseScalarFieldEnum[]
  }

  /**
   * businesses.business_menu_categories
   */
  export type businesses$business_menu_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenuCategory
     */
    select?: BusinessMenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenuCategory
     */
    omit?: BusinessMenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuCategoryInclude<ExtArgs> | null
    where?: BusinessMenuCategoryWhereInput
    orderBy?: BusinessMenuCategoryOrderByWithRelationInput | BusinessMenuCategoryOrderByWithRelationInput[]
    cursor?: BusinessMenuCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessMenuCategoryScalarFieldEnum | BusinessMenuCategoryScalarFieldEnum[]
  }

  /**
   * businesses.business_menus
   */
  export type businesses$business_menusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessMenu
     */
    select?: BusinessMenuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessMenu
     */
    omit?: BusinessMenuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessMenuInclude<ExtArgs> | null
    where?: BusinessMenuWhereInput
    orderBy?: BusinessMenuOrderByWithRelationInput | BusinessMenuOrderByWithRelationInput[]
    cursor?: BusinessMenuWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessMenuScalarFieldEnum | BusinessMenuScalarFieldEnum[]
  }

  /**
   * businesses.business_paying_companies
   */
  export type businesses$business_paying_companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPayingCompany
     */
    select?: BusinessPayingCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPayingCompany
     */
    omit?: BusinessPayingCompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPayingCompanyInclude<ExtArgs> | null
    where?: BusinessPayingCompanyWhereInput
  }

  /**
   * businesses.business_payment_history
   */
  export type businesses$business_payment_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_payment_history
     */
    select?: business_payment_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_payment_history
     */
    omit?: business_payment_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_payment_historyInclude<ExtArgs> | null
    where?: business_payment_historyWhereInput
    orderBy?: business_payment_historyOrderByWithRelationInput | business_payment_historyOrderByWithRelationInput[]
    cursor?: business_payment_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_payment_historyScalarFieldEnum | Business_payment_historyScalarFieldEnum[]
  }

  /**
   * businesses.business_payment_history_details
   */
  export type businesses$business_payment_history_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPaymentHistoryDetail
     */
    select?: BusinessPaymentHistoryDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessPaymentHistoryDetail
     */
    omit?: BusinessPaymentHistoryDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPaymentHistoryDetailInclude<ExtArgs> | null
    where?: BusinessPaymentHistoryDetailWhereInput
    orderBy?: BusinessPaymentHistoryDetailOrderByWithRelationInput | BusinessPaymentHistoryDetailOrderByWithRelationInput[]
    cursor?: BusinessPaymentHistoryDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessPaymentHistoryDetailScalarFieldEnum | BusinessPaymentHistoryDetailScalarFieldEnum[]
  }

  /**
   * businesses.business_phone_ids
   */
  export type businesses$business_phone_idsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_phone_ids
     */
    select?: business_phone_idsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_phone_ids
     */
    omit?: business_phone_idsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_phone_idsInclude<ExtArgs> | null
    where?: business_phone_idsWhereInput
    orderBy?: business_phone_idsOrderByWithRelationInput | business_phone_idsOrderByWithRelationInput[]
    cursor?: business_phone_idsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_phone_idsScalarFieldEnum | Business_phone_idsScalarFieldEnum[]
  }

  /**
   * businesses.business_products
   */
  export type businesses$business_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessProduct
     */
    select?: BusinessProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessProduct
     */
    omit?: BusinessProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessProductInclude<ExtArgs> | null
    where?: BusinessProductWhereInput
    orderBy?: BusinessProductOrderByWithRelationInput | BusinessProductOrderByWithRelationInput[]
    cursor?: BusinessProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessProductScalarFieldEnum | BusinessProductScalarFieldEnum[]
  }

  /**
   * businesses.business_supplier_information
   */
  export type businesses$business_supplier_informationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supplier_information
     */
    select?: business_supplier_informationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supplier_information
     */
    omit?: business_supplier_informationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supplier_informationInclude<ExtArgs> | null
    where?: business_supplier_informationWhereInput
    orderBy?: business_supplier_informationOrderByWithRelationInput | business_supplier_informationOrderByWithRelationInput[]
    cursor?: business_supplier_informationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_supplier_informationScalarFieldEnum | Business_supplier_informationScalarFieldEnum[]
  }

  /**
   * businesses.business_supplier_pictures
   */
  export type businesses$business_supplier_picturesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessSupplierPicture
     */
    select?: BusinessSupplierPictureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessSupplierPicture
     */
    omit?: BusinessSupplierPictureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessSupplierPictureInclude<ExtArgs> | null
    where?: BusinessSupplierPictureWhereInput
    orderBy?: BusinessSupplierPictureOrderByWithRelationInput | BusinessSupplierPictureOrderByWithRelationInput[]
    cursor?: BusinessSupplierPictureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessSupplierPictureScalarFieldEnum | BusinessSupplierPictureScalarFieldEnum[]
  }

  /**
   * businesses.business_supporting_documents
   */
  export type businesses$business_supporting_documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents
     */
    select?: business_supporting_documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents
     */
    omit?: business_supporting_documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documentsInclude<ExtArgs> | null
    where?: business_supporting_documentsWhereInput
  }

  /**
   * businesses.business_supporting_documents_attached
   */
  export type businesses$business_supporting_documents_attachedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the business_supporting_documents_attached
     */
    select?: business_supporting_documents_attachedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the business_supporting_documents_attached
     */
    omit?: business_supporting_documents_attachedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: business_supporting_documents_attachedInclude<ExtArgs> | null
    where?: business_supporting_documents_attachedWhereInput
    orderBy?: business_supporting_documents_attachedOrderByWithRelationInput | business_supporting_documents_attachedOrderByWithRelationInput[]
    cursor?: business_supporting_documents_attachedWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Business_supporting_documents_attachedScalarFieldEnum | Business_supporting_documents_attachedScalarFieldEnum[]
  }

  /**
   * businesses.business_warehouse_replenishment_reports_ai
   */
  export type businesses$business_warehouse_replenishment_reports_aiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessWarehouseReplenishmentReportAI
     */
    select?: BusinessWarehouseReplenishmentReportAISelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessWarehouseReplenishmentReportAI
     */
    omit?: BusinessWarehouseReplenishmentReportAIOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessWarehouseReplenishmentReportAIInclude<ExtArgs> | null
    where?: BusinessWarehouseReplenishmentReportAIWhereInput
    orderBy?: BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput | BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput[]
    cursor?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessWarehouseReplenishmentReportAIScalarFieldEnum | BusinessWarehouseReplenishmentReportAIScalarFieldEnum[]
  }

  /**
   * businesses.client_order_product_lines
   */
  export type businesses$client_order_product_linesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    where?: client_order_product_linesWhereInput
    orderBy?: client_order_product_linesOrderByWithRelationInput | client_order_product_linesOrderByWithRelationInput[]
    cursor?: client_order_product_linesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Client_order_product_linesScalarFieldEnum | Client_order_product_linesScalarFieldEnum[]
  }

  /**
   * businesses.client_order_thermal_printers
   */
  export type businesses$client_order_thermal_printersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    where?: client_order_thermal_printersWhereInput
    orderBy?: client_order_thermal_printersOrderByWithRelationInput | client_order_thermal_printersOrderByWithRelationInput[]
    cursor?: client_order_thermal_printersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Client_order_thermal_printersScalarFieldEnum | Client_order_thermal_printersScalarFieldEnum[]
  }

  /**
   * businesses.client_order_tickets
   */
  export type businesses$client_order_ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTicket
     */
    select?: ClientOrderTicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTicket
     */
    omit?: ClientOrderTicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTicketInclude<ExtArgs> | null
    where?: ClientOrderTicketWhereInput
    orderBy?: ClientOrderTicketOrderByWithRelationInput | ClientOrderTicketOrderByWithRelationInput[]
    cursor?: ClientOrderTicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientOrderTicketScalarFieldEnum | ClientOrderTicketScalarFieldEnum[]
  }

  /**
   * businesses.client_order_transactions
   */
  export type businesses$client_order_transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrderTransaction
     */
    select?: ClientOrderTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrderTransaction
     */
    omit?: ClientOrderTransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderTransactionInclude<ExtArgs> | null
    where?: ClientOrderTransactionWhereInput
    orderBy?: ClientOrderTransactionOrderByWithRelationInput | ClientOrderTransactionOrderByWithRelationInput[]
    cursor?: ClientOrderTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientOrderTransactionScalarFieldEnum | ClientOrderTransactionScalarFieldEnum[]
  }

  /**
   * businesses.client_orders
   */
  export type businesses$client_ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientOrder
     */
    select?: ClientOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientOrder
     */
    omit?: ClientOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientOrderInclude<ExtArgs> | null
    where?: ClientOrderWhereInput
    orderBy?: ClientOrderOrderByWithRelationInput | ClientOrderOrderByWithRelationInput[]
    cursor?: ClientOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientOrderScalarFieldEnum | ClientOrderScalarFieldEnum[]
  }

  /**
   * businesses without action
   */
  export type businessesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the businesses
     */
    select?: businessesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the businesses
     */
    omit?: businessesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: businessesInclude<ExtArgs> | null
  }


  /**
   * Model client_order_product_lines
   */

  export type AggregateClient_order_product_lines = {
    _count: Client_order_product_linesCountAggregateOutputType | null
    _avg: Client_order_product_linesAvgAggregateOutputType | null
    _sum: Client_order_product_linesSumAggregateOutputType | null
    _min: Client_order_product_linesMinAggregateOutputType | null
    _max: Client_order_product_linesMaxAggregateOutputType | null
  }

  export type Client_order_product_linesAvgAggregateOutputType = {
    quantity: number | null
    subtotal: number | null
  }

  export type Client_order_product_linesSumAggregateOutputType = {
    quantity: number | null
    subtotal: number | null
  }

  export type Client_order_product_linesMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    quantity: number | null
    subtotal: number | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Client_order_product_linesMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    quantity: number | null
    subtotal: number | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Client_order_product_linesCountAggregateOutputType = {
    id: number
    orderId: number
    productSnapshot: number
    quantity: number
    subtotal: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Client_order_product_linesAvgAggregateInputType = {
    quantity?: true
    subtotal?: true
  }

  export type Client_order_product_linesSumAggregateInputType = {
    quantity?: true
    subtotal?: true
  }

  export type Client_order_product_linesMinAggregateInputType = {
    id?: true
    orderId?: true
    quantity?: true
    subtotal?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Client_order_product_linesMaxAggregateInputType = {
    id?: true
    orderId?: true
    quantity?: true
    subtotal?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Client_order_product_linesCountAggregateInputType = {
    id?: true
    orderId?: true
    productSnapshot?: true
    quantity?: true
    subtotal?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Client_order_product_linesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which client_order_product_lines to aggregate.
     */
    where?: client_order_product_linesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_product_lines to fetch.
     */
    orderBy?: client_order_product_linesOrderByWithRelationInput | client_order_product_linesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: client_order_product_linesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_product_lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_product_lines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned client_order_product_lines
    **/
    _count?: true | Client_order_product_linesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Client_order_product_linesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Client_order_product_linesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Client_order_product_linesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Client_order_product_linesMaxAggregateInputType
  }

  export type GetClient_order_product_linesAggregateType<T extends Client_order_product_linesAggregateArgs> = {
        [P in keyof T & keyof AggregateClient_order_product_lines]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient_order_product_lines[P]>
      : GetScalarType<T[P], AggregateClient_order_product_lines[P]>
  }




  export type client_order_product_linesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: client_order_product_linesWhereInput
    orderBy?: client_order_product_linesOrderByWithAggregationInput | client_order_product_linesOrderByWithAggregationInput[]
    by: Client_order_product_linesScalarFieldEnum[] | Client_order_product_linesScalarFieldEnum
    having?: client_order_product_linesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Client_order_product_linesCountAggregateInputType | true
    _avg?: Client_order_product_linesAvgAggregateInputType
    _sum?: Client_order_product_linesSumAggregateInputType
    _min?: Client_order_product_linesMinAggregateInputType
    _max?: Client_order_product_linesMaxAggregateInputType
  }

  export type Client_order_product_linesGroupByOutputType = {
    id: string
    orderId: string
    productSnapshot: JsonValue
    quantity: number
    subtotal: number
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Client_order_product_linesCountAggregateOutputType | null
    _avg: Client_order_product_linesAvgAggregateOutputType | null
    _sum: Client_order_product_linesSumAggregateOutputType | null
    _min: Client_order_product_linesMinAggregateOutputType | null
    _max: Client_order_product_linesMaxAggregateOutputType | null
  }

  type GetClient_order_product_linesGroupByPayload<T extends client_order_product_linesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Client_order_product_linesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Client_order_product_linesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Client_order_product_linesGroupByOutputType[P]>
            : GetScalarType<T[P], Client_order_product_linesGroupByOutputType[P]>
        }
      >
    >


  export type client_order_product_linesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    subtotal?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client_order_product_lines"]>

  export type client_order_product_linesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    subtotal?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client_order_product_lines"]>

  export type client_order_product_linesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    subtotal?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client_order_product_lines"]>

  export type client_order_product_linesSelectScalar = {
    id?: boolean
    orderId?: boolean
    productSnapshot?: boolean
    quantity?: boolean
    subtotal?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type client_order_product_linesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "productSnapshot" | "quantity" | "subtotal" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["client_order_product_lines"]>
  export type client_order_product_linesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type client_order_product_linesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type client_order_product_linesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }

  export type $client_order_product_linesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "client_order_product_lines"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      client_orders: Prisma.$ClientOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      productSnapshot: Prisma.JsonValue
      quantity: number
      subtotal: number
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["client_order_product_lines"]>
    composites: {}
  }

  type client_order_product_linesGetPayload<S extends boolean | null | undefined | client_order_product_linesDefaultArgs> = $Result.GetResult<Prisma.$client_order_product_linesPayload, S>

  type client_order_product_linesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<client_order_product_linesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Client_order_product_linesCountAggregateInputType | true
    }

  export interface client_order_product_linesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['client_order_product_lines'], meta: { name: 'client_order_product_lines' } }
    /**
     * Find zero or one Client_order_product_lines that matches the filter.
     * @param {client_order_product_linesFindUniqueArgs} args - Arguments to find a Client_order_product_lines
     * @example
     * // Get one Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends client_order_product_linesFindUniqueArgs>(args: SelectSubset<T, client_order_product_linesFindUniqueArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Client_order_product_lines that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {client_order_product_linesFindUniqueOrThrowArgs} args - Arguments to find a Client_order_product_lines
     * @example
     * // Get one Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends client_order_product_linesFindUniqueOrThrowArgs>(args: SelectSubset<T, client_order_product_linesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client_order_product_lines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_product_linesFindFirstArgs} args - Arguments to find a Client_order_product_lines
     * @example
     * // Get one Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends client_order_product_linesFindFirstArgs>(args?: SelectSubset<T, client_order_product_linesFindFirstArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client_order_product_lines that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_product_linesFindFirstOrThrowArgs} args - Arguments to find a Client_order_product_lines
     * @example
     * // Get one Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends client_order_product_linesFindFirstOrThrowArgs>(args?: SelectSubset<T, client_order_product_linesFindFirstOrThrowArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Client_order_product_lines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_product_linesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.findMany()
     * 
     * // Get first 10 Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const client_order_product_linesWithIdOnly = await prisma.client_order_product_lines.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends client_order_product_linesFindManyArgs>(args?: SelectSubset<T, client_order_product_linesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Client_order_product_lines.
     * @param {client_order_product_linesCreateArgs} args - Arguments to create a Client_order_product_lines.
     * @example
     * // Create one Client_order_product_lines
     * const Client_order_product_lines = await prisma.client_order_product_lines.create({
     *   data: {
     *     // ... data to create a Client_order_product_lines
     *   }
     * })
     * 
     */
    create<T extends client_order_product_linesCreateArgs>(args: SelectSubset<T, client_order_product_linesCreateArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Client_order_product_lines.
     * @param {client_order_product_linesCreateManyArgs} args - Arguments to create many Client_order_product_lines.
     * @example
     * // Create many Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends client_order_product_linesCreateManyArgs>(args?: SelectSubset<T, client_order_product_linesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Client_order_product_lines and returns the data saved in the database.
     * @param {client_order_product_linesCreateManyAndReturnArgs} args - Arguments to create many Client_order_product_lines.
     * @example
     * // Create many Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Client_order_product_lines and only return the `id`
     * const client_order_product_linesWithIdOnly = await prisma.client_order_product_lines.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends client_order_product_linesCreateManyAndReturnArgs>(args?: SelectSubset<T, client_order_product_linesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Client_order_product_lines.
     * @param {client_order_product_linesDeleteArgs} args - Arguments to delete one Client_order_product_lines.
     * @example
     * // Delete one Client_order_product_lines
     * const Client_order_product_lines = await prisma.client_order_product_lines.delete({
     *   where: {
     *     // ... filter to delete one Client_order_product_lines
     *   }
     * })
     * 
     */
    delete<T extends client_order_product_linesDeleteArgs>(args: SelectSubset<T, client_order_product_linesDeleteArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Client_order_product_lines.
     * @param {client_order_product_linesUpdateArgs} args - Arguments to update one Client_order_product_lines.
     * @example
     * // Update one Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends client_order_product_linesUpdateArgs>(args: SelectSubset<T, client_order_product_linesUpdateArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Client_order_product_lines.
     * @param {client_order_product_linesDeleteManyArgs} args - Arguments to filter Client_order_product_lines to delete.
     * @example
     * // Delete a few Client_order_product_lines
     * const { count } = await prisma.client_order_product_lines.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends client_order_product_linesDeleteManyArgs>(args?: SelectSubset<T, client_order_product_linesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Client_order_product_lines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_product_linesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends client_order_product_linesUpdateManyArgs>(args: SelectSubset<T, client_order_product_linesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Client_order_product_lines and returns the data updated in the database.
     * @param {client_order_product_linesUpdateManyAndReturnArgs} args - Arguments to update many Client_order_product_lines.
     * @example
     * // Update many Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Client_order_product_lines and only return the `id`
     * const client_order_product_linesWithIdOnly = await prisma.client_order_product_lines.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends client_order_product_linesUpdateManyAndReturnArgs>(args: SelectSubset<T, client_order_product_linesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Client_order_product_lines.
     * @param {client_order_product_linesUpsertArgs} args - Arguments to update or create a Client_order_product_lines.
     * @example
     * // Update or create a Client_order_product_lines
     * const client_order_product_lines = await prisma.client_order_product_lines.upsert({
     *   create: {
     *     // ... data to create a Client_order_product_lines
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client_order_product_lines we want to update
     *   }
     * })
     */
    upsert<T extends client_order_product_linesUpsertArgs>(args: SelectSubset<T, client_order_product_linesUpsertArgs<ExtArgs>>): Prisma__client_order_product_linesClient<$Result.GetResult<Prisma.$client_order_product_linesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Client_order_product_lines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_product_linesCountArgs} args - Arguments to filter Client_order_product_lines to count.
     * @example
     * // Count the number of Client_order_product_lines
     * const count = await prisma.client_order_product_lines.count({
     *   where: {
     *     // ... the filter for the Client_order_product_lines we want to count
     *   }
     * })
    **/
    count<T extends client_order_product_linesCountArgs>(
      args?: Subset<T, client_order_product_linesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Client_order_product_linesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client_order_product_lines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Client_order_product_linesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Client_order_product_linesAggregateArgs>(args: Subset<T, Client_order_product_linesAggregateArgs>): Prisma.PrismaPromise<GetClient_order_product_linesAggregateType<T>>

    /**
     * Group by Client_order_product_lines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_product_linesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends client_order_product_linesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: client_order_product_linesGroupByArgs['orderBy'] }
        : { orderBy?: client_order_product_linesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, client_order_product_linesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClient_order_product_linesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the client_order_product_lines model
   */
  readonly fields: client_order_product_linesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for client_order_product_lines.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__client_order_product_linesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client_orders<T extends ClientOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrderDefaultArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the client_order_product_lines model
   */
  interface client_order_product_linesFieldRefs {
    readonly id: FieldRef<"client_order_product_lines", 'String'>
    readonly orderId: FieldRef<"client_order_product_lines", 'String'>
    readonly productSnapshot: FieldRef<"client_order_product_lines", 'Json'>
    readonly quantity: FieldRef<"client_order_product_lines", 'Int'>
    readonly subtotal: FieldRef<"client_order_product_lines", 'Float'>
    readonly businessId: FieldRef<"client_order_product_lines", 'String'>
    readonly createdAt: FieldRef<"client_order_product_lines", 'DateTime'>
    readonly updatedAt: FieldRef<"client_order_product_lines", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * client_order_product_lines findUnique
   */
  export type client_order_product_linesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * Filter, which client_order_product_lines to fetch.
     */
    where: client_order_product_linesWhereUniqueInput
  }

  /**
   * client_order_product_lines findUniqueOrThrow
   */
  export type client_order_product_linesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * Filter, which client_order_product_lines to fetch.
     */
    where: client_order_product_linesWhereUniqueInput
  }

  /**
   * client_order_product_lines findFirst
   */
  export type client_order_product_linesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * Filter, which client_order_product_lines to fetch.
     */
    where?: client_order_product_linesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_product_lines to fetch.
     */
    orderBy?: client_order_product_linesOrderByWithRelationInput | client_order_product_linesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for client_order_product_lines.
     */
    cursor?: client_order_product_linesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_product_lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_product_lines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of client_order_product_lines.
     */
    distinct?: Client_order_product_linesScalarFieldEnum | Client_order_product_linesScalarFieldEnum[]
  }

  /**
   * client_order_product_lines findFirstOrThrow
   */
  export type client_order_product_linesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * Filter, which client_order_product_lines to fetch.
     */
    where?: client_order_product_linesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_product_lines to fetch.
     */
    orderBy?: client_order_product_linesOrderByWithRelationInput | client_order_product_linesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for client_order_product_lines.
     */
    cursor?: client_order_product_linesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_product_lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_product_lines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of client_order_product_lines.
     */
    distinct?: Client_order_product_linesScalarFieldEnum | Client_order_product_linesScalarFieldEnum[]
  }

  /**
   * client_order_product_lines findMany
   */
  export type client_order_product_linesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * Filter, which client_order_product_lines to fetch.
     */
    where?: client_order_product_linesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_product_lines to fetch.
     */
    orderBy?: client_order_product_linesOrderByWithRelationInput | client_order_product_linesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing client_order_product_lines.
     */
    cursor?: client_order_product_linesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_product_lines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_product_lines.
     */
    skip?: number
    distinct?: Client_order_product_linesScalarFieldEnum | Client_order_product_linesScalarFieldEnum[]
  }

  /**
   * client_order_product_lines create
   */
  export type client_order_product_linesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * The data needed to create a client_order_product_lines.
     */
    data: XOR<client_order_product_linesCreateInput, client_order_product_linesUncheckedCreateInput>
  }

  /**
   * client_order_product_lines createMany
   */
  export type client_order_product_linesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many client_order_product_lines.
     */
    data: client_order_product_linesCreateManyInput | client_order_product_linesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * client_order_product_lines createManyAndReturn
   */
  export type client_order_product_linesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * The data used to create many client_order_product_lines.
     */
    data: client_order_product_linesCreateManyInput | client_order_product_linesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * client_order_product_lines update
   */
  export type client_order_product_linesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * The data needed to update a client_order_product_lines.
     */
    data: XOR<client_order_product_linesUpdateInput, client_order_product_linesUncheckedUpdateInput>
    /**
     * Choose, which client_order_product_lines to update.
     */
    where: client_order_product_linesWhereUniqueInput
  }

  /**
   * client_order_product_lines updateMany
   */
  export type client_order_product_linesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update client_order_product_lines.
     */
    data: XOR<client_order_product_linesUpdateManyMutationInput, client_order_product_linesUncheckedUpdateManyInput>
    /**
     * Filter which client_order_product_lines to update
     */
    where?: client_order_product_linesWhereInput
    /**
     * Limit how many client_order_product_lines to update.
     */
    limit?: number
  }

  /**
   * client_order_product_lines updateManyAndReturn
   */
  export type client_order_product_linesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * The data used to update client_order_product_lines.
     */
    data: XOR<client_order_product_linesUpdateManyMutationInput, client_order_product_linesUncheckedUpdateManyInput>
    /**
     * Filter which client_order_product_lines to update
     */
    where?: client_order_product_linesWhereInput
    /**
     * Limit how many client_order_product_lines to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * client_order_product_lines upsert
   */
  export type client_order_product_linesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * The filter to search for the client_order_product_lines to update in case it exists.
     */
    where: client_order_product_linesWhereUniqueInput
    /**
     * In case the client_order_product_lines found by the `where` argument doesn't exist, create a new client_order_product_lines with this data.
     */
    create: XOR<client_order_product_linesCreateInput, client_order_product_linesUncheckedCreateInput>
    /**
     * In case the client_order_product_lines was found with the provided `where` argument, update it with this data.
     */
    update: XOR<client_order_product_linesUpdateInput, client_order_product_linesUncheckedUpdateInput>
  }

  /**
   * client_order_product_lines delete
   */
  export type client_order_product_linesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
    /**
     * Filter which client_order_product_lines to delete.
     */
    where: client_order_product_linesWhereUniqueInput
  }

  /**
   * client_order_product_lines deleteMany
   */
  export type client_order_product_linesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which client_order_product_lines to delete
     */
    where?: client_order_product_linesWhereInput
    /**
     * Limit how many client_order_product_lines to delete.
     */
    limit?: number
  }

  /**
   * client_order_product_lines without action
   */
  export type client_order_product_linesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_product_lines
     */
    select?: client_order_product_linesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_product_lines
     */
    omit?: client_order_product_linesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_product_linesInclude<ExtArgs> | null
  }


  /**
   * Model client_order_thermal_printers
   */

  export type AggregateClient_order_thermal_printers = {
    _count: Client_order_thermal_printersCountAggregateOutputType | null
    _min: Client_order_thermal_printersMinAggregateOutputType | null
    _max: Client_order_thermal_printersMaxAggregateOutputType | null
  }

  export type Client_order_thermal_printersMinAggregateOutputType = {
    orderId: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Client_order_thermal_printersMaxAggregateOutputType = {
    orderId: string | null
    businessId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Client_order_thermal_printersCountAggregateOutputType = {
    orderId: number
    printers: number
    businessId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Client_order_thermal_printersMinAggregateInputType = {
    orderId?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Client_order_thermal_printersMaxAggregateInputType = {
    orderId?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Client_order_thermal_printersCountAggregateInputType = {
    orderId?: true
    printers?: true
    businessId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Client_order_thermal_printersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which client_order_thermal_printers to aggregate.
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_thermal_printers to fetch.
     */
    orderBy?: client_order_thermal_printersOrderByWithRelationInput | client_order_thermal_printersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: client_order_thermal_printersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_thermal_printers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_thermal_printers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned client_order_thermal_printers
    **/
    _count?: true | Client_order_thermal_printersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Client_order_thermal_printersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Client_order_thermal_printersMaxAggregateInputType
  }

  export type GetClient_order_thermal_printersAggregateType<T extends Client_order_thermal_printersAggregateArgs> = {
        [P in keyof T & keyof AggregateClient_order_thermal_printers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient_order_thermal_printers[P]>
      : GetScalarType<T[P], AggregateClient_order_thermal_printers[P]>
  }




  export type client_order_thermal_printersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: client_order_thermal_printersWhereInput
    orderBy?: client_order_thermal_printersOrderByWithAggregationInput | client_order_thermal_printersOrderByWithAggregationInput[]
    by: Client_order_thermal_printersScalarFieldEnum[] | Client_order_thermal_printersScalarFieldEnum
    having?: client_order_thermal_printersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Client_order_thermal_printersCountAggregateInputType | true
    _min?: Client_order_thermal_printersMinAggregateInputType
    _max?: Client_order_thermal_printersMaxAggregateInputType
  }

  export type Client_order_thermal_printersGroupByOutputType = {
    orderId: string
    printers: string[]
    businessId: string
    createdAt: Date
    updatedAt: Date
    _count: Client_order_thermal_printersCountAggregateOutputType | null
    _min: Client_order_thermal_printersMinAggregateOutputType | null
    _max: Client_order_thermal_printersMaxAggregateOutputType | null
  }

  type GetClient_order_thermal_printersGroupByPayload<T extends client_order_thermal_printersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Client_order_thermal_printersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Client_order_thermal_printersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Client_order_thermal_printersGroupByOutputType[P]>
            : GetScalarType<T[P], Client_order_thermal_printersGroupByOutputType[P]>
        }
      >
    >


  export type client_order_thermal_printersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    printers?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client_order_thermal_printers"]>

  export type client_order_thermal_printersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    printers?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client_order_thermal_printers"]>

  export type client_order_thermal_printersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    printers?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client_order_thermal_printers"]>

  export type client_order_thermal_printersSelectScalar = {
    orderId?: boolean
    printers?: boolean
    businessId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type client_order_thermal_printersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"orderId" | "printers" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["client_order_thermal_printers"]>
  export type client_order_thermal_printersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type client_order_thermal_printersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }
  export type client_order_thermal_printersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businesses?: boolean | businessesDefaultArgs<ExtArgs>
    client_orders?: boolean | ClientOrderDefaultArgs<ExtArgs>
  }

  export type $client_order_thermal_printersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "client_order_thermal_printers"
    objects: {
      businesses: Prisma.$businessesPayload<ExtArgs>
      client_orders: Prisma.$ClientOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      orderId: string
      printers: string[]
      businessId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["client_order_thermal_printers"]>
    composites: {}
  }

  type client_order_thermal_printersGetPayload<S extends boolean | null | undefined | client_order_thermal_printersDefaultArgs> = $Result.GetResult<Prisma.$client_order_thermal_printersPayload, S>

  type client_order_thermal_printersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<client_order_thermal_printersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Client_order_thermal_printersCountAggregateInputType | true
    }

  export interface client_order_thermal_printersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['client_order_thermal_printers'], meta: { name: 'client_order_thermal_printers' } }
    /**
     * Find zero or one Client_order_thermal_printers that matches the filter.
     * @param {client_order_thermal_printersFindUniqueArgs} args - Arguments to find a Client_order_thermal_printers
     * @example
     * // Get one Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends client_order_thermal_printersFindUniqueArgs>(args: SelectSubset<T, client_order_thermal_printersFindUniqueArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Client_order_thermal_printers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {client_order_thermal_printersFindUniqueOrThrowArgs} args - Arguments to find a Client_order_thermal_printers
     * @example
     * // Get one Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends client_order_thermal_printersFindUniqueOrThrowArgs>(args: SelectSubset<T, client_order_thermal_printersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client_order_thermal_printers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_thermal_printersFindFirstArgs} args - Arguments to find a Client_order_thermal_printers
     * @example
     * // Get one Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends client_order_thermal_printersFindFirstArgs>(args?: SelectSubset<T, client_order_thermal_printersFindFirstArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client_order_thermal_printers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_thermal_printersFindFirstOrThrowArgs} args - Arguments to find a Client_order_thermal_printers
     * @example
     * // Get one Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends client_order_thermal_printersFindFirstOrThrowArgs>(args?: SelectSubset<T, client_order_thermal_printersFindFirstOrThrowArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Client_order_thermal_printers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_thermal_printersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findMany()
     * 
     * // Get first 10 Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.findMany({ take: 10 })
     * 
     * // Only select the `orderId`
     * const client_order_thermal_printersWithOrderIdOnly = await prisma.client_order_thermal_printers.findMany({ select: { orderId: true } })
     * 
     */
    findMany<T extends client_order_thermal_printersFindManyArgs>(args?: SelectSubset<T, client_order_thermal_printersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Client_order_thermal_printers.
     * @param {client_order_thermal_printersCreateArgs} args - Arguments to create a Client_order_thermal_printers.
     * @example
     * // Create one Client_order_thermal_printers
     * const Client_order_thermal_printers = await prisma.client_order_thermal_printers.create({
     *   data: {
     *     // ... data to create a Client_order_thermal_printers
     *   }
     * })
     * 
     */
    create<T extends client_order_thermal_printersCreateArgs>(args: SelectSubset<T, client_order_thermal_printersCreateArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Client_order_thermal_printers.
     * @param {client_order_thermal_printersCreateManyArgs} args - Arguments to create many Client_order_thermal_printers.
     * @example
     * // Create many Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends client_order_thermal_printersCreateManyArgs>(args?: SelectSubset<T, client_order_thermal_printersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Client_order_thermal_printers and returns the data saved in the database.
     * @param {client_order_thermal_printersCreateManyAndReturnArgs} args - Arguments to create many Client_order_thermal_printers.
     * @example
     * // Create many Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Client_order_thermal_printers and only return the `orderId`
     * const client_order_thermal_printersWithOrderIdOnly = await prisma.client_order_thermal_printers.createManyAndReturn({
     *   select: { orderId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends client_order_thermal_printersCreateManyAndReturnArgs>(args?: SelectSubset<T, client_order_thermal_printersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Client_order_thermal_printers.
     * @param {client_order_thermal_printersDeleteArgs} args - Arguments to delete one Client_order_thermal_printers.
     * @example
     * // Delete one Client_order_thermal_printers
     * const Client_order_thermal_printers = await prisma.client_order_thermal_printers.delete({
     *   where: {
     *     // ... filter to delete one Client_order_thermal_printers
     *   }
     * })
     * 
     */
    delete<T extends client_order_thermal_printersDeleteArgs>(args: SelectSubset<T, client_order_thermal_printersDeleteArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Client_order_thermal_printers.
     * @param {client_order_thermal_printersUpdateArgs} args - Arguments to update one Client_order_thermal_printers.
     * @example
     * // Update one Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends client_order_thermal_printersUpdateArgs>(args: SelectSubset<T, client_order_thermal_printersUpdateArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Client_order_thermal_printers.
     * @param {client_order_thermal_printersDeleteManyArgs} args - Arguments to filter Client_order_thermal_printers to delete.
     * @example
     * // Delete a few Client_order_thermal_printers
     * const { count } = await prisma.client_order_thermal_printers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends client_order_thermal_printersDeleteManyArgs>(args?: SelectSubset<T, client_order_thermal_printersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Client_order_thermal_printers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_thermal_printersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends client_order_thermal_printersUpdateManyArgs>(args: SelectSubset<T, client_order_thermal_printersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Client_order_thermal_printers and returns the data updated in the database.
     * @param {client_order_thermal_printersUpdateManyAndReturnArgs} args - Arguments to update many Client_order_thermal_printers.
     * @example
     * // Update many Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Client_order_thermal_printers and only return the `orderId`
     * const client_order_thermal_printersWithOrderIdOnly = await prisma.client_order_thermal_printers.updateManyAndReturn({
     *   select: { orderId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends client_order_thermal_printersUpdateManyAndReturnArgs>(args: SelectSubset<T, client_order_thermal_printersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Client_order_thermal_printers.
     * @param {client_order_thermal_printersUpsertArgs} args - Arguments to update or create a Client_order_thermal_printers.
     * @example
     * // Update or create a Client_order_thermal_printers
     * const client_order_thermal_printers = await prisma.client_order_thermal_printers.upsert({
     *   create: {
     *     // ... data to create a Client_order_thermal_printers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client_order_thermal_printers we want to update
     *   }
     * })
     */
    upsert<T extends client_order_thermal_printersUpsertArgs>(args: SelectSubset<T, client_order_thermal_printersUpsertArgs<ExtArgs>>): Prisma__client_order_thermal_printersClient<$Result.GetResult<Prisma.$client_order_thermal_printersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Client_order_thermal_printers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_thermal_printersCountArgs} args - Arguments to filter Client_order_thermal_printers to count.
     * @example
     * // Count the number of Client_order_thermal_printers
     * const count = await prisma.client_order_thermal_printers.count({
     *   where: {
     *     // ... the filter for the Client_order_thermal_printers we want to count
     *   }
     * })
    **/
    count<T extends client_order_thermal_printersCountArgs>(
      args?: Subset<T, client_order_thermal_printersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Client_order_thermal_printersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client_order_thermal_printers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Client_order_thermal_printersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Client_order_thermal_printersAggregateArgs>(args: Subset<T, Client_order_thermal_printersAggregateArgs>): Prisma.PrismaPromise<GetClient_order_thermal_printersAggregateType<T>>

    /**
     * Group by Client_order_thermal_printers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {client_order_thermal_printersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends client_order_thermal_printersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: client_order_thermal_printersGroupByArgs['orderBy'] }
        : { orderBy?: client_order_thermal_printersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, client_order_thermal_printersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClient_order_thermal_printersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the client_order_thermal_printers model
   */
  readonly fields: client_order_thermal_printersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for client_order_thermal_printers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__client_order_thermal_printersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businesses<T extends businessesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, businessesDefaultArgs<ExtArgs>>): Prisma__businessesClient<$Result.GetResult<Prisma.$businessesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client_orders<T extends ClientOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientOrderDefaultArgs<ExtArgs>>): Prisma__ClientOrderClient<$Result.GetResult<Prisma.$ClientOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the client_order_thermal_printers model
   */
  interface client_order_thermal_printersFieldRefs {
    readonly orderId: FieldRef<"client_order_thermal_printers", 'String'>
    readonly printers: FieldRef<"client_order_thermal_printers", 'String[]'>
    readonly businessId: FieldRef<"client_order_thermal_printers", 'String'>
    readonly createdAt: FieldRef<"client_order_thermal_printers", 'DateTime'>
    readonly updatedAt: FieldRef<"client_order_thermal_printers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * client_order_thermal_printers findUnique
   */
  export type client_order_thermal_printersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * Filter, which client_order_thermal_printers to fetch.
     */
    where: client_order_thermal_printersWhereUniqueInput
  }

  /**
   * client_order_thermal_printers findUniqueOrThrow
   */
  export type client_order_thermal_printersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * Filter, which client_order_thermal_printers to fetch.
     */
    where: client_order_thermal_printersWhereUniqueInput
  }

  /**
   * client_order_thermal_printers findFirst
   */
  export type client_order_thermal_printersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * Filter, which client_order_thermal_printers to fetch.
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_thermal_printers to fetch.
     */
    orderBy?: client_order_thermal_printersOrderByWithRelationInput | client_order_thermal_printersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for client_order_thermal_printers.
     */
    cursor?: client_order_thermal_printersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_thermal_printers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_thermal_printers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of client_order_thermal_printers.
     */
    distinct?: Client_order_thermal_printersScalarFieldEnum | Client_order_thermal_printersScalarFieldEnum[]
  }

  /**
   * client_order_thermal_printers findFirstOrThrow
   */
  export type client_order_thermal_printersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * Filter, which client_order_thermal_printers to fetch.
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_thermal_printers to fetch.
     */
    orderBy?: client_order_thermal_printersOrderByWithRelationInput | client_order_thermal_printersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for client_order_thermal_printers.
     */
    cursor?: client_order_thermal_printersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_thermal_printers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_thermal_printers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of client_order_thermal_printers.
     */
    distinct?: Client_order_thermal_printersScalarFieldEnum | Client_order_thermal_printersScalarFieldEnum[]
  }

  /**
   * client_order_thermal_printers findMany
   */
  export type client_order_thermal_printersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * Filter, which client_order_thermal_printers to fetch.
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of client_order_thermal_printers to fetch.
     */
    orderBy?: client_order_thermal_printersOrderByWithRelationInput | client_order_thermal_printersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing client_order_thermal_printers.
     */
    cursor?: client_order_thermal_printersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` client_order_thermal_printers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` client_order_thermal_printers.
     */
    skip?: number
    distinct?: Client_order_thermal_printersScalarFieldEnum | Client_order_thermal_printersScalarFieldEnum[]
  }

  /**
   * client_order_thermal_printers create
   */
  export type client_order_thermal_printersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * The data needed to create a client_order_thermal_printers.
     */
    data: XOR<client_order_thermal_printersCreateInput, client_order_thermal_printersUncheckedCreateInput>
  }

  /**
   * client_order_thermal_printers createMany
   */
  export type client_order_thermal_printersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many client_order_thermal_printers.
     */
    data: client_order_thermal_printersCreateManyInput | client_order_thermal_printersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * client_order_thermal_printers createManyAndReturn
   */
  export type client_order_thermal_printersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * The data used to create many client_order_thermal_printers.
     */
    data: client_order_thermal_printersCreateManyInput | client_order_thermal_printersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * client_order_thermal_printers update
   */
  export type client_order_thermal_printersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * The data needed to update a client_order_thermal_printers.
     */
    data: XOR<client_order_thermal_printersUpdateInput, client_order_thermal_printersUncheckedUpdateInput>
    /**
     * Choose, which client_order_thermal_printers to update.
     */
    where: client_order_thermal_printersWhereUniqueInput
  }

  /**
   * client_order_thermal_printers updateMany
   */
  export type client_order_thermal_printersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update client_order_thermal_printers.
     */
    data: XOR<client_order_thermal_printersUpdateManyMutationInput, client_order_thermal_printersUncheckedUpdateManyInput>
    /**
     * Filter which client_order_thermal_printers to update
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * Limit how many client_order_thermal_printers to update.
     */
    limit?: number
  }

  /**
   * client_order_thermal_printers updateManyAndReturn
   */
  export type client_order_thermal_printersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * The data used to update client_order_thermal_printers.
     */
    data: XOR<client_order_thermal_printersUpdateManyMutationInput, client_order_thermal_printersUncheckedUpdateManyInput>
    /**
     * Filter which client_order_thermal_printers to update
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * Limit how many client_order_thermal_printers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * client_order_thermal_printers upsert
   */
  export type client_order_thermal_printersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * The filter to search for the client_order_thermal_printers to update in case it exists.
     */
    where: client_order_thermal_printersWhereUniqueInput
    /**
     * In case the client_order_thermal_printers found by the `where` argument doesn't exist, create a new client_order_thermal_printers with this data.
     */
    create: XOR<client_order_thermal_printersCreateInput, client_order_thermal_printersUncheckedCreateInput>
    /**
     * In case the client_order_thermal_printers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<client_order_thermal_printersUpdateInput, client_order_thermal_printersUncheckedUpdateInput>
  }

  /**
   * client_order_thermal_printers delete
   */
  export type client_order_thermal_printersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
    /**
     * Filter which client_order_thermal_printers to delete.
     */
    where: client_order_thermal_printersWhereUniqueInput
  }

  /**
   * client_order_thermal_printers deleteMany
   */
  export type client_order_thermal_printersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which client_order_thermal_printers to delete
     */
    where?: client_order_thermal_printersWhereInput
    /**
     * Limit how many client_order_thermal_printers to delete.
     */
    limit?: number
  }

  /**
   * client_order_thermal_printers without action
   */
  export type client_order_thermal_printersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the client_order_thermal_printers
     */
    select?: client_order_thermal_printersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the client_order_thermal_printers
     */
    omit?: client_order_thermal_printersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: client_order_thermal_printersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const BusinessBankInformationScalarFieldEnum: {
    id: 'id',
    bankName: 'bankName',
    ibanOrAccountNumber: 'ibanOrAccountNumber',
    swiftBic: 'swiftBic',
    accountHolderName: 'accountHolderName',
    bankAddress: 'bankAddress',
    currency: 'currency',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessBankInformationScalarFieldEnum = (typeof BusinessBankInformationScalarFieldEnum)[keyof typeof BusinessBankInformationScalarFieldEnum]


  export const BusinessPaymentHistoryDetailScalarFieldEnum: {
    id: 'id',
    description: 'description',
    amount: 'amount',
    currency: 'currency',
    taxesIncluded: 'taxesIncluded',
    periodStart: 'periodStart',
    periodEnd: 'periodEnd',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessPaymentHistoryDetailScalarFieldEnum = (typeof BusinessPaymentHistoryDetailScalarFieldEnum)[keyof typeof BusinessPaymentHistoryDetailScalarFieldEnum]


  export const BusinessLicenseScalarFieldEnum: {
    id: 'id',
    stripeCustomerId: 'stripeCustomerId',
    stripeSubscriptionId: 'stripeSubscriptionId',
    stripePaymentIntentId: 'stripePaymentIntentId',
    licenseType: 'licenseType',
    plan: 'plan',
    status: 'status',
    startDate: 'startDate',
    endDate: 'endDate',
    isPaid: 'isPaid',
    lockinMonths: 'lockinMonths',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessLicenseScalarFieldEnum = (typeof BusinessLicenseScalarFieldEnum)[keyof typeof BusinessLicenseScalarFieldEnum]


  export const BusinessPayingCompanyScalarFieldEnum: {
    id: 'id',
    legalName: 'legalName',
    taxId: 'taxId',
    country: 'country',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessPayingCompanyScalarFieldEnum = (typeof BusinessPayingCompanyScalarFieldEnum)[keyof typeof BusinessPayingCompanyScalarFieldEnum]


  export const ClientOrderScalarFieldEnum: {
    id: 'id',
    status: 'status',
    informationNotes: 'informationNotes',
    tableServed: 'tableServed',
    employeeServed: 'employeeServed',
    refund: 'refund',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClientOrderScalarFieldEnum = (typeof ClientOrderScalarFieldEnum)[keyof typeof ClientOrderScalarFieldEnum]


  export const ClientOrderTicketScalarFieldEnum: {
    orderId: 'orderId',
    tickets: 'tickets',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClientOrderTicketScalarFieldEnum = (typeof ClientOrderTicketScalarFieldEnum)[keyof typeof ClientOrderTicketScalarFieldEnum]


  export const ClientOrderTransactionScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    externalTransactionId: 'externalTransactionId',
    transactionAmount: 'transactionAmount',
    transactionCurrencyIso: 'transactionCurrencyIso',
    status: 'status',
    paymentMethod: 'paymentMethod',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClientOrderTransactionScalarFieldEnum = (typeof ClientOrderTransactionScalarFieldEnum)[keyof typeof ClientOrderTransactionScalarFieldEnum]


  export const BusinessSupplierPictureScalarFieldEnum: {
    id: 'id',
    supplierId: 'supplierId',
    url: 'url',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessSupplierPictureScalarFieldEnum = (typeof BusinessSupplierPictureScalarFieldEnum)[keyof typeof BusinessSupplierPictureScalarFieldEnum]


  export const BusinessMenuScalarFieldEnum: {
    id: 'id',
    title: 'title',
    tags: 'tags',
    nameLastModificationEmployee: 'nameLastModificationEmployee',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessMenuScalarFieldEnum = (typeof BusinessMenuScalarFieldEnum)[keyof typeof BusinessMenuScalarFieldEnum]


  export const BusinessMenuCategoryScalarFieldEnum: {
    id: 'id',
    menuId: 'menuId',
    vip: 'vip',
    haveSchedule: 'haveSchedule',
    schedule: 'schedule',
    nameLastModificationEmployee: 'nameLastModificationEmployee',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessMenuCategoryScalarFieldEnum = (typeof BusinessMenuCategoryScalarFieldEnum)[keyof typeof BusinessMenuCategoryScalarFieldEnum]


  export const BusinessProductScalarFieldEnum: {
    id: 'id',
    menuId: 'menuId',
    name: 'name',
    unityAmount: 'unityAmount',
    stockBatches: 'stockBatches',
    expirationDates: 'expirationDates',
    unityConsumeStock: 'unityConsumeStock',
    typeUnitConsumeMeasurement: 'typeUnitConsumeMeasurement',
    tags: 'tags',
    nameLastModificationEmployee: 'nameLastModificationEmployee',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessProductScalarFieldEnum = (typeof BusinessProductScalarFieldEnum)[keyof typeof BusinessProductScalarFieldEnum]


  export const BusinessGeneralSalesReportAIScalarFieldEnum: {
    id: 'id',
    url: 'url',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessGeneralSalesReportAIScalarFieldEnum = (typeof BusinessGeneralSalesReportAIScalarFieldEnum)[keyof typeof BusinessGeneralSalesReportAIScalarFieldEnum]


  export const BusinessGeneralWarehouseReportAIScalarFieldEnum: {
    id: 'id',
    url: 'url',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessGeneralWarehouseReportAIScalarFieldEnum = (typeof BusinessGeneralWarehouseReportAIScalarFieldEnum)[keyof typeof BusinessGeneralWarehouseReportAIScalarFieldEnum]


  export const BusinessWarehouseReplenishmentReportAIScalarFieldEnum: {
    id: 'id',
    url: 'url',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessWarehouseReplenishmentReportAIScalarFieldEnum = (typeof BusinessWarehouseReplenishmentReportAIScalarFieldEnum)[keyof typeof BusinessWarehouseReplenishmentReportAIScalarFieldEnum]


  export const Business_commercial_relationship_documents_attachedScalarFieldEnum: {
    id: 'id',
    url: 'url',
    commercialRelationshipId: 'commercialRelationshipId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_commercial_relationship_documents_attachedScalarFieldEnum = (typeof Business_commercial_relationship_documents_attachedScalarFieldEnum)[keyof typeof Business_commercial_relationship_documents_attachedScalarFieldEnum]


  export const Business_commercial_relationshipsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    signedContract: 'signedContract',
    thirdPartyPaymentPermission: 'thirdPartyPaymentPermission',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_commercial_relationshipsScalarFieldEnum = (typeof Business_commercial_relationshipsScalarFieldEnum)[keyof typeof Business_commercial_relationshipsScalarFieldEnum]


  export const Business_complianceScalarFieldEnum: {
    id: 'id',
    kycVerified: 'kycVerified',
    amlApproved: 'amlApproved',
    taxWithholdingApplicable: 'taxWithholdingApplicable',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_complianceScalarFieldEnum = (typeof Business_complianceScalarFieldEnum)[keyof typeof Business_complianceScalarFieldEnum]


  export const Business_configurationsScalarFieldEnum: {
    id: 'id',
    wifi: 'wifi',
    schedule: 'schedule',
    functionsActivated: 'functionsActivated',
    apiKey: 'apiKey',
    affiliate: 'affiliate',
    maxPhonesDevices: 'maxPhonesDevices',
    displayUsername: 'displayUsername',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_configurationsScalarFieldEnum = (typeof Business_configurationsScalarFieldEnum)[keyof typeof Business_configurationsScalarFieldEnum]


  export const Business_employeesScalarFieldEnum: {
    id: 'id',
    nameEmployee: 'nameEmployee',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_employeesScalarFieldEnum = (typeof Business_employeesScalarFieldEnum)[keyof typeof Business_employeesScalarFieldEnum]


  export const Business_employees_clock_recordsScalarFieldEnum: {
    id: 'id',
    employeeId: 'employeeId',
    recordTime: 'recordTime',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_employees_clock_recordsScalarFieldEnum = (typeof Business_employees_clock_recordsScalarFieldEnum)[keyof typeof Business_employees_clock_recordsScalarFieldEnum]


  export const Business_payment_historyScalarFieldEnum: {
    id: 'id',
    businessId: 'businessId',
    paymentDetailId: 'paymentDetailId',
    amount: 'amount',
    currency: 'currency',
    type: 'type',
    status: 'status',
    stripeInvoiceId: 'stripeInvoiceId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_payment_historyScalarFieldEnum = (typeof Business_payment_historyScalarFieldEnum)[keyof typeof Business_payment_historyScalarFieldEnum]


  export const Business_phone_idsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_phone_idsScalarFieldEnum = (typeof Business_phone_idsScalarFieldEnum)[keyof typeof Business_phone_idsScalarFieldEnum]


  export const Business_supplier_informationScalarFieldEnum: {
    id: 'id',
    inUse: 'inUse',
    title: 'title',
    description: 'description',
    schedule: 'schedule',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_supplier_informationScalarFieldEnum = (typeof Business_supplier_informationScalarFieldEnum)[keyof typeof Business_supplier_informationScalarFieldEnum]


  export const Business_supporting_documentsScalarFieldEnum: {
    id: 'id',
    serviceContract: 'serviceContract',
    issuedInvoice: 'issuedInvoice',
    thirdPartyPaymentAgreement: 'thirdPartyPaymentAgreement',
    ultimateBeneficialOwnerCertificate: 'ultimateBeneficialOwnerCertificate',
    businessLicense: 'businessLicense',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_supporting_documentsScalarFieldEnum = (typeof Business_supporting_documentsScalarFieldEnum)[keyof typeof Business_supporting_documentsScalarFieldEnum]


  export const Business_supporting_documents_attachedScalarFieldEnum: {
    id: 'id',
    url: 'url',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Business_supporting_documents_attachedScalarFieldEnum = (typeof Business_supporting_documents_attachedScalarFieldEnum)[keyof typeof Business_supporting_documents_attachedScalarFieldEnum]


  export const BusinessesScalarFieldEnum: {
    id: 'id',
    legalName: 'legalName',
    taxId: 'taxId',
    phone: 'phone',
    email: 'email',
    registeredAddress: 'registeredAddress',
    countryOfIncorporation: 'countryOfIncorporation',
    legalForm: 'legalForm',
    legalRepresentative: 'legalRepresentative',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessesScalarFieldEnum = (typeof BusinessesScalarFieldEnum)[keyof typeof BusinessesScalarFieldEnum]


  export const Client_order_product_linesScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productSnapshot: 'productSnapshot',
    quantity: 'quantity',
    subtotal: 'subtotal',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Client_order_product_linesScalarFieldEnum = (typeof Client_order_product_linesScalarFieldEnum)[keyof typeof Client_order_product_linesScalarFieldEnum]


  export const Client_order_thermal_printersScalarFieldEnum: {
    orderId: 'orderId',
    printers: 'printers',
    businessId: 'businessId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Client_order_thermal_printersScalarFieldEnum = (typeof Client_order_thermal_printersScalarFieldEnum)[keyof typeof Client_order_thermal_printersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'LicenseType'
   */
  export type EnumLicenseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicenseType'>
    


  /**
   * Reference to a field of type 'LicenseType[]'
   */
  export type ListEnumLicenseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicenseType[]'>
    


  /**
   * Reference to a field of type 'LicensePlan'
   */
  export type EnumLicensePlanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicensePlan'>
    


  /**
   * Reference to a field of type 'LicensePlan[]'
   */
  export type ListEnumLicensePlanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicensePlan[]'>
    


  /**
   * Reference to a field of type 'LicenseStatus'
   */
  export type EnumLicenseStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicenseStatus'>
    


  /**
   * Reference to a field of type 'LicenseStatus[]'
   */
  export type ListEnumLicenseStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicenseStatus[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'TransactionStatus'
   */
  export type EnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus'>
    


  /**
   * Reference to a field of type 'TransactionStatus[]'
   */
  export type ListEnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    
  /**
   * Deep Input Types
   */


  export type BusinessBankInformationWhereInput = {
    AND?: BusinessBankInformationWhereInput | BusinessBankInformationWhereInput[]
    OR?: BusinessBankInformationWhereInput[]
    NOT?: BusinessBankInformationWhereInput | BusinessBankInformationWhereInput[]
    id?: StringFilter<"BusinessBankInformation"> | string
    bankName?: StringFilter<"BusinessBankInformation"> | string
    ibanOrAccountNumber?: StringFilter<"BusinessBankInformation"> | string
    swiftBic?: StringNullableFilter<"BusinessBankInformation"> | string | null
    accountHolderName?: StringFilter<"BusinessBankInformation"> | string
    bankAddress?: StringNullableFilter<"BusinessBankInformation"> | string | null
    currency?: StringFilter<"BusinessBankInformation"> | string
    createdAt?: DateTimeFilter<"BusinessBankInformation"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessBankInformation"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessBankInformationOrderByWithRelationInput = {
    id?: SortOrder
    bankName?: SortOrder
    ibanOrAccountNumber?: SortOrder
    swiftBic?: SortOrderInput | SortOrder
    accountHolderName?: SortOrder
    bankAddress?: SortOrderInput | SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessBankInformationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessBankInformationWhereInput | BusinessBankInformationWhereInput[]
    OR?: BusinessBankInformationWhereInput[]
    NOT?: BusinessBankInformationWhereInput | BusinessBankInformationWhereInput[]
    bankName?: StringFilter<"BusinessBankInformation"> | string
    ibanOrAccountNumber?: StringFilter<"BusinessBankInformation"> | string
    swiftBic?: StringNullableFilter<"BusinessBankInformation"> | string | null
    accountHolderName?: StringFilter<"BusinessBankInformation"> | string
    bankAddress?: StringNullableFilter<"BusinessBankInformation"> | string | null
    currency?: StringFilter<"BusinessBankInformation"> | string
    createdAt?: DateTimeFilter<"BusinessBankInformation"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessBankInformation"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type BusinessBankInformationOrderByWithAggregationInput = {
    id?: SortOrder
    bankName?: SortOrder
    ibanOrAccountNumber?: SortOrder
    swiftBic?: SortOrderInput | SortOrder
    accountHolderName?: SortOrder
    bankAddress?: SortOrderInput | SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessBankInformationCountOrderByAggregateInput
    _max?: BusinessBankInformationMaxOrderByAggregateInput
    _min?: BusinessBankInformationMinOrderByAggregateInput
  }

  export type BusinessBankInformationScalarWhereWithAggregatesInput = {
    AND?: BusinessBankInformationScalarWhereWithAggregatesInput | BusinessBankInformationScalarWhereWithAggregatesInput[]
    OR?: BusinessBankInformationScalarWhereWithAggregatesInput[]
    NOT?: BusinessBankInformationScalarWhereWithAggregatesInput | BusinessBankInformationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessBankInformation"> | string
    bankName?: StringWithAggregatesFilter<"BusinessBankInformation"> | string
    ibanOrAccountNumber?: StringWithAggregatesFilter<"BusinessBankInformation"> | string
    swiftBic?: StringNullableWithAggregatesFilter<"BusinessBankInformation"> | string | null
    accountHolderName?: StringWithAggregatesFilter<"BusinessBankInformation"> | string
    bankAddress?: StringNullableWithAggregatesFilter<"BusinessBankInformation"> | string | null
    currency?: StringWithAggregatesFilter<"BusinessBankInformation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessBankInformation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessBankInformation"> | Date | string
  }

  export type BusinessPaymentHistoryDetailWhereInput = {
    AND?: BusinessPaymentHistoryDetailWhereInput | BusinessPaymentHistoryDetailWhereInput[]
    OR?: BusinessPaymentHistoryDetailWhereInput[]
    NOT?: BusinessPaymentHistoryDetailWhereInput | BusinessPaymentHistoryDetailWhereInput[]
    id?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    description?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    amount?: FloatFilter<"BusinessPaymentHistoryDetail"> | number
    currency?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    taxesIncluded?: BoolNullableFilter<"BusinessPaymentHistoryDetail"> | boolean | null
    periodStart?: DateTimeNullableFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    periodEnd?: DateTimeNullableFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    businessId?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    createdAt?: DateTimeFilter<"BusinessPaymentHistoryDetail"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPaymentHistoryDetail"> | Date | string
    business_payment_history?: Business_payment_historyListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessPaymentHistoryDetailOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    taxesIncluded?: SortOrderInput | SortOrder
    periodStart?: SortOrderInput | SortOrder
    periodEnd?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    business_payment_history?: business_payment_historyOrderByRelationAggregateInput
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessPaymentHistoryDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessPaymentHistoryDetailWhereInput | BusinessPaymentHistoryDetailWhereInput[]
    OR?: BusinessPaymentHistoryDetailWhereInput[]
    NOT?: BusinessPaymentHistoryDetailWhereInput | BusinessPaymentHistoryDetailWhereInput[]
    description?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    amount?: FloatFilter<"BusinessPaymentHistoryDetail"> | number
    currency?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    taxesIncluded?: BoolNullableFilter<"BusinessPaymentHistoryDetail"> | boolean | null
    periodStart?: DateTimeNullableFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    periodEnd?: DateTimeNullableFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    businessId?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    createdAt?: DateTimeFilter<"BusinessPaymentHistoryDetail"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPaymentHistoryDetail"> | Date | string
    business_payment_history?: Business_payment_historyListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type BusinessPaymentHistoryDetailOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    taxesIncluded?: SortOrderInput | SortOrder
    periodStart?: SortOrderInput | SortOrder
    periodEnd?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessPaymentHistoryDetailCountOrderByAggregateInput
    _avg?: BusinessPaymentHistoryDetailAvgOrderByAggregateInput
    _max?: BusinessPaymentHistoryDetailMaxOrderByAggregateInput
    _min?: BusinessPaymentHistoryDetailMinOrderByAggregateInput
    _sum?: BusinessPaymentHistoryDetailSumOrderByAggregateInput
  }

  export type BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput = {
    AND?: BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput | BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput[]
    OR?: BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput[]
    NOT?: BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput | BusinessPaymentHistoryDetailScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | string
    description?: StringWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | string
    amount?: FloatWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | number
    currency?: StringWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | string
    taxesIncluded?: BoolNullableWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | boolean | null
    periodStart?: DateTimeNullableWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    periodEnd?: DateTimeNullableWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    businessId?: StringWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessPaymentHistoryDetail"> | Date | string
  }

  export type BusinessLicenseWhereInput = {
    AND?: BusinessLicenseWhereInput | BusinessLicenseWhereInput[]
    OR?: BusinessLicenseWhereInput[]
    NOT?: BusinessLicenseWhereInput | BusinessLicenseWhereInput[]
    id?: StringFilter<"BusinessLicense"> | string
    stripeCustomerId?: StringNullableFilter<"BusinessLicense"> | string | null
    stripeSubscriptionId?: StringNullableFilter<"BusinessLicense"> | string | null
    stripePaymentIntentId?: StringNullableFilter<"BusinessLicense"> | string | null
    licenseType?: EnumLicenseTypeFilter<"BusinessLicense"> | $Enums.LicenseType
    plan?: EnumLicensePlanFilter<"BusinessLicense"> | $Enums.LicensePlan
    status?: EnumLicenseStatusFilter<"BusinessLicense"> | $Enums.LicenseStatus
    startDate?: DateTimeFilter<"BusinessLicense"> | Date | string
    endDate?: DateTimeNullableFilter<"BusinessLicense"> | Date | string | null
    isPaid?: BoolFilter<"BusinessLicense"> | boolean
    lockinMonths?: IntNullableFilter<"BusinessLicense"> | number | null
    businessId?: StringFilter<"BusinessLicense"> | string
    createdAt?: DateTimeFilter<"BusinessLicense"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessLicense"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessLicenseOrderByWithRelationInput = {
    id?: SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    stripeSubscriptionId?: SortOrderInput | SortOrder
    stripePaymentIntentId?: SortOrderInput | SortOrder
    licenseType?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    isPaid?: SortOrder
    lockinMonths?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessLicenseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    stripeSubscriptionId?: string
    stripePaymentIntentId?: string
    AND?: BusinessLicenseWhereInput | BusinessLicenseWhereInput[]
    OR?: BusinessLicenseWhereInput[]
    NOT?: BusinessLicenseWhereInput | BusinessLicenseWhereInput[]
    stripeCustomerId?: StringNullableFilter<"BusinessLicense"> | string | null
    licenseType?: EnumLicenseTypeFilter<"BusinessLicense"> | $Enums.LicenseType
    plan?: EnumLicensePlanFilter<"BusinessLicense"> | $Enums.LicensePlan
    status?: EnumLicenseStatusFilter<"BusinessLicense"> | $Enums.LicenseStatus
    startDate?: DateTimeFilter<"BusinessLicense"> | Date | string
    endDate?: DateTimeNullableFilter<"BusinessLicense"> | Date | string | null
    isPaid?: BoolFilter<"BusinessLicense"> | boolean
    lockinMonths?: IntNullableFilter<"BusinessLicense"> | number | null
    businessId?: StringFilter<"BusinessLicense"> | string
    createdAt?: DateTimeFilter<"BusinessLicense"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessLicense"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id" | "stripeSubscriptionId" | "stripePaymentIntentId">

  export type BusinessLicenseOrderByWithAggregationInput = {
    id?: SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    stripeSubscriptionId?: SortOrderInput | SortOrder
    stripePaymentIntentId?: SortOrderInput | SortOrder
    licenseType?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    isPaid?: SortOrder
    lockinMonths?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessLicenseCountOrderByAggregateInput
    _avg?: BusinessLicenseAvgOrderByAggregateInput
    _max?: BusinessLicenseMaxOrderByAggregateInput
    _min?: BusinessLicenseMinOrderByAggregateInput
    _sum?: BusinessLicenseSumOrderByAggregateInput
  }

  export type BusinessLicenseScalarWhereWithAggregatesInput = {
    AND?: BusinessLicenseScalarWhereWithAggregatesInput | BusinessLicenseScalarWhereWithAggregatesInput[]
    OR?: BusinessLicenseScalarWhereWithAggregatesInput[]
    NOT?: BusinessLicenseScalarWhereWithAggregatesInput | BusinessLicenseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessLicense"> | string
    stripeCustomerId?: StringNullableWithAggregatesFilter<"BusinessLicense"> | string | null
    stripeSubscriptionId?: StringNullableWithAggregatesFilter<"BusinessLicense"> | string | null
    stripePaymentIntentId?: StringNullableWithAggregatesFilter<"BusinessLicense"> | string | null
    licenseType?: EnumLicenseTypeWithAggregatesFilter<"BusinessLicense"> | $Enums.LicenseType
    plan?: EnumLicensePlanWithAggregatesFilter<"BusinessLicense"> | $Enums.LicensePlan
    status?: EnumLicenseStatusWithAggregatesFilter<"BusinessLicense"> | $Enums.LicenseStatus
    startDate?: DateTimeWithAggregatesFilter<"BusinessLicense"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"BusinessLicense"> | Date | string | null
    isPaid?: BoolWithAggregatesFilter<"BusinessLicense"> | boolean
    lockinMonths?: IntNullableWithAggregatesFilter<"BusinessLicense"> | number | null
    businessId?: StringWithAggregatesFilter<"BusinessLicense"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessLicense"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessLicense"> | Date | string
  }

  export type BusinessPayingCompanyWhereInput = {
    AND?: BusinessPayingCompanyWhereInput | BusinessPayingCompanyWhereInput[]
    OR?: BusinessPayingCompanyWhereInput[]
    NOT?: BusinessPayingCompanyWhereInput | BusinessPayingCompanyWhereInput[]
    id?: StringFilter<"BusinessPayingCompany"> | string
    legalName?: StringFilter<"BusinessPayingCompany"> | string
    taxId?: StringFilter<"BusinessPayingCompany"> | string
    country?: StringFilter<"BusinessPayingCompany"> | string
    role?: StringFilter<"BusinessPayingCompany"> | string
    createdAt?: DateTimeFilter<"BusinessPayingCompany"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPayingCompany"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessPayingCompanyOrderByWithRelationInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessPayingCompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    taxId?: string
    AND?: BusinessPayingCompanyWhereInput | BusinessPayingCompanyWhereInput[]
    OR?: BusinessPayingCompanyWhereInput[]
    NOT?: BusinessPayingCompanyWhereInput | BusinessPayingCompanyWhereInput[]
    legalName?: StringFilter<"BusinessPayingCompany"> | string
    country?: StringFilter<"BusinessPayingCompany"> | string
    role?: StringFilter<"BusinessPayingCompany"> | string
    createdAt?: DateTimeFilter<"BusinessPayingCompany"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPayingCompany"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id" | "taxId">

  export type BusinessPayingCompanyOrderByWithAggregationInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessPayingCompanyCountOrderByAggregateInput
    _max?: BusinessPayingCompanyMaxOrderByAggregateInput
    _min?: BusinessPayingCompanyMinOrderByAggregateInput
  }

  export type BusinessPayingCompanyScalarWhereWithAggregatesInput = {
    AND?: BusinessPayingCompanyScalarWhereWithAggregatesInput | BusinessPayingCompanyScalarWhereWithAggregatesInput[]
    OR?: BusinessPayingCompanyScalarWhereWithAggregatesInput[]
    NOT?: BusinessPayingCompanyScalarWhereWithAggregatesInput | BusinessPayingCompanyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessPayingCompany"> | string
    legalName?: StringWithAggregatesFilter<"BusinessPayingCompany"> | string
    taxId?: StringWithAggregatesFilter<"BusinessPayingCompany"> | string
    country?: StringWithAggregatesFilter<"BusinessPayingCompany"> | string
    role?: StringWithAggregatesFilter<"BusinessPayingCompany"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessPayingCompany"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessPayingCompany"> | Date | string
  }

  export type ClientOrderWhereInput = {
    AND?: ClientOrderWhereInput | ClientOrderWhereInput[]
    OR?: ClientOrderWhereInput[]
    NOT?: ClientOrderWhereInput | ClientOrderWhereInput[]
    id?: StringFilter<"ClientOrder"> | string
    status?: EnumOrderStatusFilter<"ClientOrder"> | $Enums.OrderStatus
    informationNotes?: StringNullableFilter<"ClientOrder"> | string | null
    tableServed?: StringNullableFilter<"ClientOrder"> | string | null
    employeeServed?: StringNullableFilter<"ClientOrder"> | string | null
    refund?: BoolFilter<"ClientOrder"> | boolean
    businessId?: StringFilter<"ClientOrder"> | string
    createdAt?: DateTimeFilter<"ClientOrder"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrder"> | Date | string
    client_order_product_lines?: Client_order_product_linesListRelationFilter
    client_order_thermal_printers?: XOR<Client_order_thermal_printersNullableScalarRelationFilter, client_order_thermal_printersWhereInput> | null
    client_order_tickets?: XOR<ClientOrderTicketNullableScalarRelationFilter, ClientOrderTicketWhereInput> | null
    client_order_transactions?: ClientOrderTransactionListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type ClientOrderOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    informationNotes?: SortOrderInput | SortOrder
    tableServed?: SortOrderInput | SortOrder
    employeeServed?: SortOrderInput | SortOrder
    refund?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client_order_product_lines?: client_order_product_linesOrderByRelationAggregateInput
    client_order_thermal_printers?: client_order_thermal_printersOrderByWithRelationInput
    client_order_tickets?: ClientOrderTicketOrderByWithRelationInput
    client_order_transactions?: ClientOrderTransactionOrderByRelationAggregateInput
    businesses?: businessesOrderByWithRelationInput
  }

  export type ClientOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ClientOrderWhereInput | ClientOrderWhereInput[]
    OR?: ClientOrderWhereInput[]
    NOT?: ClientOrderWhereInput | ClientOrderWhereInput[]
    status?: EnumOrderStatusFilter<"ClientOrder"> | $Enums.OrderStatus
    informationNotes?: StringNullableFilter<"ClientOrder"> | string | null
    tableServed?: StringNullableFilter<"ClientOrder"> | string | null
    employeeServed?: StringNullableFilter<"ClientOrder"> | string | null
    refund?: BoolFilter<"ClientOrder"> | boolean
    businessId?: StringFilter<"ClientOrder"> | string
    createdAt?: DateTimeFilter<"ClientOrder"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrder"> | Date | string
    client_order_product_lines?: Client_order_product_linesListRelationFilter
    client_order_thermal_printers?: XOR<Client_order_thermal_printersNullableScalarRelationFilter, client_order_thermal_printersWhereInput> | null
    client_order_tickets?: XOR<ClientOrderTicketNullableScalarRelationFilter, ClientOrderTicketWhereInput> | null
    client_order_transactions?: ClientOrderTransactionListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type ClientOrderOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    informationNotes?: SortOrderInput | SortOrder
    tableServed?: SortOrderInput | SortOrder
    employeeServed?: SortOrderInput | SortOrder
    refund?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ClientOrderCountOrderByAggregateInput
    _max?: ClientOrderMaxOrderByAggregateInput
    _min?: ClientOrderMinOrderByAggregateInput
  }

  export type ClientOrderScalarWhereWithAggregatesInput = {
    AND?: ClientOrderScalarWhereWithAggregatesInput | ClientOrderScalarWhereWithAggregatesInput[]
    OR?: ClientOrderScalarWhereWithAggregatesInput[]
    NOT?: ClientOrderScalarWhereWithAggregatesInput | ClientOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ClientOrder"> | string
    status?: EnumOrderStatusWithAggregatesFilter<"ClientOrder"> | $Enums.OrderStatus
    informationNotes?: StringNullableWithAggregatesFilter<"ClientOrder"> | string | null
    tableServed?: StringNullableWithAggregatesFilter<"ClientOrder"> | string | null
    employeeServed?: StringNullableWithAggregatesFilter<"ClientOrder"> | string | null
    refund?: BoolWithAggregatesFilter<"ClientOrder"> | boolean
    businessId?: StringWithAggregatesFilter<"ClientOrder"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ClientOrder"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ClientOrder"> | Date | string
  }

  export type ClientOrderTicketWhereInput = {
    AND?: ClientOrderTicketWhereInput | ClientOrderTicketWhereInput[]
    OR?: ClientOrderTicketWhereInput[]
    NOT?: ClientOrderTicketWhereInput | ClientOrderTicketWhereInput[]
    orderId?: StringFilter<"ClientOrderTicket"> | string
    tickets?: JsonFilter<"ClientOrderTicket">
    businessId?: StringFilter<"ClientOrderTicket"> | string
    createdAt?: DateTimeFilter<"ClientOrderTicket"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrderTicket"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }

  export type ClientOrderTicketOrderByWithRelationInput = {
    orderId?: SortOrder
    tickets?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    client_orders?: ClientOrderOrderByWithRelationInput
  }

  export type ClientOrderTicketWhereUniqueInput = Prisma.AtLeast<{
    orderId?: string
    AND?: ClientOrderTicketWhereInput | ClientOrderTicketWhereInput[]
    OR?: ClientOrderTicketWhereInput[]
    NOT?: ClientOrderTicketWhereInput | ClientOrderTicketWhereInput[]
    tickets?: JsonFilter<"ClientOrderTicket">
    businessId?: StringFilter<"ClientOrderTicket"> | string
    createdAt?: DateTimeFilter<"ClientOrderTicket"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrderTicket"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }, "orderId">

  export type ClientOrderTicketOrderByWithAggregationInput = {
    orderId?: SortOrder
    tickets?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ClientOrderTicketCountOrderByAggregateInput
    _max?: ClientOrderTicketMaxOrderByAggregateInput
    _min?: ClientOrderTicketMinOrderByAggregateInput
  }

  export type ClientOrderTicketScalarWhereWithAggregatesInput = {
    AND?: ClientOrderTicketScalarWhereWithAggregatesInput | ClientOrderTicketScalarWhereWithAggregatesInput[]
    OR?: ClientOrderTicketScalarWhereWithAggregatesInput[]
    NOT?: ClientOrderTicketScalarWhereWithAggregatesInput | ClientOrderTicketScalarWhereWithAggregatesInput[]
    orderId?: StringWithAggregatesFilter<"ClientOrderTicket"> | string
    tickets?: JsonWithAggregatesFilter<"ClientOrderTicket">
    businessId?: StringWithAggregatesFilter<"ClientOrderTicket"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ClientOrderTicket"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ClientOrderTicket"> | Date | string
  }

  export type ClientOrderTransactionWhereInput = {
    AND?: ClientOrderTransactionWhereInput | ClientOrderTransactionWhereInput[]
    OR?: ClientOrderTransactionWhereInput[]
    NOT?: ClientOrderTransactionWhereInput | ClientOrderTransactionWhereInput[]
    id?: StringFilter<"ClientOrderTransaction"> | string
    orderId?: StringFilter<"ClientOrderTransaction"> | string
    externalTransactionId?: StringFilter<"ClientOrderTransaction"> | string
    transactionAmount?: FloatFilter<"ClientOrderTransaction"> | number
    transactionCurrencyIso?: StringFilter<"ClientOrderTransaction"> | string
    status?: EnumTransactionStatusFilter<"ClientOrderTransaction"> | $Enums.TransactionStatus
    paymentMethod?: EnumPaymentMethodNullableFilter<"ClientOrderTransaction"> | $Enums.PaymentMethod | null
    businessId?: StringFilter<"ClientOrderTransaction"> | string
    createdAt?: DateTimeFilter<"ClientOrderTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrderTransaction"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }

  export type ClientOrderTransactionOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    externalTransactionId?: SortOrder
    transactionAmount?: SortOrder
    transactionCurrencyIso?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    client_orders?: ClientOrderOrderByWithRelationInput
  }

  export type ClientOrderTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    externalTransactionId?: string
    AND?: ClientOrderTransactionWhereInput | ClientOrderTransactionWhereInput[]
    OR?: ClientOrderTransactionWhereInput[]
    NOT?: ClientOrderTransactionWhereInput | ClientOrderTransactionWhereInput[]
    orderId?: StringFilter<"ClientOrderTransaction"> | string
    transactionAmount?: FloatFilter<"ClientOrderTransaction"> | number
    transactionCurrencyIso?: StringFilter<"ClientOrderTransaction"> | string
    status?: EnumTransactionStatusFilter<"ClientOrderTransaction"> | $Enums.TransactionStatus
    paymentMethod?: EnumPaymentMethodNullableFilter<"ClientOrderTransaction"> | $Enums.PaymentMethod | null
    businessId?: StringFilter<"ClientOrderTransaction"> | string
    createdAt?: DateTimeFilter<"ClientOrderTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrderTransaction"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }, "id" | "externalTransactionId">

  export type ClientOrderTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    externalTransactionId?: SortOrder
    transactionAmount?: SortOrder
    transactionCurrencyIso?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ClientOrderTransactionCountOrderByAggregateInput
    _avg?: ClientOrderTransactionAvgOrderByAggregateInput
    _max?: ClientOrderTransactionMaxOrderByAggregateInput
    _min?: ClientOrderTransactionMinOrderByAggregateInput
    _sum?: ClientOrderTransactionSumOrderByAggregateInput
  }

  export type ClientOrderTransactionScalarWhereWithAggregatesInput = {
    AND?: ClientOrderTransactionScalarWhereWithAggregatesInput | ClientOrderTransactionScalarWhereWithAggregatesInput[]
    OR?: ClientOrderTransactionScalarWhereWithAggregatesInput[]
    NOT?: ClientOrderTransactionScalarWhereWithAggregatesInput | ClientOrderTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ClientOrderTransaction"> | string
    orderId?: StringWithAggregatesFilter<"ClientOrderTransaction"> | string
    externalTransactionId?: StringWithAggregatesFilter<"ClientOrderTransaction"> | string
    transactionAmount?: FloatWithAggregatesFilter<"ClientOrderTransaction"> | number
    transactionCurrencyIso?: StringWithAggregatesFilter<"ClientOrderTransaction"> | string
    status?: EnumTransactionStatusWithAggregatesFilter<"ClientOrderTransaction"> | $Enums.TransactionStatus
    paymentMethod?: EnumPaymentMethodNullableWithAggregatesFilter<"ClientOrderTransaction"> | $Enums.PaymentMethod | null
    businessId?: StringWithAggregatesFilter<"ClientOrderTransaction"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ClientOrderTransaction"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ClientOrderTransaction"> | Date | string
  }

  export type BusinessSupplierPictureWhereInput = {
    AND?: BusinessSupplierPictureWhereInput | BusinessSupplierPictureWhereInput[]
    OR?: BusinessSupplierPictureWhereInput[]
    NOT?: BusinessSupplierPictureWhereInput | BusinessSupplierPictureWhereInput[]
    id?: StringFilter<"BusinessSupplierPicture"> | string
    supplierId?: StringFilter<"BusinessSupplierPicture"> | string
    url?: StringFilter<"BusinessSupplierPicture"> | string
    businessId?: StringFilter<"BusinessSupplierPicture"> | string
    createdAt?: DateTimeFilter<"BusinessSupplierPicture"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessSupplierPicture"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_supplier_information?: XOR<Business_supplier_informationScalarRelationFilter, business_supplier_informationWhereInput>
  }

  export type BusinessSupplierPictureOrderByWithRelationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_supplier_information?: business_supplier_informationOrderByWithRelationInput
  }

  export type BusinessSupplierPictureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessSupplierPictureWhereInput | BusinessSupplierPictureWhereInput[]
    OR?: BusinessSupplierPictureWhereInput[]
    NOT?: BusinessSupplierPictureWhereInput | BusinessSupplierPictureWhereInput[]
    supplierId?: StringFilter<"BusinessSupplierPicture"> | string
    url?: StringFilter<"BusinessSupplierPicture"> | string
    businessId?: StringFilter<"BusinessSupplierPicture"> | string
    createdAt?: DateTimeFilter<"BusinessSupplierPicture"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessSupplierPicture"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_supplier_information?: XOR<Business_supplier_informationScalarRelationFilter, business_supplier_informationWhereInput>
  }, "id">

  export type BusinessSupplierPictureOrderByWithAggregationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessSupplierPictureCountOrderByAggregateInput
    _max?: BusinessSupplierPictureMaxOrderByAggregateInput
    _min?: BusinessSupplierPictureMinOrderByAggregateInput
  }

  export type BusinessSupplierPictureScalarWhereWithAggregatesInput = {
    AND?: BusinessSupplierPictureScalarWhereWithAggregatesInput | BusinessSupplierPictureScalarWhereWithAggregatesInput[]
    OR?: BusinessSupplierPictureScalarWhereWithAggregatesInput[]
    NOT?: BusinessSupplierPictureScalarWhereWithAggregatesInput | BusinessSupplierPictureScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessSupplierPicture"> | string
    supplierId?: StringWithAggregatesFilter<"BusinessSupplierPicture"> | string
    url?: StringWithAggregatesFilter<"BusinessSupplierPicture"> | string
    businessId?: StringWithAggregatesFilter<"BusinessSupplierPicture"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessSupplierPicture"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessSupplierPicture"> | Date | string
  }

  export type BusinessMenuWhereInput = {
    AND?: BusinessMenuWhereInput | BusinessMenuWhereInput[]
    OR?: BusinessMenuWhereInput[]
    NOT?: BusinessMenuWhereInput | BusinessMenuWhereInput[]
    id?: StringFilter<"BusinessMenu"> | string
    title?: StringFilter<"BusinessMenu"> | string
    tags?: StringNullableFilter<"BusinessMenu"> | string | null
    nameLastModificationEmployee?: StringNullableFilter<"BusinessMenu"> | string | null
    businessId?: StringFilter<"BusinessMenu"> | string
    createdAt?: DateTimeFilter<"BusinessMenu"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessMenu"> | Date | string
    business_menu_categories?: BusinessMenuCategoryListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_products?: BusinessProductListRelationFilter
  }

  export type BusinessMenuOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    tags?: SortOrderInput | SortOrder
    nameLastModificationEmployee?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    business_menu_categories?: BusinessMenuCategoryOrderByRelationAggregateInput
    businesses?: businessesOrderByWithRelationInput
    business_products?: BusinessProductOrderByRelationAggregateInput
  }

  export type BusinessMenuWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessMenuWhereInput | BusinessMenuWhereInput[]
    OR?: BusinessMenuWhereInput[]
    NOT?: BusinessMenuWhereInput | BusinessMenuWhereInput[]
    title?: StringFilter<"BusinessMenu"> | string
    tags?: StringNullableFilter<"BusinessMenu"> | string | null
    nameLastModificationEmployee?: StringNullableFilter<"BusinessMenu"> | string | null
    businessId?: StringFilter<"BusinessMenu"> | string
    createdAt?: DateTimeFilter<"BusinessMenu"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessMenu"> | Date | string
    business_menu_categories?: BusinessMenuCategoryListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_products?: BusinessProductListRelationFilter
  }, "id">

  export type BusinessMenuOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    tags?: SortOrderInput | SortOrder
    nameLastModificationEmployee?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessMenuCountOrderByAggregateInput
    _max?: BusinessMenuMaxOrderByAggregateInput
    _min?: BusinessMenuMinOrderByAggregateInput
  }

  export type BusinessMenuScalarWhereWithAggregatesInput = {
    AND?: BusinessMenuScalarWhereWithAggregatesInput | BusinessMenuScalarWhereWithAggregatesInput[]
    OR?: BusinessMenuScalarWhereWithAggregatesInput[]
    NOT?: BusinessMenuScalarWhereWithAggregatesInput | BusinessMenuScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessMenu"> | string
    title?: StringWithAggregatesFilter<"BusinessMenu"> | string
    tags?: StringNullableWithAggregatesFilter<"BusinessMenu"> | string | null
    nameLastModificationEmployee?: StringNullableWithAggregatesFilter<"BusinessMenu"> | string | null
    businessId?: StringWithAggregatesFilter<"BusinessMenu"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessMenu"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessMenu"> | Date | string
  }

  export type BusinessMenuCategoryWhereInput = {
    AND?: BusinessMenuCategoryWhereInput | BusinessMenuCategoryWhereInput[]
    OR?: BusinessMenuCategoryWhereInput[]
    NOT?: BusinessMenuCategoryWhereInput | BusinessMenuCategoryWhereInput[]
    id?: StringFilter<"BusinessMenuCategory"> | string
    menuId?: StringFilter<"BusinessMenuCategory"> | string
    vip?: BoolFilter<"BusinessMenuCategory"> | boolean
    haveSchedule?: BoolFilter<"BusinessMenuCategory"> | boolean
    schedule?: JsonNullableFilter<"BusinessMenuCategory">
    nameLastModificationEmployee?: StringNullableFilter<"BusinessMenuCategory"> | string | null
    businessId?: StringFilter<"BusinessMenuCategory"> | string
    createdAt?: DateTimeFilter<"BusinessMenuCategory"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessMenuCategory"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_menus?: XOR<BusinessMenuScalarRelationFilter, BusinessMenuWhereInput>
  }

  export type BusinessMenuCategoryOrderByWithRelationInput = {
    id?: SortOrder
    menuId?: SortOrder
    vip?: SortOrder
    haveSchedule?: SortOrder
    schedule?: SortOrderInput | SortOrder
    nameLastModificationEmployee?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_menus?: BusinessMenuOrderByWithRelationInput
  }

  export type BusinessMenuCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessMenuCategoryWhereInput | BusinessMenuCategoryWhereInput[]
    OR?: BusinessMenuCategoryWhereInput[]
    NOT?: BusinessMenuCategoryWhereInput | BusinessMenuCategoryWhereInput[]
    menuId?: StringFilter<"BusinessMenuCategory"> | string
    vip?: BoolFilter<"BusinessMenuCategory"> | boolean
    haveSchedule?: BoolFilter<"BusinessMenuCategory"> | boolean
    schedule?: JsonNullableFilter<"BusinessMenuCategory">
    nameLastModificationEmployee?: StringNullableFilter<"BusinessMenuCategory"> | string | null
    businessId?: StringFilter<"BusinessMenuCategory"> | string
    createdAt?: DateTimeFilter<"BusinessMenuCategory"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessMenuCategory"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_menus?: XOR<BusinessMenuScalarRelationFilter, BusinessMenuWhereInput>
  }, "id">

  export type BusinessMenuCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    menuId?: SortOrder
    vip?: SortOrder
    haveSchedule?: SortOrder
    schedule?: SortOrderInput | SortOrder
    nameLastModificationEmployee?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessMenuCategoryCountOrderByAggregateInput
    _max?: BusinessMenuCategoryMaxOrderByAggregateInput
    _min?: BusinessMenuCategoryMinOrderByAggregateInput
  }

  export type BusinessMenuCategoryScalarWhereWithAggregatesInput = {
    AND?: BusinessMenuCategoryScalarWhereWithAggregatesInput | BusinessMenuCategoryScalarWhereWithAggregatesInput[]
    OR?: BusinessMenuCategoryScalarWhereWithAggregatesInput[]
    NOT?: BusinessMenuCategoryScalarWhereWithAggregatesInput | BusinessMenuCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessMenuCategory"> | string
    menuId?: StringWithAggregatesFilter<"BusinessMenuCategory"> | string
    vip?: BoolWithAggregatesFilter<"BusinessMenuCategory"> | boolean
    haveSchedule?: BoolWithAggregatesFilter<"BusinessMenuCategory"> | boolean
    schedule?: JsonNullableWithAggregatesFilter<"BusinessMenuCategory">
    nameLastModificationEmployee?: StringNullableWithAggregatesFilter<"BusinessMenuCategory"> | string | null
    businessId?: StringWithAggregatesFilter<"BusinessMenuCategory"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessMenuCategory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessMenuCategory"> | Date | string
  }

  export type BusinessProductWhereInput = {
    AND?: BusinessProductWhereInput | BusinessProductWhereInput[]
    OR?: BusinessProductWhereInput[]
    NOT?: BusinessProductWhereInput | BusinessProductWhereInput[]
    id?: StringFilter<"BusinessProduct"> | string
    menuId?: StringFilter<"BusinessProduct"> | string
    name?: StringFilter<"BusinessProduct"> | string
    unityAmount?: FloatFilter<"BusinessProduct"> | number
    stockBatches?: IntNullableListFilter<"BusinessProduct">
    expirationDates?: DateTimeNullableListFilter<"BusinessProduct">
    unityConsumeStock?: IntFilter<"BusinessProduct"> | number
    typeUnitConsumeMeasurement?: StringFilter<"BusinessProduct"> | string
    tags?: StringNullableFilter<"BusinessProduct"> | string | null
    nameLastModificationEmployee?: StringNullableFilter<"BusinessProduct"> | string | null
    businessId?: StringFilter<"BusinessProduct"> | string
    createdAt?: DateTimeFilter<"BusinessProduct"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessProduct"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_menus?: XOR<BusinessMenuScalarRelationFilter, BusinessMenuWhereInput>
  }

  export type BusinessProductOrderByWithRelationInput = {
    id?: SortOrder
    menuId?: SortOrder
    name?: SortOrder
    unityAmount?: SortOrder
    stockBatches?: SortOrder
    expirationDates?: SortOrder
    unityConsumeStock?: SortOrder
    typeUnitConsumeMeasurement?: SortOrder
    tags?: SortOrderInput | SortOrder
    nameLastModificationEmployee?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_menus?: BusinessMenuOrderByWithRelationInput
  }

  export type BusinessProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessProductWhereInput | BusinessProductWhereInput[]
    OR?: BusinessProductWhereInput[]
    NOT?: BusinessProductWhereInput | BusinessProductWhereInput[]
    menuId?: StringFilter<"BusinessProduct"> | string
    name?: StringFilter<"BusinessProduct"> | string
    unityAmount?: FloatFilter<"BusinessProduct"> | number
    stockBatches?: IntNullableListFilter<"BusinessProduct">
    expirationDates?: DateTimeNullableListFilter<"BusinessProduct">
    unityConsumeStock?: IntFilter<"BusinessProduct"> | number
    typeUnitConsumeMeasurement?: StringFilter<"BusinessProduct"> | string
    tags?: StringNullableFilter<"BusinessProduct"> | string | null
    nameLastModificationEmployee?: StringNullableFilter<"BusinessProduct"> | string | null
    businessId?: StringFilter<"BusinessProduct"> | string
    createdAt?: DateTimeFilter<"BusinessProduct"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessProduct"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_menus?: XOR<BusinessMenuScalarRelationFilter, BusinessMenuWhereInput>
  }, "id">

  export type BusinessProductOrderByWithAggregationInput = {
    id?: SortOrder
    menuId?: SortOrder
    name?: SortOrder
    unityAmount?: SortOrder
    stockBatches?: SortOrder
    expirationDates?: SortOrder
    unityConsumeStock?: SortOrder
    typeUnitConsumeMeasurement?: SortOrder
    tags?: SortOrderInput | SortOrder
    nameLastModificationEmployee?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessProductCountOrderByAggregateInput
    _avg?: BusinessProductAvgOrderByAggregateInput
    _max?: BusinessProductMaxOrderByAggregateInput
    _min?: BusinessProductMinOrderByAggregateInput
    _sum?: BusinessProductSumOrderByAggregateInput
  }

  export type BusinessProductScalarWhereWithAggregatesInput = {
    AND?: BusinessProductScalarWhereWithAggregatesInput | BusinessProductScalarWhereWithAggregatesInput[]
    OR?: BusinessProductScalarWhereWithAggregatesInput[]
    NOT?: BusinessProductScalarWhereWithAggregatesInput | BusinessProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessProduct"> | string
    menuId?: StringWithAggregatesFilter<"BusinessProduct"> | string
    name?: StringWithAggregatesFilter<"BusinessProduct"> | string
    unityAmount?: FloatWithAggregatesFilter<"BusinessProduct"> | number
    stockBatches?: IntNullableListFilter<"BusinessProduct">
    expirationDates?: DateTimeNullableListFilter<"BusinessProduct">
    unityConsumeStock?: IntWithAggregatesFilter<"BusinessProduct"> | number
    typeUnitConsumeMeasurement?: StringWithAggregatesFilter<"BusinessProduct"> | string
    tags?: StringNullableWithAggregatesFilter<"BusinessProduct"> | string | null
    nameLastModificationEmployee?: StringNullableWithAggregatesFilter<"BusinessProduct"> | string | null
    businessId?: StringWithAggregatesFilter<"BusinessProduct"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessProduct"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessProduct"> | Date | string
  }

  export type BusinessGeneralSalesReportAIWhereInput = {
    AND?: BusinessGeneralSalesReportAIWhereInput | BusinessGeneralSalesReportAIWhereInput[]
    OR?: BusinessGeneralSalesReportAIWhereInput[]
    NOT?: BusinessGeneralSalesReportAIWhereInput | BusinessGeneralSalesReportAIWhereInput[]
    id?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    url?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    businessId?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessGeneralSalesReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessGeneralSalesReportAI"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessGeneralSalesReportAIOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessGeneralSalesReportAIWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    url?: string
    AND?: BusinessGeneralSalesReportAIWhereInput | BusinessGeneralSalesReportAIWhereInput[]
    OR?: BusinessGeneralSalesReportAIWhereInput[]
    NOT?: BusinessGeneralSalesReportAIWhereInput | BusinessGeneralSalesReportAIWhereInput[]
    businessId?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessGeneralSalesReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessGeneralSalesReportAI"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id" | "url">

  export type BusinessGeneralSalesReportAIOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessGeneralSalesReportAICountOrderByAggregateInput
    _max?: BusinessGeneralSalesReportAIMaxOrderByAggregateInput
    _min?: BusinessGeneralSalesReportAIMinOrderByAggregateInput
  }

  export type BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput = {
    AND?: BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput | BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput[]
    OR?: BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput[]
    NOT?: BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput | BusinessGeneralSalesReportAIScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessGeneralSalesReportAI"> | string
    url?: StringWithAggregatesFilter<"BusinessGeneralSalesReportAI"> | string
    businessId?: StringWithAggregatesFilter<"BusinessGeneralSalesReportAI"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessGeneralSalesReportAI"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessGeneralSalesReportAI"> | Date | string
  }

  export type BusinessGeneralWarehouseReportAIWhereInput = {
    AND?: BusinessGeneralWarehouseReportAIWhereInput | BusinessGeneralWarehouseReportAIWhereInput[]
    OR?: BusinessGeneralWarehouseReportAIWhereInput[]
    NOT?: BusinessGeneralWarehouseReportAIWhereInput | BusinessGeneralWarehouseReportAIWhereInput[]
    id?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    url?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    businessId?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessGeneralWarehouseReportAIOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessGeneralWarehouseReportAIWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    url?: string
    AND?: BusinessGeneralWarehouseReportAIWhereInput | BusinessGeneralWarehouseReportAIWhereInput[]
    OR?: BusinessGeneralWarehouseReportAIWhereInput[]
    NOT?: BusinessGeneralWarehouseReportAIWhereInput | BusinessGeneralWarehouseReportAIWhereInput[]
    businessId?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id" | "url">

  export type BusinessGeneralWarehouseReportAIOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessGeneralWarehouseReportAICountOrderByAggregateInput
    _max?: BusinessGeneralWarehouseReportAIMaxOrderByAggregateInput
    _min?: BusinessGeneralWarehouseReportAIMinOrderByAggregateInput
  }

  export type BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput = {
    AND?: BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput | BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput[]
    OR?: BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput[]
    NOT?: BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput | BusinessGeneralWarehouseReportAIScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessGeneralWarehouseReportAI"> | string
    url?: StringWithAggregatesFilter<"BusinessGeneralWarehouseReportAI"> | string
    businessId?: StringWithAggregatesFilter<"BusinessGeneralWarehouseReportAI"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIWhereInput = {
    AND?: BusinessWarehouseReplenishmentReportAIWhereInput | BusinessWarehouseReplenishmentReportAIWhereInput[]
    OR?: BusinessWarehouseReplenishmentReportAIWhereInput[]
    NOT?: BusinessWarehouseReplenishmentReportAIWhereInput | BusinessWarehouseReplenishmentReportAIWhereInput[]
    id?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    url?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    businessId?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type BusinessWarehouseReplenishmentReportAIOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type BusinessWarehouseReplenishmentReportAIWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    url?: string
    AND?: BusinessWarehouseReplenishmentReportAIWhereInput | BusinessWarehouseReplenishmentReportAIWhereInput[]
    OR?: BusinessWarehouseReplenishmentReportAIWhereInput[]
    NOT?: BusinessWarehouseReplenishmentReportAIWhereInput | BusinessWarehouseReplenishmentReportAIWhereInput[]
    businessId?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id" | "url">

  export type BusinessWarehouseReplenishmentReportAIOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessWarehouseReplenishmentReportAICountOrderByAggregateInput
    _max?: BusinessWarehouseReplenishmentReportAIMaxOrderByAggregateInput
    _min?: BusinessWarehouseReplenishmentReportAIMinOrderByAggregateInput
  }

  export type BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput = {
    AND?: BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput | BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput[]
    OR?: BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput[]
    NOT?: BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput | BusinessWarehouseReplenishmentReportAIScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    url?: StringWithAggregatesFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    businessId?: StringWithAggregatesFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
  }

  export type business_commercial_relationship_documents_attachedWhereInput = {
    AND?: business_commercial_relationship_documents_attachedWhereInput | business_commercial_relationship_documents_attachedWhereInput[]
    OR?: business_commercial_relationship_documents_attachedWhereInput[]
    NOT?: business_commercial_relationship_documents_attachedWhereInput | business_commercial_relationship_documents_attachedWhereInput[]
    id?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    url?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    commercialRelationshipId?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    createdAt?: DateTimeFilter<"business_commercial_relationship_documents_attached"> | Date | string
    updatedAt?: DateTimeFilter<"business_commercial_relationship_documents_attached"> | Date | string
    business_commercial_relationships?: XOR<Business_commercial_relationshipsScalarRelationFilter, business_commercial_relationshipsWhereInput>
  }

  export type business_commercial_relationship_documents_attachedOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    commercialRelationshipId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    business_commercial_relationships?: business_commercial_relationshipsOrderByWithRelationInput
  }

  export type business_commercial_relationship_documents_attachedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_commercial_relationship_documents_attachedWhereInput | business_commercial_relationship_documents_attachedWhereInput[]
    OR?: business_commercial_relationship_documents_attachedWhereInput[]
    NOT?: business_commercial_relationship_documents_attachedWhereInput | business_commercial_relationship_documents_attachedWhereInput[]
    url?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    commercialRelationshipId?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    createdAt?: DateTimeFilter<"business_commercial_relationship_documents_attached"> | Date | string
    updatedAt?: DateTimeFilter<"business_commercial_relationship_documents_attached"> | Date | string
    business_commercial_relationships?: XOR<Business_commercial_relationshipsScalarRelationFilter, business_commercial_relationshipsWhereInput>
  }, "id">

  export type business_commercial_relationship_documents_attachedOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    commercialRelationshipId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_commercial_relationship_documents_attachedCountOrderByAggregateInput
    _max?: business_commercial_relationship_documents_attachedMaxOrderByAggregateInput
    _min?: business_commercial_relationship_documents_attachedMinOrderByAggregateInput
  }

  export type business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput = {
    AND?: business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput | business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput[]
    OR?: business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput[]
    NOT?: business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput | business_commercial_relationship_documents_attachedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_commercial_relationship_documents_attached"> | string
    url?: StringWithAggregatesFilter<"business_commercial_relationship_documents_attached"> | string
    commercialRelationshipId?: StringWithAggregatesFilter<"business_commercial_relationship_documents_attached"> | string
    createdAt?: DateTimeWithAggregatesFilter<"business_commercial_relationship_documents_attached"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_commercial_relationship_documents_attached"> | Date | string
  }

  export type business_commercial_relationshipsWhereInput = {
    AND?: business_commercial_relationshipsWhereInput | business_commercial_relationshipsWhereInput[]
    OR?: business_commercial_relationshipsWhereInput[]
    NOT?: business_commercial_relationshipsWhereInput | business_commercial_relationshipsWhereInput[]
    id?: StringFilter<"business_commercial_relationships"> | string
    type?: StringFilter<"business_commercial_relationships"> | string
    signedContract?: BoolNullableFilter<"business_commercial_relationships"> | boolean | null
    thirdPartyPaymentPermission?: BoolNullableFilter<"business_commercial_relationships"> | boolean | null
    createdAt?: DateTimeFilter<"business_commercial_relationships"> | Date | string
    updatedAt?: DateTimeFilter<"business_commercial_relationships"> | Date | string
    business_commercial_relationship_documents_attached?: Business_commercial_relationship_documents_attachedListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type business_commercial_relationshipsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    signedContract?: SortOrderInput | SortOrder
    thirdPartyPaymentPermission?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedOrderByRelationAggregateInput
    businesses?: businessesOrderByWithRelationInput
  }

  export type business_commercial_relationshipsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_commercial_relationshipsWhereInput | business_commercial_relationshipsWhereInput[]
    OR?: business_commercial_relationshipsWhereInput[]
    NOT?: business_commercial_relationshipsWhereInput | business_commercial_relationshipsWhereInput[]
    type?: StringFilter<"business_commercial_relationships"> | string
    signedContract?: BoolNullableFilter<"business_commercial_relationships"> | boolean | null
    thirdPartyPaymentPermission?: BoolNullableFilter<"business_commercial_relationships"> | boolean | null
    createdAt?: DateTimeFilter<"business_commercial_relationships"> | Date | string
    updatedAt?: DateTimeFilter<"business_commercial_relationships"> | Date | string
    business_commercial_relationship_documents_attached?: Business_commercial_relationship_documents_attachedListRelationFilter
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type business_commercial_relationshipsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    signedContract?: SortOrderInput | SortOrder
    thirdPartyPaymentPermission?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_commercial_relationshipsCountOrderByAggregateInput
    _max?: business_commercial_relationshipsMaxOrderByAggregateInput
    _min?: business_commercial_relationshipsMinOrderByAggregateInput
  }

  export type business_commercial_relationshipsScalarWhereWithAggregatesInput = {
    AND?: business_commercial_relationshipsScalarWhereWithAggregatesInput | business_commercial_relationshipsScalarWhereWithAggregatesInput[]
    OR?: business_commercial_relationshipsScalarWhereWithAggregatesInput[]
    NOT?: business_commercial_relationshipsScalarWhereWithAggregatesInput | business_commercial_relationshipsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_commercial_relationships"> | string
    type?: StringWithAggregatesFilter<"business_commercial_relationships"> | string
    signedContract?: BoolNullableWithAggregatesFilter<"business_commercial_relationships"> | boolean | null
    thirdPartyPaymentPermission?: BoolNullableWithAggregatesFilter<"business_commercial_relationships"> | boolean | null
    createdAt?: DateTimeWithAggregatesFilter<"business_commercial_relationships"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_commercial_relationships"> | Date | string
  }

  export type business_complianceWhereInput = {
    AND?: business_complianceWhereInput | business_complianceWhereInput[]
    OR?: business_complianceWhereInput[]
    NOT?: business_complianceWhereInput | business_complianceWhereInput[]
    id?: StringFilter<"business_compliance"> | string
    kycVerified?: BoolNullableFilter<"business_compliance"> | boolean | null
    amlApproved?: BoolNullableFilter<"business_compliance"> | boolean | null
    taxWithholdingApplicable?: BoolNullableFilter<"business_compliance"> | boolean | null
    createdAt?: DateTimeFilter<"business_compliance"> | Date | string
    updatedAt?: DateTimeFilter<"business_compliance"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type business_complianceOrderByWithRelationInput = {
    id?: SortOrder
    kycVerified?: SortOrderInput | SortOrder
    amlApproved?: SortOrderInput | SortOrder
    taxWithholdingApplicable?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type business_complianceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_complianceWhereInput | business_complianceWhereInput[]
    OR?: business_complianceWhereInput[]
    NOT?: business_complianceWhereInput | business_complianceWhereInput[]
    kycVerified?: BoolNullableFilter<"business_compliance"> | boolean | null
    amlApproved?: BoolNullableFilter<"business_compliance"> | boolean | null
    taxWithholdingApplicable?: BoolNullableFilter<"business_compliance"> | boolean | null
    createdAt?: DateTimeFilter<"business_compliance"> | Date | string
    updatedAt?: DateTimeFilter<"business_compliance"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type business_complianceOrderByWithAggregationInput = {
    id?: SortOrder
    kycVerified?: SortOrderInput | SortOrder
    amlApproved?: SortOrderInput | SortOrder
    taxWithholdingApplicable?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_complianceCountOrderByAggregateInput
    _max?: business_complianceMaxOrderByAggregateInput
    _min?: business_complianceMinOrderByAggregateInput
  }

  export type business_complianceScalarWhereWithAggregatesInput = {
    AND?: business_complianceScalarWhereWithAggregatesInput | business_complianceScalarWhereWithAggregatesInput[]
    OR?: business_complianceScalarWhereWithAggregatesInput[]
    NOT?: business_complianceScalarWhereWithAggregatesInput | business_complianceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_compliance"> | string
    kycVerified?: BoolNullableWithAggregatesFilter<"business_compliance"> | boolean | null
    amlApproved?: BoolNullableWithAggregatesFilter<"business_compliance"> | boolean | null
    taxWithholdingApplicable?: BoolNullableWithAggregatesFilter<"business_compliance"> | boolean | null
    createdAt?: DateTimeWithAggregatesFilter<"business_compliance"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_compliance"> | Date | string
  }

  export type business_configurationsWhereInput = {
    AND?: business_configurationsWhereInput | business_configurationsWhereInput[]
    OR?: business_configurationsWhereInput[]
    NOT?: business_configurationsWhereInput | business_configurationsWhereInput[]
    id?: StringFilter<"business_configurations"> | string
    wifi?: JsonNullableFilter<"business_configurations">
    schedule?: JsonNullableFilter<"business_configurations">
    functionsActivated?: JsonNullableFilter<"business_configurations">
    apiKey?: JsonNullableFilter<"business_configurations">
    affiliate?: BoolNullableFilter<"business_configurations"> | boolean | null
    maxPhonesDevices?: IntNullableFilter<"business_configurations"> | number | null
    displayUsername?: StringNullableFilter<"business_configurations"> | string | null
    createdAt?: DateTimeFilter<"business_configurations"> | Date | string
    updatedAt?: DateTimeFilter<"business_configurations"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type business_configurationsOrderByWithRelationInput = {
    id?: SortOrder
    wifi?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    functionsActivated?: SortOrderInput | SortOrder
    apiKey?: SortOrderInput | SortOrder
    affiliate?: SortOrderInput | SortOrder
    maxPhonesDevices?: SortOrderInput | SortOrder
    displayUsername?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type business_configurationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_configurationsWhereInput | business_configurationsWhereInput[]
    OR?: business_configurationsWhereInput[]
    NOT?: business_configurationsWhereInput | business_configurationsWhereInput[]
    wifi?: JsonNullableFilter<"business_configurations">
    schedule?: JsonNullableFilter<"business_configurations">
    functionsActivated?: JsonNullableFilter<"business_configurations">
    apiKey?: JsonNullableFilter<"business_configurations">
    affiliate?: BoolNullableFilter<"business_configurations"> | boolean | null
    maxPhonesDevices?: IntNullableFilter<"business_configurations"> | number | null
    displayUsername?: StringNullableFilter<"business_configurations"> | string | null
    createdAt?: DateTimeFilter<"business_configurations"> | Date | string
    updatedAt?: DateTimeFilter<"business_configurations"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type business_configurationsOrderByWithAggregationInput = {
    id?: SortOrder
    wifi?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    functionsActivated?: SortOrderInput | SortOrder
    apiKey?: SortOrderInput | SortOrder
    affiliate?: SortOrderInput | SortOrder
    maxPhonesDevices?: SortOrderInput | SortOrder
    displayUsername?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_configurationsCountOrderByAggregateInput
    _avg?: business_configurationsAvgOrderByAggregateInput
    _max?: business_configurationsMaxOrderByAggregateInput
    _min?: business_configurationsMinOrderByAggregateInput
    _sum?: business_configurationsSumOrderByAggregateInput
  }

  export type business_configurationsScalarWhereWithAggregatesInput = {
    AND?: business_configurationsScalarWhereWithAggregatesInput | business_configurationsScalarWhereWithAggregatesInput[]
    OR?: business_configurationsScalarWhereWithAggregatesInput[]
    NOT?: business_configurationsScalarWhereWithAggregatesInput | business_configurationsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_configurations"> | string
    wifi?: JsonNullableWithAggregatesFilter<"business_configurations">
    schedule?: JsonNullableWithAggregatesFilter<"business_configurations">
    functionsActivated?: JsonNullableWithAggregatesFilter<"business_configurations">
    apiKey?: JsonNullableWithAggregatesFilter<"business_configurations">
    affiliate?: BoolNullableWithAggregatesFilter<"business_configurations"> | boolean | null
    maxPhonesDevices?: IntNullableWithAggregatesFilter<"business_configurations"> | number | null
    displayUsername?: StringNullableWithAggregatesFilter<"business_configurations"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"business_configurations"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_configurations"> | Date | string
  }

  export type business_employeesWhereInput = {
    AND?: business_employeesWhereInput | business_employeesWhereInput[]
    OR?: business_employeesWhereInput[]
    NOT?: business_employeesWhereInput | business_employeesWhereInput[]
    id?: StringFilter<"business_employees"> | string
    nameEmployee?: StringFilter<"business_employees"> | string
    businessId?: StringFilter<"business_employees"> | string
    createdAt?: DateTimeFilter<"business_employees"> | Date | string
    updatedAt?: DateTimeFilter<"business_employees"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_employees_clock_records?: Business_employees_clock_recordsListRelationFilter
  }

  export type business_employeesOrderByWithRelationInput = {
    id?: SortOrder
    nameEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_employees_clock_records?: business_employees_clock_recordsOrderByRelationAggregateInput
  }

  export type business_employeesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    businessId_nameEmployee?: business_employeesBusinessIdNameEmployeeCompoundUniqueInput
    AND?: business_employeesWhereInput | business_employeesWhereInput[]
    OR?: business_employeesWhereInput[]
    NOT?: business_employeesWhereInput | business_employeesWhereInput[]
    nameEmployee?: StringFilter<"business_employees"> | string
    businessId?: StringFilter<"business_employees"> | string
    createdAt?: DateTimeFilter<"business_employees"> | Date | string
    updatedAt?: DateTimeFilter<"business_employees"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_employees_clock_records?: Business_employees_clock_recordsListRelationFilter
  }, "id" | "businessId_nameEmployee">

  export type business_employeesOrderByWithAggregationInput = {
    id?: SortOrder
    nameEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_employeesCountOrderByAggregateInput
    _max?: business_employeesMaxOrderByAggregateInput
    _min?: business_employeesMinOrderByAggregateInput
  }

  export type business_employeesScalarWhereWithAggregatesInput = {
    AND?: business_employeesScalarWhereWithAggregatesInput | business_employeesScalarWhereWithAggregatesInput[]
    OR?: business_employeesScalarWhereWithAggregatesInput[]
    NOT?: business_employeesScalarWhereWithAggregatesInput | business_employeesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_employees"> | string
    nameEmployee?: StringWithAggregatesFilter<"business_employees"> | string
    businessId?: StringWithAggregatesFilter<"business_employees"> | string
    createdAt?: DateTimeWithAggregatesFilter<"business_employees"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_employees"> | Date | string
  }

  export type business_employees_clock_recordsWhereInput = {
    AND?: business_employees_clock_recordsWhereInput | business_employees_clock_recordsWhereInput[]
    OR?: business_employees_clock_recordsWhereInput[]
    NOT?: business_employees_clock_recordsWhereInput | business_employees_clock_recordsWhereInput[]
    id?: StringFilter<"business_employees_clock_records"> | string
    employeeId?: StringFilter<"business_employees_clock_records"> | string
    recordTime?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    businessId?: StringFilter<"business_employees_clock_records"> | string
    createdAt?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    updatedAt?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_employees?: XOR<Business_employeesScalarRelationFilter, business_employeesWhereInput>
  }

  export type business_employees_clock_recordsOrderByWithRelationInput = {
    id?: SortOrder
    employeeId?: SortOrder
    recordTime?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_employees?: business_employeesOrderByWithRelationInput
  }

  export type business_employees_clock_recordsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_employees_clock_recordsWhereInput | business_employees_clock_recordsWhereInput[]
    OR?: business_employees_clock_recordsWhereInput[]
    NOT?: business_employees_clock_recordsWhereInput | business_employees_clock_recordsWhereInput[]
    employeeId?: StringFilter<"business_employees_clock_records"> | string
    recordTime?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    businessId?: StringFilter<"business_employees_clock_records"> | string
    createdAt?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    updatedAt?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_employees?: XOR<Business_employeesScalarRelationFilter, business_employeesWhereInput>
  }, "id">

  export type business_employees_clock_recordsOrderByWithAggregationInput = {
    id?: SortOrder
    employeeId?: SortOrder
    recordTime?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_employees_clock_recordsCountOrderByAggregateInput
    _max?: business_employees_clock_recordsMaxOrderByAggregateInput
    _min?: business_employees_clock_recordsMinOrderByAggregateInput
  }

  export type business_employees_clock_recordsScalarWhereWithAggregatesInput = {
    AND?: business_employees_clock_recordsScalarWhereWithAggregatesInput | business_employees_clock_recordsScalarWhereWithAggregatesInput[]
    OR?: business_employees_clock_recordsScalarWhereWithAggregatesInput[]
    NOT?: business_employees_clock_recordsScalarWhereWithAggregatesInput | business_employees_clock_recordsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_employees_clock_records"> | string
    employeeId?: StringWithAggregatesFilter<"business_employees_clock_records"> | string
    recordTime?: DateTimeWithAggregatesFilter<"business_employees_clock_records"> | Date | string
    businessId?: StringWithAggregatesFilter<"business_employees_clock_records"> | string
    createdAt?: DateTimeWithAggregatesFilter<"business_employees_clock_records"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_employees_clock_records"> | Date | string
  }

  export type business_payment_historyWhereInput = {
    AND?: business_payment_historyWhereInput | business_payment_historyWhereInput[]
    OR?: business_payment_historyWhereInput[]
    NOT?: business_payment_historyWhereInput | business_payment_historyWhereInput[]
    id?: StringFilter<"business_payment_history"> | string
    businessId?: StringFilter<"business_payment_history"> | string
    paymentDetailId?: StringFilter<"business_payment_history"> | string
    amount?: FloatFilter<"business_payment_history"> | number
    currency?: StringFilter<"business_payment_history"> | string
    type?: StringFilter<"business_payment_history"> | string
    status?: StringFilter<"business_payment_history"> | string
    stripeInvoiceId?: StringNullableFilter<"business_payment_history"> | string | null
    createdAt?: DateTimeFilter<"business_payment_history"> | Date | string
    updatedAt?: DateTimeFilter<"business_payment_history"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_payment_history_details?: XOR<BusinessPaymentHistoryDetailScalarRelationFilter, BusinessPaymentHistoryDetailWhereInput>
  }

  export type business_payment_historyOrderByWithRelationInput = {
    id?: SortOrder
    businessId?: SortOrder
    paymentDetailId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    stripeInvoiceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_payment_history_details?: BusinessPaymentHistoryDetailOrderByWithRelationInput
  }

  export type business_payment_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    businessId_paymentDetailId_createdAt?: business_payment_historyBusinessIdPaymentDetailIdCreatedAtCompoundUniqueInput
    AND?: business_payment_historyWhereInput | business_payment_historyWhereInput[]
    OR?: business_payment_historyWhereInput[]
    NOT?: business_payment_historyWhereInput | business_payment_historyWhereInput[]
    businessId?: StringFilter<"business_payment_history"> | string
    paymentDetailId?: StringFilter<"business_payment_history"> | string
    amount?: FloatFilter<"business_payment_history"> | number
    currency?: StringFilter<"business_payment_history"> | string
    type?: StringFilter<"business_payment_history"> | string
    status?: StringFilter<"business_payment_history"> | string
    stripeInvoiceId?: StringNullableFilter<"business_payment_history"> | string | null
    createdAt?: DateTimeFilter<"business_payment_history"> | Date | string
    updatedAt?: DateTimeFilter<"business_payment_history"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_payment_history_details?: XOR<BusinessPaymentHistoryDetailScalarRelationFilter, BusinessPaymentHistoryDetailWhereInput>
  }, "id" | "businessId_paymentDetailId_createdAt">

  export type business_payment_historyOrderByWithAggregationInput = {
    id?: SortOrder
    businessId?: SortOrder
    paymentDetailId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    stripeInvoiceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_payment_historyCountOrderByAggregateInput
    _avg?: business_payment_historyAvgOrderByAggregateInput
    _max?: business_payment_historyMaxOrderByAggregateInput
    _min?: business_payment_historyMinOrderByAggregateInput
    _sum?: business_payment_historySumOrderByAggregateInput
  }

  export type business_payment_historyScalarWhereWithAggregatesInput = {
    AND?: business_payment_historyScalarWhereWithAggregatesInput | business_payment_historyScalarWhereWithAggregatesInput[]
    OR?: business_payment_historyScalarWhereWithAggregatesInput[]
    NOT?: business_payment_historyScalarWhereWithAggregatesInput | business_payment_historyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_payment_history"> | string
    businessId?: StringWithAggregatesFilter<"business_payment_history"> | string
    paymentDetailId?: StringWithAggregatesFilter<"business_payment_history"> | string
    amount?: FloatWithAggregatesFilter<"business_payment_history"> | number
    currency?: StringWithAggregatesFilter<"business_payment_history"> | string
    type?: StringWithAggregatesFilter<"business_payment_history"> | string
    status?: StringWithAggregatesFilter<"business_payment_history"> | string
    stripeInvoiceId?: StringNullableWithAggregatesFilter<"business_payment_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"business_payment_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_payment_history"> | Date | string
  }

  export type business_phone_idsWhereInput = {
    AND?: business_phone_idsWhereInput | business_phone_idsWhereInput[]
    OR?: business_phone_idsWhereInput[]
    NOT?: business_phone_idsWhereInput | business_phone_idsWhereInput[]
    id?: StringFilter<"business_phone_ids"> | string
    title?: StringFilter<"business_phone_ids"> | string
    businessId?: StringFilter<"business_phone_ids"> | string
    createdAt?: DateTimeFilter<"business_phone_ids"> | Date | string
    updatedAt?: DateTimeFilter<"business_phone_ids"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type business_phone_idsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type business_phone_idsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_phone_idsWhereInput | business_phone_idsWhereInput[]
    OR?: business_phone_idsWhereInput[]
    NOT?: business_phone_idsWhereInput | business_phone_idsWhereInput[]
    title?: StringFilter<"business_phone_ids"> | string
    businessId?: StringFilter<"business_phone_ids"> | string
    createdAt?: DateTimeFilter<"business_phone_ids"> | Date | string
    updatedAt?: DateTimeFilter<"business_phone_ids"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type business_phone_idsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_phone_idsCountOrderByAggregateInput
    _max?: business_phone_idsMaxOrderByAggregateInput
    _min?: business_phone_idsMinOrderByAggregateInput
  }

  export type business_phone_idsScalarWhereWithAggregatesInput = {
    AND?: business_phone_idsScalarWhereWithAggregatesInput | business_phone_idsScalarWhereWithAggregatesInput[]
    OR?: business_phone_idsScalarWhereWithAggregatesInput[]
    NOT?: business_phone_idsScalarWhereWithAggregatesInput | business_phone_idsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_phone_ids"> | string
    title?: StringWithAggregatesFilter<"business_phone_ids"> | string
    businessId?: StringWithAggregatesFilter<"business_phone_ids"> | string
    createdAt?: DateTimeWithAggregatesFilter<"business_phone_ids"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_phone_ids"> | Date | string
  }

  export type business_supplier_informationWhereInput = {
    AND?: business_supplier_informationWhereInput | business_supplier_informationWhereInput[]
    OR?: business_supplier_informationWhereInput[]
    NOT?: business_supplier_informationWhereInput | business_supplier_informationWhereInput[]
    id?: StringFilter<"business_supplier_information"> | string
    inUse?: BoolFilter<"business_supplier_information"> | boolean
    title?: StringFilter<"business_supplier_information"> | string
    description?: StringNullableFilter<"business_supplier_information"> | string | null
    schedule?: JsonNullableFilter<"business_supplier_information">
    businessId?: StringFilter<"business_supplier_information"> | string
    createdAt?: DateTimeFilter<"business_supplier_information"> | Date | string
    updatedAt?: DateTimeFilter<"business_supplier_information"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_supplier_pictures?: BusinessSupplierPictureListRelationFilter
  }

  export type business_supplier_informationOrderByWithRelationInput = {
    id?: SortOrder
    inUse?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    business_supplier_pictures?: BusinessSupplierPictureOrderByRelationAggregateInput
  }

  export type business_supplier_informationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_supplier_informationWhereInput | business_supplier_informationWhereInput[]
    OR?: business_supplier_informationWhereInput[]
    NOT?: business_supplier_informationWhereInput | business_supplier_informationWhereInput[]
    inUse?: BoolFilter<"business_supplier_information"> | boolean
    title?: StringFilter<"business_supplier_information"> | string
    description?: StringNullableFilter<"business_supplier_information"> | string | null
    schedule?: JsonNullableFilter<"business_supplier_information">
    businessId?: StringFilter<"business_supplier_information"> | string
    createdAt?: DateTimeFilter<"business_supplier_information"> | Date | string
    updatedAt?: DateTimeFilter<"business_supplier_information"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    business_supplier_pictures?: BusinessSupplierPictureListRelationFilter
  }, "id">

  export type business_supplier_informationOrderByWithAggregationInput = {
    id?: SortOrder
    inUse?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_supplier_informationCountOrderByAggregateInput
    _max?: business_supplier_informationMaxOrderByAggregateInput
    _min?: business_supplier_informationMinOrderByAggregateInput
  }

  export type business_supplier_informationScalarWhereWithAggregatesInput = {
    AND?: business_supplier_informationScalarWhereWithAggregatesInput | business_supplier_informationScalarWhereWithAggregatesInput[]
    OR?: business_supplier_informationScalarWhereWithAggregatesInput[]
    NOT?: business_supplier_informationScalarWhereWithAggregatesInput | business_supplier_informationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_supplier_information"> | string
    inUse?: BoolWithAggregatesFilter<"business_supplier_information"> | boolean
    title?: StringWithAggregatesFilter<"business_supplier_information"> | string
    description?: StringNullableWithAggregatesFilter<"business_supplier_information"> | string | null
    schedule?: JsonNullableWithAggregatesFilter<"business_supplier_information">
    businessId?: StringWithAggregatesFilter<"business_supplier_information"> | string
    createdAt?: DateTimeWithAggregatesFilter<"business_supplier_information"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_supplier_information"> | Date | string
  }

  export type business_supporting_documentsWhereInput = {
    AND?: business_supporting_documentsWhereInput | business_supporting_documentsWhereInput[]
    OR?: business_supporting_documentsWhereInput[]
    NOT?: business_supporting_documentsWhereInput | business_supporting_documentsWhereInput[]
    id?: StringFilter<"business_supporting_documents"> | string
    serviceContract?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    issuedInvoice?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    thirdPartyPaymentAgreement?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    ultimateBeneficialOwnerCertificate?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    businessLicense?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    createdAt?: DateTimeFilter<"business_supporting_documents"> | Date | string
    updatedAt?: DateTimeFilter<"business_supporting_documents"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type business_supporting_documentsOrderByWithRelationInput = {
    id?: SortOrder
    serviceContract?: SortOrderInput | SortOrder
    issuedInvoice?: SortOrderInput | SortOrder
    thirdPartyPaymentAgreement?: SortOrderInput | SortOrder
    ultimateBeneficialOwnerCertificate?: SortOrderInput | SortOrder
    businessLicense?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type business_supporting_documentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_supporting_documentsWhereInput | business_supporting_documentsWhereInput[]
    OR?: business_supporting_documentsWhereInput[]
    NOT?: business_supporting_documentsWhereInput | business_supporting_documentsWhereInput[]
    serviceContract?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    issuedInvoice?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    thirdPartyPaymentAgreement?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    ultimateBeneficialOwnerCertificate?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    businessLicense?: BoolNullableFilter<"business_supporting_documents"> | boolean | null
    createdAt?: DateTimeFilter<"business_supporting_documents"> | Date | string
    updatedAt?: DateTimeFilter<"business_supporting_documents"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type business_supporting_documentsOrderByWithAggregationInput = {
    id?: SortOrder
    serviceContract?: SortOrderInput | SortOrder
    issuedInvoice?: SortOrderInput | SortOrder
    thirdPartyPaymentAgreement?: SortOrderInput | SortOrder
    ultimateBeneficialOwnerCertificate?: SortOrderInput | SortOrder
    businessLicense?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_supporting_documentsCountOrderByAggregateInput
    _max?: business_supporting_documentsMaxOrderByAggregateInput
    _min?: business_supporting_documentsMinOrderByAggregateInput
  }

  export type business_supporting_documentsScalarWhereWithAggregatesInput = {
    AND?: business_supporting_documentsScalarWhereWithAggregatesInput | business_supporting_documentsScalarWhereWithAggregatesInput[]
    OR?: business_supporting_documentsScalarWhereWithAggregatesInput[]
    NOT?: business_supporting_documentsScalarWhereWithAggregatesInput | business_supporting_documentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_supporting_documents"> | string
    serviceContract?: BoolNullableWithAggregatesFilter<"business_supporting_documents"> | boolean | null
    issuedInvoice?: BoolNullableWithAggregatesFilter<"business_supporting_documents"> | boolean | null
    thirdPartyPaymentAgreement?: BoolNullableWithAggregatesFilter<"business_supporting_documents"> | boolean | null
    ultimateBeneficialOwnerCertificate?: BoolNullableWithAggregatesFilter<"business_supporting_documents"> | boolean | null
    businessLicense?: BoolNullableWithAggregatesFilter<"business_supporting_documents"> | boolean | null
    createdAt?: DateTimeWithAggregatesFilter<"business_supporting_documents"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_supporting_documents"> | Date | string
  }

  export type business_supporting_documents_attachedWhereInput = {
    AND?: business_supporting_documents_attachedWhereInput | business_supporting_documents_attachedWhereInput[]
    OR?: business_supporting_documents_attachedWhereInput[]
    NOT?: business_supporting_documents_attachedWhereInput | business_supporting_documents_attachedWhereInput[]
    id?: StringFilter<"business_supporting_documents_attached"> | string
    url?: StringFilter<"business_supporting_documents_attached"> | string
    businessId?: StringFilter<"business_supporting_documents_attached"> | string
    createdAt?: DateTimeFilter<"business_supporting_documents_attached"> | Date | string
    updatedAt?: DateTimeFilter<"business_supporting_documents_attached"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }

  export type business_supporting_documents_attachedOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
  }

  export type business_supporting_documents_attachedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: business_supporting_documents_attachedWhereInput | business_supporting_documents_attachedWhereInput[]
    OR?: business_supporting_documents_attachedWhereInput[]
    NOT?: business_supporting_documents_attachedWhereInput | business_supporting_documents_attachedWhereInput[]
    url?: StringFilter<"business_supporting_documents_attached"> | string
    businessId?: StringFilter<"business_supporting_documents_attached"> | string
    createdAt?: DateTimeFilter<"business_supporting_documents_attached"> | Date | string
    updatedAt?: DateTimeFilter<"business_supporting_documents_attached"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
  }, "id">

  export type business_supporting_documents_attachedOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: business_supporting_documents_attachedCountOrderByAggregateInput
    _max?: business_supporting_documents_attachedMaxOrderByAggregateInput
    _min?: business_supporting_documents_attachedMinOrderByAggregateInput
  }

  export type business_supporting_documents_attachedScalarWhereWithAggregatesInput = {
    AND?: business_supporting_documents_attachedScalarWhereWithAggregatesInput | business_supporting_documents_attachedScalarWhereWithAggregatesInput[]
    OR?: business_supporting_documents_attachedScalarWhereWithAggregatesInput[]
    NOT?: business_supporting_documents_attachedScalarWhereWithAggregatesInput | business_supporting_documents_attachedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"business_supporting_documents_attached"> | string
    url?: StringWithAggregatesFilter<"business_supporting_documents_attached"> | string
    businessId?: StringWithAggregatesFilter<"business_supporting_documents_attached"> | string
    createdAt?: DateTimeWithAggregatesFilter<"business_supporting_documents_attached"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"business_supporting_documents_attached"> | Date | string
  }

  export type businessesWhereInput = {
    AND?: businessesWhereInput | businessesWhereInput[]
    OR?: businessesWhereInput[]
    NOT?: businessesWhereInput | businessesWhereInput[]
    id?: StringFilter<"businesses"> | string
    legalName?: StringFilter<"businesses"> | string
    taxId?: StringFilter<"businesses"> | string
    phone?: StringFilter<"businesses"> | string
    email?: StringFilter<"businesses"> | string
    registeredAddress?: StringFilter<"businesses"> | string
    countryOfIncorporation?: StringFilter<"businesses"> | string
    legalForm?: StringFilter<"businesses"> | string
    legalRepresentative?: JsonFilter<"businesses">
    createdAt?: DateTimeFilter<"businesses"> | Date | string
    updatedAt?: DateTimeFilter<"businesses"> | Date | string
    business_bank_information?: XOR<BusinessBankInformationNullableScalarRelationFilter, BusinessBankInformationWhereInput> | null
    business_commercial_relationships?: XOR<Business_commercial_relationshipsNullableScalarRelationFilter, business_commercial_relationshipsWhereInput> | null
    business_compliance?: XOR<Business_complianceNullableScalarRelationFilter, business_complianceWhereInput> | null
    business_configurations?: XOR<Business_configurationsNullableScalarRelationFilter, business_configurationsWhereInput> | null
    business_employees?: Business_employeesListRelationFilter
    business_employees_clock_records?: Business_employees_clock_recordsListRelationFilter
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIListRelationFilter
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIListRelationFilter
    business_licenses?: BusinessLicenseListRelationFilter
    business_menu_categories?: BusinessMenuCategoryListRelationFilter
    business_menus?: BusinessMenuListRelationFilter
    business_paying_companies?: XOR<BusinessPayingCompanyNullableScalarRelationFilter, BusinessPayingCompanyWhereInput> | null
    business_payment_history?: Business_payment_historyListRelationFilter
    business_payment_history_details?: BusinessPaymentHistoryDetailListRelationFilter
    business_phone_ids?: Business_phone_idsListRelationFilter
    business_products?: BusinessProductListRelationFilter
    business_supplier_information?: Business_supplier_informationListRelationFilter
    business_supplier_pictures?: BusinessSupplierPictureListRelationFilter
    business_supporting_documents?: XOR<Business_supporting_documentsNullableScalarRelationFilter, business_supporting_documentsWhereInput> | null
    business_supporting_documents_attached?: Business_supporting_documents_attachedListRelationFilter
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIListRelationFilter
    client_order_product_lines?: Client_order_product_linesListRelationFilter
    client_order_thermal_printers?: Client_order_thermal_printersListRelationFilter
    client_order_tickets?: ClientOrderTicketListRelationFilter
    client_order_transactions?: ClientOrderTransactionListRelationFilter
    client_orders?: ClientOrderListRelationFilter
  }

  export type businessesOrderByWithRelationInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    registeredAddress?: SortOrder
    countryOfIncorporation?: SortOrder
    legalForm?: SortOrder
    legalRepresentative?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    business_bank_information?: BusinessBankInformationOrderByWithRelationInput
    business_commercial_relationships?: business_commercial_relationshipsOrderByWithRelationInput
    business_compliance?: business_complianceOrderByWithRelationInput
    business_configurations?: business_configurationsOrderByWithRelationInput
    business_employees?: business_employeesOrderByRelationAggregateInput
    business_employees_clock_records?: business_employees_clock_recordsOrderByRelationAggregateInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIOrderByRelationAggregateInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIOrderByRelationAggregateInput
    business_licenses?: BusinessLicenseOrderByRelationAggregateInput
    business_menu_categories?: BusinessMenuCategoryOrderByRelationAggregateInput
    business_menus?: BusinessMenuOrderByRelationAggregateInput
    business_paying_companies?: BusinessPayingCompanyOrderByWithRelationInput
    business_payment_history?: business_payment_historyOrderByRelationAggregateInput
    business_payment_history_details?: BusinessPaymentHistoryDetailOrderByRelationAggregateInput
    business_phone_ids?: business_phone_idsOrderByRelationAggregateInput
    business_products?: BusinessProductOrderByRelationAggregateInput
    business_supplier_information?: business_supplier_informationOrderByRelationAggregateInput
    business_supplier_pictures?: BusinessSupplierPictureOrderByRelationAggregateInput
    business_supporting_documents?: business_supporting_documentsOrderByWithRelationInput
    business_supporting_documents_attached?: business_supporting_documents_attachedOrderByRelationAggregateInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIOrderByRelationAggregateInput
    client_order_product_lines?: client_order_product_linesOrderByRelationAggregateInput
    client_order_thermal_printers?: client_order_thermal_printersOrderByRelationAggregateInput
    client_order_tickets?: ClientOrderTicketOrderByRelationAggregateInput
    client_order_transactions?: ClientOrderTransactionOrderByRelationAggregateInput
    client_orders?: ClientOrderOrderByRelationAggregateInput
  }

  export type businessesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    taxId?: string
    email?: string
    AND?: businessesWhereInput | businessesWhereInput[]
    OR?: businessesWhereInput[]
    NOT?: businessesWhereInput | businessesWhereInput[]
    legalName?: StringFilter<"businesses"> | string
    phone?: StringFilter<"businesses"> | string
    registeredAddress?: StringFilter<"businesses"> | string
    countryOfIncorporation?: StringFilter<"businesses"> | string
    legalForm?: StringFilter<"businesses"> | string
    legalRepresentative?: JsonFilter<"businesses">
    createdAt?: DateTimeFilter<"businesses"> | Date | string
    updatedAt?: DateTimeFilter<"businesses"> | Date | string
    business_bank_information?: XOR<BusinessBankInformationNullableScalarRelationFilter, BusinessBankInformationWhereInput> | null
    business_commercial_relationships?: XOR<Business_commercial_relationshipsNullableScalarRelationFilter, business_commercial_relationshipsWhereInput> | null
    business_compliance?: XOR<Business_complianceNullableScalarRelationFilter, business_complianceWhereInput> | null
    business_configurations?: XOR<Business_configurationsNullableScalarRelationFilter, business_configurationsWhereInput> | null
    business_employees?: Business_employeesListRelationFilter
    business_employees_clock_records?: Business_employees_clock_recordsListRelationFilter
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIListRelationFilter
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIListRelationFilter
    business_licenses?: BusinessLicenseListRelationFilter
    business_menu_categories?: BusinessMenuCategoryListRelationFilter
    business_menus?: BusinessMenuListRelationFilter
    business_paying_companies?: XOR<BusinessPayingCompanyNullableScalarRelationFilter, BusinessPayingCompanyWhereInput> | null
    business_payment_history?: Business_payment_historyListRelationFilter
    business_payment_history_details?: BusinessPaymentHistoryDetailListRelationFilter
    business_phone_ids?: Business_phone_idsListRelationFilter
    business_products?: BusinessProductListRelationFilter
    business_supplier_information?: Business_supplier_informationListRelationFilter
    business_supplier_pictures?: BusinessSupplierPictureListRelationFilter
    business_supporting_documents?: XOR<Business_supporting_documentsNullableScalarRelationFilter, business_supporting_documentsWhereInput> | null
    business_supporting_documents_attached?: Business_supporting_documents_attachedListRelationFilter
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIListRelationFilter
    client_order_product_lines?: Client_order_product_linesListRelationFilter
    client_order_thermal_printers?: Client_order_thermal_printersListRelationFilter
    client_order_tickets?: ClientOrderTicketListRelationFilter
    client_order_transactions?: ClientOrderTransactionListRelationFilter
    client_orders?: ClientOrderListRelationFilter
  }, "id" | "taxId" | "email">

  export type businessesOrderByWithAggregationInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    registeredAddress?: SortOrder
    countryOfIncorporation?: SortOrder
    legalForm?: SortOrder
    legalRepresentative?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: businessesCountOrderByAggregateInput
    _max?: businessesMaxOrderByAggregateInput
    _min?: businessesMinOrderByAggregateInput
  }

  export type businessesScalarWhereWithAggregatesInput = {
    AND?: businessesScalarWhereWithAggregatesInput | businessesScalarWhereWithAggregatesInput[]
    OR?: businessesScalarWhereWithAggregatesInput[]
    NOT?: businessesScalarWhereWithAggregatesInput | businessesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"businesses"> | string
    legalName?: StringWithAggregatesFilter<"businesses"> | string
    taxId?: StringWithAggregatesFilter<"businesses"> | string
    phone?: StringWithAggregatesFilter<"businesses"> | string
    email?: StringWithAggregatesFilter<"businesses"> | string
    registeredAddress?: StringWithAggregatesFilter<"businesses"> | string
    countryOfIncorporation?: StringWithAggregatesFilter<"businesses"> | string
    legalForm?: StringWithAggregatesFilter<"businesses"> | string
    legalRepresentative?: JsonWithAggregatesFilter<"businesses">
    createdAt?: DateTimeWithAggregatesFilter<"businesses"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"businesses"> | Date | string
  }

  export type client_order_product_linesWhereInput = {
    AND?: client_order_product_linesWhereInput | client_order_product_linesWhereInput[]
    OR?: client_order_product_linesWhereInput[]
    NOT?: client_order_product_linesWhereInput | client_order_product_linesWhereInput[]
    id?: StringFilter<"client_order_product_lines"> | string
    orderId?: StringFilter<"client_order_product_lines"> | string
    productSnapshot?: JsonFilter<"client_order_product_lines">
    quantity?: IntFilter<"client_order_product_lines"> | number
    subtotal?: FloatFilter<"client_order_product_lines"> | number
    businessId?: StringFilter<"client_order_product_lines"> | string
    createdAt?: DateTimeFilter<"client_order_product_lines"> | Date | string
    updatedAt?: DateTimeFilter<"client_order_product_lines"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }

  export type client_order_product_linesOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productSnapshot?: SortOrder
    quantity?: SortOrder
    subtotal?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    client_orders?: ClientOrderOrderByWithRelationInput
  }

  export type client_order_product_linesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: client_order_product_linesWhereInput | client_order_product_linesWhereInput[]
    OR?: client_order_product_linesWhereInput[]
    NOT?: client_order_product_linesWhereInput | client_order_product_linesWhereInput[]
    orderId?: StringFilter<"client_order_product_lines"> | string
    productSnapshot?: JsonFilter<"client_order_product_lines">
    quantity?: IntFilter<"client_order_product_lines"> | number
    subtotal?: FloatFilter<"client_order_product_lines"> | number
    businessId?: StringFilter<"client_order_product_lines"> | string
    createdAt?: DateTimeFilter<"client_order_product_lines"> | Date | string
    updatedAt?: DateTimeFilter<"client_order_product_lines"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }, "id">

  export type client_order_product_linesOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productSnapshot?: SortOrder
    quantity?: SortOrder
    subtotal?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: client_order_product_linesCountOrderByAggregateInput
    _avg?: client_order_product_linesAvgOrderByAggregateInput
    _max?: client_order_product_linesMaxOrderByAggregateInput
    _min?: client_order_product_linesMinOrderByAggregateInput
    _sum?: client_order_product_linesSumOrderByAggregateInput
  }

  export type client_order_product_linesScalarWhereWithAggregatesInput = {
    AND?: client_order_product_linesScalarWhereWithAggregatesInput | client_order_product_linesScalarWhereWithAggregatesInput[]
    OR?: client_order_product_linesScalarWhereWithAggregatesInput[]
    NOT?: client_order_product_linesScalarWhereWithAggregatesInput | client_order_product_linesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"client_order_product_lines"> | string
    orderId?: StringWithAggregatesFilter<"client_order_product_lines"> | string
    productSnapshot?: JsonWithAggregatesFilter<"client_order_product_lines">
    quantity?: IntWithAggregatesFilter<"client_order_product_lines"> | number
    subtotal?: FloatWithAggregatesFilter<"client_order_product_lines"> | number
    businessId?: StringWithAggregatesFilter<"client_order_product_lines"> | string
    createdAt?: DateTimeWithAggregatesFilter<"client_order_product_lines"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"client_order_product_lines"> | Date | string
  }

  export type client_order_thermal_printersWhereInput = {
    AND?: client_order_thermal_printersWhereInput | client_order_thermal_printersWhereInput[]
    OR?: client_order_thermal_printersWhereInput[]
    NOT?: client_order_thermal_printersWhereInput | client_order_thermal_printersWhereInput[]
    orderId?: StringFilter<"client_order_thermal_printers"> | string
    printers?: StringNullableListFilter<"client_order_thermal_printers">
    businessId?: StringFilter<"client_order_thermal_printers"> | string
    createdAt?: DateTimeFilter<"client_order_thermal_printers"> | Date | string
    updatedAt?: DateTimeFilter<"client_order_thermal_printers"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }

  export type client_order_thermal_printersOrderByWithRelationInput = {
    orderId?: SortOrder
    printers?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businesses?: businessesOrderByWithRelationInput
    client_orders?: ClientOrderOrderByWithRelationInput
  }

  export type client_order_thermal_printersWhereUniqueInput = Prisma.AtLeast<{
    orderId?: string
    AND?: client_order_thermal_printersWhereInput | client_order_thermal_printersWhereInput[]
    OR?: client_order_thermal_printersWhereInput[]
    NOT?: client_order_thermal_printersWhereInput | client_order_thermal_printersWhereInput[]
    printers?: StringNullableListFilter<"client_order_thermal_printers">
    businessId?: StringFilter<"client_order_thermal_printers"> | string
    createdAt?: DateTimeFilter<"client_order_thermal_printers"> | Date | string
    updatedAt?: DateTimeFilter<"client_order_thermal_printers"> | Date | string
    businesses?: XOR<BusinessesScalarRelationFilter, businessesWhereInput>
    client_orders?: XOR<ClientOrderScalarRelationFilter, ClientOrderWhereInput>
  }, "orderId">

  export type client_order_thermal_printersOrderByWithAggregationInput = {
    orderId?: SortOrder
    printers?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: client_order_thermal_printersCountOrderByAggregateInput
    _max?: client_order_thermal_printersMaxOrderByAggregateInput
    _min?: client_order_thermal_printersMinOrderByAggregateInput
  }

  export type client_order_thermal_printersScalarWhereWithAggregatesInput = {
    AND?: client_order_thermal_printersScalarWhereWithAggregatesInput | client_order_thermal_printersScalarWhereWithAggregatesInput[]
    OR?: client_order_thermal_printersScalarWhereWithAggregatesInput[]
    NOT?: client_order_thermal_printersScalarWhereWithAggregatesInput | client_order_thermal_printersScalarWhereWithAggregatesInput[]
    orderId?: StringWithAggregatesFilter<"client_order_thermal_printers"> | string
    printers?: StringNullableListFilter<"client_order_thermal_printers">
    businessId?: StringWithAggregatesFilter<"client_order_thermal_printers"> | string
    createdAt?: DateTimeWithAggregatesFilter<"client_order_thermal_printers"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"client_order_thermal_printers"> | Date | string
  }

  export type BusinessBankInformationCreateInput = {
    bankName: string
    ibanOrAccountNumber: string
    swiftBic?: string | null
    accountHolderName: string
    bankAddress?: string | null
    currency: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses?: businessesCreateNestedOneWithoutBusiness_bank_informationInput
  }

  export type BusinessBankInformationUncheckedCreateInput = {
    id?: string
    bankName: string
    ibanOrAccountNumber: string
    swiftBic?: string | null
    accountHolderName: string
    bankAddress?: string | null
    currency: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessBankInformationUpdateInput = {
    bankName?: StringFieldUpdateOperationsInput | string
    ibanOrAccountNumber?: StringFieldUpdateOperationsInput | string
    swiftBic?: NullableStringFieldUpdateOperationsInput | string | null
    accountHolderName?: StringFieldUpdateOperationsInput | string
    bankAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_bank_informationNestedInput
  }

  export type BusinessBankInformationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    ibanOrAccountNumber?: StringFieldUpdateOperationsInput | string
    swiftBic?: NullableStringFieldUpdateOperationsInput | string | null
    accountHolderName?: StringFieldUpdateOperationsInput | string
    bankAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessBankInformationCreateManyInput = {
    id?: string
    bankName: string
    ibanOrAccountNumber: string
    swiftBic?: string | null
    accountHolderName: string
    bankAddress?: string | null
    currency: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessBankInformationUpdateManyMutationInput = {
    bankName?: StringFieldUpdateOperationsInput | string
    ibanOrAccountNumber?: StringFieldUpdateOperationsInput | string
    swiftBic?: NullableStringFieldUpdateOperationsInput | string | null
    accountHolderName?: StringFieldUpdateOperationsInput | string
    bankAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessBankInformationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    ibanOrAccountNumber?: StringFieldUpdateOperationsInput | string
    swiftBic?: NullableStringFieldUpdateOperationsInput | string | null
    accountHolderName?: StringFieldUpdateOperationsInput | string
    bankAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPaymentHistoryDetailCreateInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusiness_payment_history_detailsInput
    businesses: businessesCreateNestedOneWithoutBusiness_payment_history_detailsInput
  }

  export type BusinessPaymentHistoryDetailUncheckedCreateInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusiness_payment_history_detailsInput
  }

  export type BusinessPaymentHistoryDetailUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_payment_history?: business_payment_historyUpdateManyWithoutBusiness_payment_history_detailsNestedInput
    businesses?: businessesUpdateOneRequiredWithoutBusiness_payment_history_detailsNestedInput
  }

  export type BusinessPaymentHistoryDetailUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusiness_payment_history_detailsNestedInput
  }

  export type BusinessPaymentHistoryDetailCreateManyInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPaymentHistoryDetailUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPaymentHistoryDetailUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessLicenseCreateInput = {
    id?: string
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    stripePaymentIntentId?: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date | string
    endDate?: Date | string | null
    isPaid?: boolean
    lockinMonths?: number | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_licensesInput
  }

  export type BusinessLicenseUncheckedCreateInput = {
    id?: string
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    stripePaymentIntentId?: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date | string
    endDate?: Date | string | null
    isPaid?: boolean
    lockinMonths?: number | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessLicenseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_licensesNestedInput
  }

  export type BusinessLicenseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessLicenseCreateManyInput = {
    id?: string
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    stripePaymentIntentId?: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date | string
    endDate?: Date | string | null
    isPaid?: boolean
    lockinMonths?: number | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessLicenseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessLicenseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPayingCompanyCreateInput = {
    legalName: string
    taxId: string
    country: string
    role: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses?: businessesCreateNestedOneWithoutBusiness_paying_companiesInput
  }

  export type BusinessPayingCompanyUncheckedCreateInput = {
    id?: string
    legalName: string
    taxId: string
    country: string
    role: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPayingCompanyUpdateInput = {
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_paying_companiesNestedInput
  }

  export type BusinessPayingCompanyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPayingCompanyCreateManyInput = {
    id?: string
    legalName: string
    taxId: string
    country: string
    role: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPayingCompanyUpdateManyMutationInput = {
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPayingCompanyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderCreateInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutClient_ordersInput
    businesses: businessesCreateNestedOneWithoutClient_ordersInput
  }

  export type ClientOrderUncheckedCreateInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutClient_ordersInput
  }

  export type ClientOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutClient_ordersNestedInput
    businesses?: businessesUpdateOneRequiredWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersNestedInput
  }

  export type ClientOrderCreateManyInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTicketCreateInput = {
    tickets: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_ticketsInput
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_ticketsInput
  }

  export type ClientOrderTicketUncheckedCreateInput = {
    orderId: string
    tickets: JsonNullValueInput | InputJsonValue
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTicketUpdateInput = {
    tickets?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_ticketsNestedInput
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_ticketsNestedInput
  }

  export type ClientOrderTicketUncheckedUpdateInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    tickets?: JsonNullValueInput | InputJsonValue
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTicketCreateManyInput = {
    orderId: string
    tickets: JsonNullValueInput | InputJsonValue
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTicketUpdateManyMutationInput = {
    tickets?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTicketUncheckedUpdateManyInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    tickets?: JsonNullValueInput | InputJsonValue
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionCreateInput = {
    id?: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_transactionsInput
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_transactionsInput
  }

  export type ClientOrderTransactionUncheckedCreateInput = {
    id?: string
    orderId: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_transactionsNestedInput
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_transactionsNestedInput
  }

  export type ClientOrderTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionCreateManyInput = {
    id?: string
    orderId: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureCreateInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_supplier_picturesInput
    business_supplier_information: business_supplier_informationCreateNestedOneWithoutBusiness_supplier_picturesInput
  }

  export type BusinessSupplierPictureUncheckedCreateInput = {
    id?: string
    supplierId: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessSupplierPictureUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_supplier_picturesNestedInput
    business_supplier_information?: business_supplier_informationUpdateOneRequiredWithoutBusiness_supplier_picturesNestedInput
  }

  export type BusinessSupplierPictureUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureCreateManyInput = {
    id?: string
    supplierId: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessSupplierPictureUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCreateInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusiness_menusInput
    businesses: businessesCreateNestedOneWithoutBusiness_menusInput
    business_products?: BusinessProductCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuUncheckedCreateInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusiness_menusInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusiness_menusNestedInput
    businesses?: businessesUpdateOneRequiredWithoutBusiness_menusNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusiness_menusNestedInput
  }

  export type BusinessMenuUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusiness_menusNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusiness_menusNestedInput
  }

  export type BusinessMenuCreateManyInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryCreateInput = {
    id?: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_menu_categoriesInput
    business_menus: BusinessMenuCreateNestedOneWithoutBusiness_menu_categoriesInput
  }

  export type BusinessMenuCategoryUncheckedCreateInput = {
    id?: string
    menuId: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_menu_categoriesNestedInput
    business_menus?: BusinessMenuUpdateOneRequiredWithoutBusiness_menu_categoriesNestedInput
  }

  export type BusinessMenuCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryCreateManyInput = {
    id?: string
    menuId: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductCreateInput = {
    id?: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_productsInput
    business_menus: BusinessMenuCreateNestedOneWithoutBusiness_productsInput
  }

  export type BusinessProductUncheckedCreateInput = {
    id?: string
    menuId: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_productsNestedInput
    business_menus?: BusinessMenuUpdateOneRequiredWithoutBusiness_productsNestedInput
  }

  export type BusinessProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductCreateManyInput = {
    id?: string
    menuId: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralSalesReportAICreateInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_general_sales_reports_aiInput
  }

  export type BusinessGeneralSalesReportAIUncheckedCreateInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralSalesReportAIUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_general_sales_reports_aiNestedInput
  }

  export type BusinessGeneralSalesReportAIUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralSalesReportAICreateManyInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralSalesReportAIUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralSalesReportAIUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralWarehouseReportAICreateInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_general_warehouse_reports_aiInput
  }

  export type BusinessGeneralWarehouseReportAIUncheckedCreateInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralWarehouseReportAIUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_general_warehouse_reports_aiNestedInput
  }

  export type BusinessGeneralWarehouseReportAIUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralWarehouseReportAICreateManyInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralWarehouseReportAIUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralWarehouseReportAIUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAICreateInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_warehouse_replenishment_reports_aiInput
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedCreateInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_warehouse_replenishment_reports_aiNestedInput
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAICreateManyInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedCreateInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationships: business_commercial_relationshipsCreateNestedOneWithoutBusiness_commercial_relationship_documents_attachedInput
  }

  export type business_commercial_relationship_documents_attachedUncheckedCreateInput = {
    id: string
    url: string
    commercialRelationshipId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationship_documents_attachedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneRequiredWithoutBusiness_commercial_relationship_documents_attachedNestedInput
  }

  export type business_commercial_relationship_documents_attachedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    commercialRelationshipId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedCreateManyInput = {
    id: string
    url: string
    commercialRelationshipId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationship_documents_attachedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    commercialRelationshipId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationshipsCreateInput = {
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedCreateNestedManyWithoutBusiness_commercial_relationshipsInput
    businesses: businessesCreateNestedOneWithoutBusiness_commercial_relationshipsInput
  }

  export type business_commercial_relationshipsUncheckedCreateInput = {
    id: string
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedUncheckedCreateNestedManyWithoutBusiness_commercial_relationshipsInput
  }

  export type business_commercial_relationshipsUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedUpdateManyWithoutBusiness_commercial_relationshipsNestedInput
    businesses?: businessesUpdateOneRequiredWithoutBusiness_commercial_relationshipsNestedInput
  }

  export type business_commercial_relationshipsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedUncheckedUpdateManyWithoutBusiness_commercial_relationshipsNestedInput
  }

  export type business_commercial_relationshipsCreateManyInput = {
    id: string
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationshipsUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationshipsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_complianceCreateInput = {
    kycVerified?: boolean | null
    amlApproved?: boolean | null
    taxWithholdingApplicable?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_complianceInput
  }

  export type business_complianceUncheckedCreateInput = {
    id: string
    kycVerified?: boolean | null
    amlApproved?: boolean | null
    taxWithholdingApplicable?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_complianceUpdateInput = {
    kycVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amlApproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxWithholdingApplicable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_complianceNestedInput
  }

  export type business_complianceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kycVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amlApproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxWithholdingApplicable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_complianceCreateManyInput = {
    id: string
    kycVerified?: boolean | null
    amlApproved?: boolean | null
    taxWithholdingApplicable?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_complianceUpdateManyMutationInput = {
    kycVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amlApproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxWithholdingApplicable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_complianceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    kycVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amlApproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxWithholdingApplicable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_configurationsCreateInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: boolean | null
    maxPhonesDevices?: number | null
    displayUsername?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_configurationsInput
  }

  export type business_configurationsUncheckedCreateInput = {
    id: string
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: boolean | null
    maxPhonesDevices?: number | null
    displayUsername?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_configurationsUpdateInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maxPhonesDevices?: NullableIntFieldUpdateOperationsInput | number | null
    displayUsername?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_configurationsNestedInput
  }

  export type business_configurationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maxPhonesDevices?: NullableIntFieldUpdateOperationsInput | number | null
    displayUsername?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_configurationsCreateManyInput = {
    id: string
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: boolean | null
    maxPhonesDevices?: number | null
    displayUsername?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_configurationsUpdateManyMutationInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maxPhonesDevices?: NullableIntFieldUpdateOperationsInput | number | null
    displayUsername?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_configurationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maxPhonesDevices?: NullableIntFieldUpdateOperationsInput | number | null
    displayUsername?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employeesCreateInput = {
    id: string
    nameEmployee: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_employeesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusiness_employeesInput
  }

  export type business_employeesUncheckedCreateInput = {
    id: string
    nameEmployee: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusiness_employeesInput
  }

  export type business_employeesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_employeesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusiness_employeesNestedInput
  }

  export type business_employeesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusiness_employeesNestedInput
  }

  export type business_employeesCreateManyInput = {
    id: string
    nameEmployee: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employeesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employeesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsCreateInput = {
    id: string
    recordTime: Date | string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_employees_clock_recordsInput
    business_employees: business_employeesCreateNestedOneWithoutBusiness_employees_clock_recordsInput
  }

  export type business_employees_clock_recordsUncheckedCreateInput = {
    id: string
    employeeId: string
    recordTime: Date | string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employees_clock_recordsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_employees_clock_recordsNestedInput
    business_employees?: business_employeesUpdateOneRequiredWithoutBusiness_employees_clock_recordsNestedInput
  }

  export type business_employees_clock_recordsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeId?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsCreateManyInput = {
    id: string
    employeeId: string
    recordTime: Date | string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employees_clock_recordsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeId?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyCreateInput = {
    id: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_payment_historyInput
    business_payment_history_details: BusinessPaymentHistoryDetailCreateNestedOneWithoutBusiness_payment_historyInput
  }

  export type business_payment_historyUncheckedCreateInput = {
    id: string
    businessId: string
    paymentDetailId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_payment_historyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_payment_historyNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateOneRequiredWithoutBusiness_payment_historyNestedInput
  }

  export type business_payment_historyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    paymentDetailId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyCreateManyInput = {
    id: string
    businessId: string
    paymentDetailId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_payment_historyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    paymentDetailId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_phone_idsCreateInput = {
    id: string
    title: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_phone_idsInput
  }

  export type business_phone_idsUncheckedCreateInput = {
    id: string
    title: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_phone_idsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_phone_idsNestedInput
  }

  export type business_phone_idsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_phone_idsCreateManyInput = {
    id: string
    title: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_phone_idsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_phone_idsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supplier_informationCreateInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_supplier_informationInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusiness_supplier_informationInput
  }

  export type business_supplier_informationUncheckedCreateInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusiness_supplier_informationInput
  }

  export type business_supplier_informationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_supplier_informationNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusiness_supplier_informationNestedInput
  }

  export type business_supplier_informationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusiness_supplier_informationNestedInput
  }

  export type business_supplier_informationCreateManyInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supplier_informationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supplier_informationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documentsCreateInput = {
    serviceContract?: boolean | null
    issuedInvoice?: boolean | null
    thirdPartyPaymentAgreement?: boolean | null
    ultimateBeneficialOwnerCertificate?: boolean | null
    businessLicense?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_supporting_documentsInput
  }

  export type business_supporting_documentsUncheckedCreateInput = {
    id: string
    serviceContract?: boolean | null
    issuedInvoice?: boolean | null
    thirdPartyPaymentAgreement?: boolean | null
    ultimateBeneficialOwnerCertificate?: boolean | null
    businessLicense?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documentsUpdateInput = {
    serviceContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    issuedInvoice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentAgreement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ultimateBeneficialOwnerCertificate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    businessLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_supporting_documentsNestedInput
  }

  export type business_supporting_documentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    issuedInvoice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentAgreement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ultimateBeneficialOwnerCertificate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    businessLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documentsCreateManyInput = {
    id: string
    serviceContract?: boolean | null
    issuedInvoice?: boolean | null
    thirdPartyPaymentAgreement?: boolean | null
    ultimateBeneficialOwnerCertificate?: boolean | null
    businessLicense?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documentsUpdateManyMutationInput = {
    serviceContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    issuedInvoice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentAgreement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ultimateBeneficialOwnerCertificate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    businessLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    serviceContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    issuedInvoice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentAgreement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ultimateBeneficialOwnerCertificate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    businessLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedCreateInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_supporting_documents_attachedInput
  }

  export type business_supporting_documents_attachedUncheckedCreateInput = {
    id: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documents_attachedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_supporting_documents_attachedNestedInput
  }

  export type business_supporting_documents_attachedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedCreateManyInput = {
    id: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documents_attachedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type businessesCreateInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateManyInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type businessesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type businessesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesCreateInput = {
    id: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_product_linesInput
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_product_linesInput
  }

  export type client_order_product_linesUncheckedCreateInput = {
    id: string
    orderId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_product_linesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_product_linesNestedInput
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_product_linesNestedInput
  }

  export type client_order_product_linesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesCreateManyInput = {
    id: string
    orderId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_product_linesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_thermal_printersCreateInput = {
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_thermal_printersInput
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_thermal_printersInput
  }

  export type client_order_thermal_printersUncheckedCreateInput = {
    orderId: string
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_thermal_printersUpdateInput = {
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_thermal_printersNestedInput
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_thermal_printersNestedInput
  }

  export type client_order_thermal_printersUncheckedUpdateInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_thermal_printersCreateManyInput = {
    orderId: string
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_thermal_printersUpdateManyMutationInput = {
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_thermal_printersUncheckedUpdateManyInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BusinessesScalarRelationFilter = {
    is?: businessesWhereInput
    isNot?: businessesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type BusinessBankInformationCountOrderByAggregateInput = {
    id?: SortOrder
    bankName?: SortOrder
    ibanOrAccountNumber?: SortOrder
    swiftBic?: SortOrder
    accountHolderName?: SortOrder
    bankAddress?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessBankInformationMaxOrderByAggregateInput = {
    id?: SortOrder
    bankName?: SortOrder
    ibanOrAccountNumber?: SortOrder
    swiftBic?: SortOrder
    accountHolderName?: SortOrder
    bankAddress?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessBankInformationMinOrderByAggregateInput = {
    id?: SortOrder
    bankName?: SortOrder
    ibanOrAccountNumber?: SortOrder
    swiftBic?: SortOrder
    accountHolderName?: SortOrder
    bankAddress?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Business_payment_historyListRelationFilter = {
    every?: business_payment_historyWhereInput
    some?: business_payment_historyWhereInput
    none?: business_payment_historyWhereInput
  }

  export type business_payment_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessPaymentHistoryDetailCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    taxesIncluded?: SortOrder
    periodStart?: SortOrder
    periodEnd?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPaymentHistoryDetailAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type BusinessPaymentHistoryDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    taxesIncluded?: SortOrder
    periodStart?: SortOrder
    periodEnd?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPaymentHistoryDetailMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    taxesIncluded?: SortOrder
    periodStart?: SortOrder
    periodEnd?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPaymentHistoryDetailSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumLicenseTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseType | EnumLicenseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseTypeFilter<$PrismaModel> | $Enums.LicenseType
  }

  export type EnumLicensePlanFilter<$PrismaModel = never> = {
    equals?: $Enums.LicensePlan | EnumLicensePlanFieldRefInput<$PrismaModel>
    in?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    not?: NestedEnumLicensePlanFilter<$PrismaModel> | $Enums.LicensePlan
  }

  export type EnumLicenseStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusFilter<$PrismaModel> | $Enums.LicenseStatus
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BusinessLicenseCountOrderByAggregateInput = {
    id?: SortOrder
    stripeCustomerId?: SortOrder
    stripeSubscriptionId?: SortOrder
    stripePaymentIntentId?: SortOrder
    licenseType?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isPaid?: SortOrder
    lockinMonths?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessLicenseAvgOrderByAggregateInput = {
    lockinMonths?: SortOrder
  }

  export type BusinessLicenseMaxOrderByAggregateInput = {
    id?: SortOrder
    stripeCustomerId?: SortOrder
    stripeSubscriptionId?: SortOrder
    stripePaymentIntentId?: SortOrder
    licenseType?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isPaid?: SortOrder
    lockinMonths?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessLicenseMinOrderByAggregateInput = {
    id?: SortOrder
    stripeCustomerId?: SortOrder
    stripeSubscriptionId?: SortOrder
    stripePaymentIntentId?: SortOrder
    licenseType?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isPaid?: SortOrder
    lockinMonths?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessLicenseSumOrderByAggregateInput = {
    lockinMonths?: SortOrder
  }

  export type EnumLicenseTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseType | EnumLicenseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseTypeWithAggregatesFilter<$PrismaModel> | $Enums.LicenseType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicenseTypeFilter<$PrismaModel>
    _max?: NestedEnumLicenseTypeFilter<$PrismaModel>
  }

  export type EnumLicensePlanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicensePlan | EnumLicensePlanFieldRefInput<$PrismaModel>
    in?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    not?: NestedEnumLicensePlanWithAggregatesFilter<$PrismaModel> | $Enums.LicensePlan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicensePlanFilter<$PrismaModel>
    _max?: NestedEnumLicensePlanFilter<$PrismaModel>
  }

  export type EnumLicenseStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusWithAggregatesFilter<$PrismaModel> | $Enums.LicenseStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicenseStatusFilter<$PrismaModel>
    _max?: NestedEnumLicenseStatusFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BusinessPayingCompanyCountOrderByAggregateInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPayingCompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPayingCompanyMinOrderByAggregateInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type Client_order_product_linesListRelationFilter = {
    every?: client_order_product_linesWhereInput
    some?: client_order_product_linesWhereInput
    none?: client_order_product_linesWhereInput
  }

  export type Client_order_thermal_printersNullableScalarRelationFilter = {
    is?: client_order_thermal_printersWhereInput | null
    isNot?: client_order_thermal_printersWhereInput | null
  }

  export type ClientOrderTicketNullableScalarRelationFilter = {
    is?: ClientOrderTicketWhereInput | null
    isNot?: ClientOrderTicketWhereInput | null
  }

  export type ClientOrderTransactionListRelationFilter = {
    every?: ClientOrderTransactionWhereInput
    some?: ClientOrderTransactionWhereInput
    none?: ClientOrderTransactionWhereInput
  }

  export type client_order_product_linesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientOrderTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientOrderCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    informationNotes?: SortOrder
    tableServed?: SortOrder
    employeeServed?: SortOrder
    refund?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    informationNotes?: SortOrder
    tableServed?: SortOrder
    employeeServed?: SortOrder
    refund?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    informationNotes?: SortOrder
    tableServed?: SortOrder
    employeeServed?: SortOrder
    refund?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ClientOrderScalarRelationFilter = {
    is?: ClientOrderWhereInput
    isNot?: ClientOrderWhereInput
  }

  export type ClientOrderTicketCountOrderByAggregateInput = {
    orderId?: SortOrder
    tickets?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderTicketMaxOrderByAggregateInput = {
    orderId?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderTicketMinOrderByAggregateInput = {
    orderId?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type EnumPaymentMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableFilter<$PrismaModel> | $Enums.PaymentMethod | null
  }

  export type ClientOrderTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    externalTransactionId?: SortOrder
    transactionAmount?: SortOrder
    transactionCurrencyIso?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderTransactionAvgOrderByAggregateInput = {
    transactionAmount?: SortOrder
  }

  export type ClientOrderTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    externalTransactionId?: SortOrder
    transactionAmount?: SortOrder
    transactionCurrencyIso?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    externalTransactionId?: SortOrder
    transactionAmount?: SortOrder
    transactionCurrencyIso?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClientOrderTransactionSumOrderByAggregateInput = {
    transactionAmount?: SortOrder
  }

  export type EnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }

  export type EnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
  }

  export type Business_supplier_informationScalarRelationFilter = {
    is?: business_supplier_informationWhereInput
    isNot?: business_supplier_informationWhereInput
  }

  export type BusinessSupplierPictureCountOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessSupplierPictureMaxOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessSupplierPictureMinOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessMenuCategoryListRelationFilter = {
    every?: BusinessMenuCategoryWhereInput
    some?: BusinessMenuCategoryWhereInput
    none?: BusinessMenuCategoryWhereInput
  }

  export type BusinessProductListRelationFilter = {
    every?: BusinessProductWhereInput
    some?: BusinessProductWhereInput
    none?: BusinessProductWhereInput
  }

  export type BusinessMenuCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessMenuCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessMenuMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessMenuMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BusinessMenuScalarRelationFilter = {
    is?: BusinessMenuWhereInput
    isNot?: BusinessMenuWhereInput
  }

  export type BusinessMenuCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    menuId?: SortOrder
    vip?: SortOrder
    haveSchedule?: SortOrder
    schedule?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessMenuCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    menuId?: SortOrder
    vip?: SortOrder
    haveSchedule?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessMenuCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    menuId?: SortOrder
    vip?: SortOrder
    haveSchedule?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableListFilter<$PrismaModel = never> = {
    equals?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    has?: number | IntFieldRefInput<$PrismaModel> | null
    hasEvery?: number[] | ListIntFieldRefInput<$PrismaModel>
    hasSome?: number[] | ListIntFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type DateTimeNullableListFilter<$PrismaModel = never> = {
    equals?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    has?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    hasEvery?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    hasSome?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BusinessProductCountOrderByAggregateInput = {
    id?: SortOrder
    menuId?: SortOrder
    name?: SortOrder
    unityAmount?: SortOrder
    stockBatches?: SortOrder
    expirationDates?: SortOrder
    unityConsumeStock?: SortOrder
    typeUnitConsumeMeasurement?: SortOrder
    tags?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessProductAvgOrderByAggregateInput = {
    unityAmount?: SortOrder
    stockBatches?: SortOrder
    unityConsumeStock?: SortOrder
  }

  export type BusinessProductMaxOrderByAggregateInput = {
    id?: SortOrder
    menuId?: SortOrder
    name?: SortOrder
    unityAmount?: SortOrder
    unityConsumeStock?: SortOrder
    typeUnitConsumeMeasurement?: SortOrder
    tags?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessProductMinOrderByAggregateInput = {
    id?: SortOrder
    menuId?: SortOrder
    name?: SortOrder
    unityAmount?: SortOrder
    unityConsumeStock?: SortOrder
    typeUnitConsumeMeasurement?: SortOrder
    tags?: SortOrder
    nameLastModificationEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessProductSumOrderByAggregateInput = {
    unityAmount?: SortOrder
    stockBatches?: SortOrder
    unityConsumeStock?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BusinessGeneralSalesReportAICountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessGeneralSalesReportAIMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessGeneralSalesReportAIMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessGeneralWarehouseReportAICountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessGeneralWarehouseReportAIMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessGeneralWarehouseReportAIMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessWarehouseReplenishmentReportAICountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessWarehouseReplenishmentReportAIMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessWarehouseReplenishmentReportAIMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Business_commercial_relationshipsScalarRelationFilter = {
    is?: business_commercial_relationshipsWhereInput
    isNot?: business_commercial_relationshipsWhereInput
  }

  export type business_commercial_relationship_documents_attachedCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    commercialRelationshipId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_commercial_relationship_documents_attachedMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    commercialRelationshipId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_commercial_relationship_documents_attachedMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    commercialRelationshipId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Business_commercial_relationship_documents_attachedListRelationFilter = {
    every?: business_commercial_relationship_documents_attachedWhereInput
    some?: business_commercial_relationship_documents_attachedWhereInput
    none?: business_commercial_relationship_documents_attachedWhereInput
  }

  export type business_commercial_relationship_documents_attachedOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type business_commercial_relationshipsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    signedContract?: SortOrder
    thirdPartyPaymentPermission?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_commercial_relationshipsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    signedContract?: SortOrder
    thirdPartyPaymentPermission?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_commercial_relationshipsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    signedContract?: SortOrder
    thirdPartyPaymentPermission?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_complianceCountOrderByAggregateInput = {
    id?: SortOrder
    kycVerified?: SortOrder
    amlApproved?: SortOrder
    taxWithholdingApplicable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_complianceMaxOrderByAggregateInput = {
    id?: SortOrder
    kycVerified?: SortOrder
    amlApproved?: SortOrder
    taxWithholdingApplicable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_complianceMinOrderByAggregateInput = {
    id?: SortOrder
    kycVerified?: SortOrder
    amlApproved?: SortOrder
    taxWithholdingApplicable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_configurationsCountOrderByAggregateInput = {
    id?: SortOrder
    wifi?: SortOrder
    schedule?: SortOrder
    functionsActivated?: SortOrder
    apiKey?: SortOrder
    affiliate?: SortOrder
    maxPhonesDevices?: SortOrder
    displayUsername?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_configurationsAvgOrderByAggregateInput = {
    maxPhonesDevices?: SortOrder
  }

  export type business_configurationsMaxOrderByAggregateInput = {
    id?: SortOrder
    affiliate?: SortOrder
    maxPhonesDevices?: SortOrder
    displayUsername?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_configurationsMinOrderByAggregateInput = {
    id?: SortOrder
    affiliate?: SortOrder
    maxPhonesDevices?: SortOrder
    displayUsername?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_configurationsSumOrderByAggregateInput = {
    maxPhonesDevices?: SortOrder
  }

  export type Business_employees_clock_recordsListRelationFilter = {
    every?: business_employees_clock_recordsWhereInput
    some?: business_employees_clock_recordsWhereInput
    none?: business_employees_clock_recordsWhereInput
  }

  export type business_employees_clock_recordsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type business_employeesBusinessIdNameEmployeeCompoundUniqueInput = {
    businessId: string
    nameEmployee: string
  }

  export type business_employeesCountOrderByAggregateInput = {
    id?: SortOrder
    nameEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_employeesMaxOrderByAggregateInput = {
    id?: SortOrder
    nameEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_employeesMinOrderByAggregateInput = {
    id?: SortOrder
    nameEmployee?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Business_employeesScalarRelationFilter = {
    is?: business_employeesWhereInput
    isNot?: business_employeesWhereInput
  }

  export type business_employees_clock_recordsCountOrderByAggregateInput = {
    id?: SortOrder
    employeeId?: SortOrder
    recordTime?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_employees_clock_recordsMaxOrderByAggregateInput = {
    id?: SortOrder
    employeeId?: SortOrder
    recordTime?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_employees_clock_recordsMinOrderByAggregateInput = {
    id?: SortOrder
    employeeId?: SortOrder
    recordTime?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPaymentHistoryDetailScalarRelationFilter = {
    is?: BusinessPaymentHistoryDetailWhereInput
    isNot?: BusinessPaymentHistoryDetailWhereInput
  }

  export type business_payment_historyBusinessIdPaymentDetailIdCreatedAtCompoundUniqueInput = {
    businessId: string
    paymentDetailId: string
    createdAt: Date | string
  }

  export type business_payment_historyCountOrderByAggregateInput = {
    id?: SortOrder
    businessId?: SortOrder
    paymentDetailId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    stripeInvoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_payment_historyAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type business_payment_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    businessId?: SortOrder
    paymentDetailId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    stripeInvoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_payment_historyMinOrderByAggregateInput = {
    id?: SortOrder
    businessId?: SortOrder
    paymentDetailId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    stripeInvoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_payment_historySumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type business_phone_idsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_phone_idsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_phone_idsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessSupplierPictureListRelationFilter = {
    every?: BusinessSupplierPictureWhereInput
    some?: BusinessSupplierPictureWhereInput
    none?: BusinessSupplierPictureWhereInput
  }

  export type BusinessSupplierPictureOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type business_supplier_informationCountOrderByAggregateInput = {
    id?: SortOrder
    inUse?: SortOrder
    title?: SortOrder
    description?: SortOrder
    schedule?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supplier_informationMaxOrderByAggregateInput = {
    id?: SortOrder
    inUse?: SortOrder
    title?: SortOrder
    description?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supplier_informationMinOrderByAggregateInput = {
    id?: SortOrder
    inUse?: SortOrder
    title?: SortOrder
    description?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supporting_documentsCountOrderByAggregateInput = {
    id?: SortOrder
    serviceContract?: SortOrder
    issuedInvoice?: SortOrder
    thirdPartyPaymentAgreement?: SortOrder
    ultimateBeneficialOwnerCertificate?: SortOrder
    businessLicense?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supporting_documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    serviceContract?: SortOrder
    issuedInvoice?: SortOrder
    thirdPartyPaymentAgreement?: SortOrder
    ultimateBeneficialOwnerCertificate?: SortOrder
    businessLicense?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supporting_documentsMinOrderByAggregateInput = {
    id?: SortOrder
    serviceContract?: SortOrder
    issuedInvoice?: SortOrder
    thirdPartyPaymentAgreement?: SortOrder
    ultimateBeneficialOwnerCertificate?: SortOrder
    businessLicense?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supporting_documents_attachedCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supporting_documents_attachedMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type business_supporting_documents_attachedMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessBankInformationNullableScalarRelationFilter = {
    is?: BusinessBankInformationWhereInput | null
    isNot?: BusinessBankInformationWhereInput | null
  }

  export type Business_commercial_relationshipsNullableScalarRelationFilter = {
    is?: business_commercial_relationshipsWhereInput | null
    isNot?: business_commercial_relationshipsWhereInput | null
  }

  export type Business_complianceNullableScalarRelationFilter = {
    is?: business_complianceWhereInput | null
    isNot?: business_complianceWhereInput | null
  }

  export type Business_configurationsNullableScalarRelationFilter = {
    is?: business_configurationsWhereInput | null
    isNot?: business_configurationsWhereInput | null
  }

  export type Business_employeesListRelationFilter = {
    every?: business_employeesWhereInput
    some?: business_employeesWhereInput
    none?: business_employeesWhereInput
  }

  export type BusinessGeneralSalesReportAIListRelationFilter = {
    every?: BusinessGeneralSalesReportAIWhereInput
    some?: BusinessGeneralSalesReportAIWhereInput
    none?: BusinessGeneralSalesReportAIWhereInput
  }

  export type BusinessGeneralWarehouseReportAIListRelationFilter = {
    every?: BusinessGeneralWarehouseReportAIWhereInput
    some?: BusinessGeneralWarehouseReportAIWhereInput
    none?: BusinessGeneralWarehouseReportAIWhereInput
  }

  export type BusinessLicenseListRelationFilter = {
    every?: BusinessLicenseWhereInput
    some?: BusinessLicenseWhereInput
    none?: BusinessLicenseWhereInput
  }

  export type BusinessMenuListRelationFilter = {
    every?: BusinessMenuWhereInput
    some?: BusinessMenuWhereInput
    none?: BusinessMenuWhereInput
  }

  export type BusinessPayingCompanyNullableScalarRelationFilter = {
    is?: BusinessPayingCompanyWhereInput | null
    isNot?: BusinessPayingCompanyWhereInput | null
  }

  export type BusinessPaymentHistoryDetailListRelationFilter = {
    every?: BusinessPaymentHistoryDetailWhereInput
    some?: BusinessPaymentHistoryDetailWhereInput
    none?: BusinessPaymentHistoryDetailWhereInput
  }

  export type Business_phone_idsListRelationFilter = {
    every?: business_phone_idsWhereInput
    some?: business_phone_idsWhereInput
    none?: business_phone_idsWhereInput
  }

  export type Business_supplier_informationListRelationFilter = {
    every?: business_supplier_informationWhereInput
    some?: business_supplier_informationWhereInput
    none?: business_supplier_informationWhereInput
  }

  export type Business_supporting_documentsNullableScalarRelationFilter = {
    is?: business_supporting_documentsWhereInput | null
    isNot?: business_supporting_documentsWhereInput | null
  }

  export type Business_supporting_documents_attachedListRelationFilter = {
    every?: business_supporting_documents_attachedWhereInput
    some?: business_supporting_documents_attachedWhereInput
    none?: business_supporting_documents_attachedWhereInput
  }

  export type BusinessWarehouseReplenishmentReportAIListRelationFilter = {
    every?: BusinessWarehouseReplenishmentReportAIWhereInput
    some?: BusinessWarehouseReplenishmentReportAIWhereInput
    none?: BusinessWarehouseReplenishmentReportAIWhereInput
  }

  export type Client_order_thermal_printersListRelationFilter = {
    every?: client_order_thermal_printersWhereInput
    some?: client_order_thermal_printersWhereInput
    none?: client_order_thermal_printersWhereInput
  }

  export type ClientOrderTicketListRelationFilter = {
    every?: ClientOrderTicketWhereInput
    some?: ClientOrderTicketWhereInput
    none?: ClientOrderTicketWhereInput
  }

  export type ClientOrderListRelationFilter = {
    every?: ClientOrderWhereInput
    some?: ClientOrderWhereInput
    none?: ClientOrderWhereInput
  }

  export type business_employeesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessGeneralSalesReportAIOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessGeneralWarehouseReportAIOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessLicenseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessMenuOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessPaymentHistoryDetailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type business_phone_idsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type business_supplier_informationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type business_supporting_documents_attachedOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessWarehouseReplenishmentReportAIOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type client_order_thermal_printersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientOrderTicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type businessesCountOrderByAggregateInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    registeredAddress?: SortOrder
    countryOfIncorporation?: SortOrder
    legalForm?: SortOrder
    legalRepresentative?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type businessesMaxOrderByAggregateInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    registeredAddress?: SortOrder
    countryOfIncorporation?: SortOrder
    legalForm?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type businessesMinOrderByAggregateInput = {
    id?: SortOrder
    legalName?: SortOrder
    taxId?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    registeredAddress?: SortOrder
    countryOfIncorporation?: SortOrder
    legalForm?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type client_order_product_linesCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productSnapshot?: SortOrder
    quantity?: SortOrder
    subtotal?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type client_order_product_linesAvgOrderByAggregateInput = {
    quantity?: SortOrder
    subtotal?: SortOrder
  }

  export type client_order_product_linesMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    quantity?: SortOrder
    subtotal?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type client_order_product_linesMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    quantity?: SortOrder
    subtotal?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type client_order_product_linesSumOrderByAggregateInput = {
    quantity?: SortOrder
    subtotal?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type client_order_thermal_printersCountOrderByAggregateInput = {
    orderId?: SortOrder
    printers?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type client_order_thermal_printersMaxOrderByAggregateInput = {
    orderId?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type client_order_thermal_printersMinOrderByAggregateInput = {
    orderId?: SortOrder
    businessId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type businessesCreateNestedOneWithoutBusiness_bank_informationInput = {
    create?: XOR<businessesCreateWithoutBusiness_bank_informationInput, businessesUncheckedCreateWithoutBusiness_bank_informationInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_bank_informationInput
    connect?: businessesWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type businessesUpdateOneRequiredWithoutBusiness_bank_informationNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_bank_informationInput, businessesUncheckedCreateWithoutBusiness_bank_informationInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_bank_informationInput
    upsert?: businessesUpsertWithoutBusiness_bank_informationInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_bank_informationInput, businessesUpdateWithoutBusiness_bank_informationInput>, businessesUncheckedUpdateWithoutBusiness_bank_informationInput>
  }

  export type business_payment_historyCreateNestedManyWithoutBusiness_payment_history_detailsInput = {
    create?: XOR<business_payment_historyCreateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput> | business_payment_historyCreateWithoutBusiness_payment_history_detailsInput[] | business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput | business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput[]
    createMany?: business_payment_historyCreateManyBusiness_payment_history_detailsInputEnvelope
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_payment_history_detailsInput = {
    create?: XOR<businessesCreateWithoutBusiness_payment_history_detailsInput, businessesUncheckedCreateWithoutBusiness_payment_history_detailsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_payment_history_detailsInput
    connect?: businessesWhereUniqueInput
  }

  export type business_payment_historyUncheckedCreateNestedManyWithoutBusiness_payment_history_detailsInput = {
    create?: XOR<business_payment_historyCreateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput> | business_payment_historyCreateWithoutBusiness_payment_history_detailsInput[] | business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput | business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput[]
    createMany?: business_payment_historyCreateManyBusiness_payment_history_detailsInputEnvelope
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type business_payment_historyUpdateManyWithoutBusiness_payment_history_detailsNestedInput = {
    create?: XOR<business_payment_historyCreateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput> | business_payment_historyCreateWithoutBusiness_payment_history_detailsInput[] | business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput | business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput[]
    upsert?: business_payment_historyUpsertWithWhereUniqueWithoutBusiness_payment_history_detailsInput | business_payment_historyUpsertWithWhereUniqueWithoutBusiness_payment_history_detailsInput[]
    createMany?: business_payment_historyCreateManyBusiness_payment_history_detailsInputEnvelope
    set?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    disconnect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    delete?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    update?: business_payment_historyUpdateWithWhereUniqueWithoutBusiness_payment_history_detailsInput | business_payment_historyUpdateWithWhereUniqueWithoutBusiness_payment_history_detailsInput[]
    updateMany?: business_payment_historyUpdateManyWithWhereWithoutBusiness_payment_history_detailsInput | business_payment_historyUpdateManyWithWhereWithoutBusiness_payment_history_detailsInput[]
    deleteMany?: business_payment_historyScalarWhereInput | business_payment_historyScalarWhereInput[]
  }

  export type businessesUpdateOneRequiredWithoutBusiness_payment_history_detailsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_payment_history_detailsInput, businessesUncheckedCreateWithoutBusiness_payment_history_detailsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_payment_history_detailsInput
    upsert?: businessesUpsertWithoutBusiness_payment_history_detailsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_payment_history_detailsInput, businessesUpdateWithoutBusiness_payment_history_detailsInput>, businessesUncheckedUpdateWithoutBusiness_payment_history_detailsInput>
  }

  export type business_payment_historyUncheckedUpdateManyWithoutBusiness_payment_history_detailsNestedInput = {
    create?: XOR<business_payment_historyCreateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput> | business_payment_historyCreateWithoutBusiness_payment_history_detailsInput[] | business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput | business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput[]
    upsert?: business_payment_historyUpsertWithWhereUniqueWithoutBusiness_payment_history_detailsInput | business_payment_historyUpsertWithWhereUniqueWithoutBusiness_payment_history_detailsInput[]
    createMany?: business_payment_historyCreateManyBusiness_payment_history_detailsInputEnvelope
    set?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    disconnect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    delete?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    update?: business_payment_historyUpdateWithWhereUniqueWithoutBusiness_payment_history_detailsInput | business_payment_historyUpdateWithWhereUniqueWithoutBusiness_payment_history_detailsInput[]
    updateMany?: business_payment_historyUpdateManyWithWhereWithoutBusiness_payment_history_detailsInput | business_payment_historyUpdateManyWithWhereWithoutBusiness_payment_history_detailsInput[]
    deleteMany?: business_payment_historyScalarWhereInput | business_payment_historyScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_licensesInput = {
    create?: XOR<businessesCreateWithoutBusiness_licensesInput, businessesUncheckedCreateWithoutBusiness_licensesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_licensesInput
    connect?: businessesWhereUniqueInput
  }

  export type EnumLicenseTypeFieldUpdateOperationsInput = {
    set?: $Enums.LicenseType
  }

  export type EnumLicensePlanFieldUpdateOperationsInput = {
    set?: $Enums.LicensePlan
  }

  export type EnumLicenseStatusFieldUpdateOperationsInput = {
    set?: $Enums.LicenseStatus
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type businessesUpdateOneRequiredWithoutBusiness_licensesNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_licensesInput, businessesUncheckedCreateWithoutBusiness_licensesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_licensesInput
    upsert?: businessesUpsertWithoutBusiness_licensesInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_licensesInput, businessesUpdateWithoutBusiness_licensesInput>, businessesUncheckedUpdateWithoutBusiness_licensesInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_paying_companiesInput = {
    create?: XOR<businessesCreateWithoutBusiness_paying_companiesInput, businessesUncheckedCreateWithoutBusiness_paying_companiesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_paying_companiesInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_paying_companiesNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_paying_companiesInput, businessesUncheckedCreateWithoutBusiness_paying_companiesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_paying_companiesInput
    upsert?: businessesUpsertWithoutBusiness_paying_companiesInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_paying_companiesInput, businessesUpdateWithoutBusiness_paying_companiesInput>, businessesUncheckedUpdateWithoutBusiness_paying_companiesInput>
  }

  export type client_order_product_linesCreateNestedManyWithoutClient_ordersInput = {
    create?: XOR<client_order_product_linesCreateWithoutClient_ordersInput, client_order_product_linesUncheckedCreateWithoutClient_ordersInput> | client_order_product_linesCreateWithoutClient_ordersInput[] | client_order_product_linesUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutClient_ordersInput | client_order_product_linesCreateOrConnectWithoutClient_ordersInput[]
    createMany?: client_order_product_linesCreateManyClient_ordersInputEnvelope
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
  }

  export type client_order_thermal_printersCreateNestedOneWithoutClient_ordersInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutClient_ordersInput, client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutClient_ordersInput
    connect?: client_order_thermal_printersWhereUniqueInput
  }

  export type ClientOrderTicketCreateNestedOneWithoutClient_ordersInput = {
    create?: XOR<ClientOrderTicketCreateWithoutClient_ordersInput, ClientOrderTicketUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutClient_ordersInput
    connect?: ClientOrderTicketWhereUniqueInput
  }

  export type ClientOrderTransactionCreateNestedManyWithoutClient_ordersInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutClient_ordersInput, ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput> | ClientOrderTransactionCreateWithoutClient_ordersInput[] | ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput | ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput[]
    createMany?: ClientOrderTransactionCreateManyClient_ordersInputEnvelope
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
  }

  export type businessesCreateNestedOneWithoutClient_ordersInput = {
    create?: XOR<businessesCreateWithoutClient_ordersInput, businessesUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_ordersInput
    connect?: businessesWhereUniqueInput
  }

  export type client_order_product_linesUncheckedCreateNestedManyWithoutClient_ordersInput = {
    create?: XOR<client_order_product_linesCreateWithoutClient_ordersInput, client_order_product_linesUncheckedCreateWithoutClient_ordersInput> | client_order_product_linesCreateWithoutClient_ordersInput[] | client_order_product_linesUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutClient_ordersInput | client_order_product_linesCreateOrConnectWithoutClient_ordersInput[]
    createMany?: client_order_product_linesCreateManyClient_ordersInputEnvelope
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
  }

  export type client_order_thermal_printersUncheckedCreateNestedOneWithoutClient_ordersInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutClient_ordersInput, client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutClient_ordersInput
    connect?: client_order_thermal_printersWhereUniqueInput
  }

  export type ClientOrderTicketUncheckedCreateNestedOneWithoutClient_ordersInput = {
    create?: XOR<ClientOrderTicketCreateWithoutClient_ordersInput, ClientOrderTicketUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutClient_ordersInput
    connect?: ClientOrderTicketWhereUniqueInput
  }

  export type ClientOrderTransactionUncheckedCreateNestedManyWithoutClient_ordersInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutClient_ordersInput, ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput> | ClientOrderTransactionCreateWithoutClient_ordersInput[] | ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput | ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput[]
    createMany?: ClientOrderTransactionCreateManyClient_ordersInputEnvelope
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type client_order_product_linesUpdateManyWithoutClient_ordersNestedInput = {
    create?: XOR<client_order_product_linesCreateWithoutClient_ordersInput, client_order_product_linesUncheckedCreateWithoutClient_ordersInput> | client_order_product_linesCreateWithoutClient_ordersInput[] | client_order_product_linesUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutClient_ordersInput | client_order_product_linesCreateOrConnectWithoutClient_ordersInput[]
    upsert?: client_order_product_linesUpsertWithWhereUniqueWithoutClient_ordersInput | client_order_product_linesUpsertWithWhereUniqueWithoutClient_ordersInput[]
    createMany?: client_order_product_linesCreateManyClient_ordersInputEnvelope
    set?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    disconnect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    delete?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    update?: client_order_product_linesUpdateWithWhereUniqueWithoutClient_ordersInput | client_order_product_linesUpdateWithWhereUniqueWithoutClient_ordersInput[]
    updateMany?: client_order_product_linesUpdateManyWithWhereWithoutClient_ordersInput | client_order_product_linesUpdateManyWithWhereWithoutClient_ordersInput[]
    deleteMany?: client_order_product_linesScalarWhereInput | client_order_product_linesScalarWhereInput[]
  }

  export type client_order_thermal_printersUpdateOneWithoutClient_ordersNestedInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutClient_ordersInput, client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutClient_ordersInput
    upsert?: client_order_thermal_printersUpsertWithoutClient_ordersInput
    disconnect?: client_order_thermal_printersWhereInput | boolean
    delete?: client_order_thermal_printersWhereInput | boolean
    connect?: client_order_thermal_printersWhereUniqueInput
    update?: XOR<XOR<client_order_thermal_printersUpdateToOneWithWhereWithoutClient_ordersInput, client_order_thermal_printersUpdateWithoutClient_ordersInput>, client_order_thermal_printersUncheckedUpdateWithoutClient_ordersInput>
  }

  export type ClientOrderTicketUpdateOneWithoutClient_ordersNestedInput = {
    create?: XOR<ClientOrderTicketCreateWithoutClient_ordersInput, ClientOrderTicketUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutClient_ordersInput
    upsert?: ClientOrderTicketUpsertWithoutClient_ordersInput
    disconnect?: ClientOrderTicketWhereInput | boolean
    delete?: ClientOrderTicketWhereInput | boolean
    connect?: ClientOrderTicketWhereUniqueInput
    update?: XOR<XOR<ClientOrderTicketUpdateToOneWithWhereWithoutClient_ordersInput, ClientOrderTicketUpdateWithoutClient_ordersInput>, ClientOrderTicketUncheckedUpdateWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionUpdateManyWithoutClient_ordersNestedInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutClient_ordersInput, ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput> | ClientOrderTransactionCreateWithoutClient_ordersInput[] | ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput | ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput[]
    upsert?: ClientOrderTransactionUpsertWithWhereUniqueWithoutClient_ordersInput | ClientOrderTransactionUpsertWithWhereUniqueWithoutClient_ordersInput[]
    createMany?: ClientOrderTransactionCreateManyClient_ordersInputEnvelope
    set?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    disconnect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    delete?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    update?: ClientOrderTransactionUpdateWithWhereUniqueWithoutClient_ordersInput | ClientOrderTransactionUpdateWithWhereUniqueWithoutClient_ordersInput[]
    updateMany?: ClientOrderTransactionUpdateManyWithWhereWithoutClient_ordersInput | ClientOrderTransactionUpdateManyWithWhereWithoutClient_ordersInput[]
    deleteMany?: ClientOrderTransactionScalarWhereInput | ClientOrderTransactionScalarWhereInput[]
  }

  export type businessesUpdateOneRequiredWithoutClient_ordersNestedInput = {
    create?: XOR<businessesCreateWithoutClient_ordersInput, businessesUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_ordersInput
    upsert?: businessesUpsertWithoutClient_ordersInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutClient_ordersInput, businessesUpdateWithoutClient_ordersInput>, businessesUncheckedUpdateWithoutClient_ordersInput>
  }

  export type client_order_product_linesUncheckedUpdateManyWithoutClient_ordersNestedInput = {
    create?: XOR<client_order_product_linesCreateWithoutClient_ordersInput, client_order_product_linesUncheckedCreateWithoutClient_ordersInput> | client_order_product_linesCreateWithoutClient_ordersInput[] | client_order_product_linesUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutClient_ordersInput | client_order_product_linesCreateOrConnectWithoutClient_ordersInput[]
    upsert?: client_order_product_linesUpsertWithWhereUniqueWithoutClient_ordersInput | client_order_product_linesUpsertWithWhereUniqueWithoutClient_ordersInput[]
    createMany?: client_order_product_linesCreateManyClient_ordersInputEnvelope
    set?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    disconnect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    delete?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    update?: client_order_product_linesUpdateWithWhereUniqueWithoutClient_ordersInput | client_order_product_linesUpdateWithWhereUniqueWithoutClient_ordersInput[]
    updateMany?: client_order_product_linesUpdateManyWithWhereWithoutClient_ordersInput | client_order_product_linesUpdateManyWithWhereWithoutClient_ordersInput[]
    deleteMany?: client_order_product_linesScalarWhereInput | client_order_product_linesScalarWhereInput[]
  }

  export type client_order_thermal_printersUncheckedUpdateOneWithoutClient_ordersNestedInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutClient_ordersInput, client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutClient_ordersInput
    upsert?: client_order_thermal_printersUpsertWithoutClient_ordersInput
    disconnect?: client_order_thermal_printersWhereInput | boolean
    delete?: client_order_thermal_printersWhereInput | boolean
    connect?: client_order_thermal_printersWhereUniqueInput
    update?: XOR<XOR<client_order_thermal_printersUpdateToOneWithWhereWithoutClient_ordersInput, client_order_thermal_printersUpdateWithoutClient_ordersInput>, client_order_thermal_printersUncheckedUpdateWithoutClient_ordersInput>
  }

  export type ClientOrderTicketUncheckedUpdateOneWithoutClient_ordersNestedInput = {
    create?: XOR<ClientOrderTicketCreateWithoutClient_ordersInput, ClientOrderTicketUncheckedCreateWithoutClient_ordersInput>
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutClient_ordersInput
    upsert?: ClientOrderTicketUpsertWithoutClient_ordersInput
    disconnect?: ClientOrderTicketWhereInput | boolean
    delete?: ClientOrderTicketWhereInput | boolean
    connect?: ClientOrderTicketWhereUniqueInput
    update?: XOR<XOR<ClientOrderTicketUpdateToOneWithWhereWithoutClient_ordersInput, ClientOrderTicketUpdateWithoutClient_ordersInput>, ClientOrderTicketUncheckedUpdateWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersNestedInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutClient_ordersInput, ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput> | ClientOrderTransactionCreateWithoutClient_ordersInput[] | ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput | ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput[]
    upsert?: ClientOrderTransactionUpsertWithWhereUniqueWithoutClient_ordersInput | ClientOrderTransactionUpsertWithWhereUniqueWithoutClient_ordersInput[]
    createMany?: ClientOrderTransactionCreateManyClient_ordersInputEnvelope
    set?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    disconnect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    delete?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    update?: ClientOrderTransactionUpdateWithWhereUniqueWithoutClient_ordersInput | ClientOrderTransactionUpdateWithWhereUniqueWithoutClient_ordersInput[]
    updateMany?: ClientOrderTransactionUpdateManyWithWhereWithoutClient_ordersInput | ClientOrderTransactionUpdateManyWithWhereWithoutClient_ordersInput[]
    deleteMany?: ClientOrderTransactionScalarWhereInput | ClientOrderTransactionScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutClient_order_ticketsInput = {
    create?: XOR<businessesCreateWithoutClient_order_ticketsInput, businessesUncheckedCreateWithoutClient_order_ticketsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_ticketsInput
    connect?: businessesWhereUniqueInput
  }

  export type ClientOrderCreateNestedOneWithoutClient_order_ticketsInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_ticketsInput, ClientOrderUncheckedCreateWithoutClient_order_ticketsInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_ticketsInput
    connect?: ClientOrderWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutClient_order_ticketsNestedInput = {
    create?: XOR<businessesCreateWithoutClient_order_ticketsInput, businessesUncheckedCreateWithoutClient_order_ticketsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_ticketsInput
    upsert?: businessesUpsertWithoutClient_order_ticketsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutClient_order_ticketsInput, businessesUpdateWithoutClient_order_ticketsInput>, businessesUncheckedUpdateWithoutClient_order_ticketsInput>
  }

  export type ClientOrderUpdateOneRequiredWithoutClient_order_ticketsNestedInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_ticketsInput, ClientOrderUncheckedCreateWithoutClient_order_ticketsInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_ticketsInput
    upsert?: ClientOrderUpsertWithoutClient_order_ticketsInput
    connect?: ClientOrderWhereUniqueInput
    update?: XOR<XOR<ClientOrderUpdateToOneWithWhereWithoutClient_order_ticketsInput, ClientOrderUpdateWithoutClient_order_ticketsInput>, ClientOrderUncheckedUpdateWithoutClient_order_ticketsInput>
  }

  export type businessesCreateNestedOneWithoutClient_order_transactionsInput = {
    create?: XOR<businessesCreateWithoutClient_order_transactionsInput, businessesUncheckedCreateWithoutClient_order_transactionsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_transactionsInput
    connect?: businessesWhereUniqueInput
  }

  export type ClientOrderCreateNestedOneWithoutClient_order_transactionsInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_transactionsInput, ClientOrderUncheckedCreateWithoutClient_order_transactionsInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_transactionsInput
    connect?: ClientOrderWhereUniqueInput
  }

  export type EnumTransactionStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransactionStatus
  }

  export type NullableEnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod | null
  }

  export type businessesUpdateOneRequiredWithoutClient_order_transactionsNestedInput = {
    create?: XOR<businessesCreateWithoutClient_order_transactionsInput, businessesUncheckedCreateWithoutClient_order_transactionsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_transactionsInput
    upsert?: businessesUpsertWithoutClient_order_transactionsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutClient_order_transactionsInput, businessesUpdateWithoutClient_order_transactionsInput>, businessesUncheckedUpdateWithoutClient_order_transactionsInput>
  }

  export type ClientOrderUpdateOneRequiredWithoutClient_order_transactionsNestedInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_transactionsInput, ClientOrderUncheckedCreateWithoutClient_order_transactionsInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_transactionsInput
    upsert?: ClientOrderUpsertWithoutClient_order_transactionsInput
    connect?: ClientOrderWhereUniqueInput
    update?: XOR<XOR<ClientOrderUpdateToOneWithWhereWithoutClient_order_transactionsInput, ClientOrderUpdateWithoutClient_order_transactionsInput>, ClientOrderUncheckedUpdateWithoutClient_order_transactionsInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_supplier_picturesInput = {
    create?: XOR<businessesCreateWithoutBusiness_supplier_picturesInput, businessesUncheckedCreateWithoutBusiness_supplier_picturesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supplier_picturesInput
    connect?: businessesWhereUniqueInput
  }

  export type business_supplier_informationCreateNestedOneWithoutBusiness_supplier_picturesInput = {
    create?: XOR<business_supplier_informationCreateWithoutBusiness_supplier_picturesInput, business_supplier_informationUncheckedCreateWithoutBusiness_supplier_picturesInput>
    connectOrCreate?: business_supplier_informationCreateOrConnectWithoutBusiness_supplier_picturesInput
    connect?: business_supplier_informationWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_supplier_picturesNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_supplier_picturesInput, businessesUncheckedCreateWithoutBusiness_supplier_picturesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supplier_picturesInput
    upsert?: businessesUpsertWithoutBusiness_supplier_picturesInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_supplier_picturesInput, businessesUpdateWithoutBusiness_supplier_picturesInput>, businessesUncheckedUpdateWithoutBusiness_supplier_picturesInput>
  }

  export type business_supplier_informationUpdateOneRequiredWithoutBusiness_supplier_picturesNestedInput = {
    create?: XOR<business_supplier_informationCreateWithoutBusiness_supplier_picturesInput, business_supplier_informationUncheckedCreateWithoutBusiness_supplier_picturesInput>
    connectOrCreate?: business_supplier_informationCreateOrConnectWithoutBusiness_supplier_picturesInput
    upsert?: business_supplier_informationUpsertWithoutBusiness_supplier_picturesInput
    connect?: business_supplier_informationWhereUniqueInput
    update?: XOR<XOR<business_supplier_informationUpdateToOneWithWhereWithoutBusiness_supplier_picturesInput, business_supplier_informationUpdateWithoutBusiness_supplier_picturesInput>, business_supplier_informationUncheckedUpdateWithoutBusiness_supplier_picturesInput>
  }

  export type BusinessMenuCategoryCreateNestedManyWithoutBusiness_menusInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput> | BusinessMenuCategoryCreateWithoutBusiness_menusInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput | BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput[]
    createMany?: BusinessMenuCategoryCreateManyBusiness_menusInputEnvelope
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_menusInput = {
    create?: XOR<businessesCreateWithoutBusiness_menusInput, businessesUncheckedCreateWithoutBusiness_menusInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_menusInput
    connect?: businessesWhereUniqueInput
  }

  export type BusinessProductCreateNestedManyWithoutBusiness_menusInput = {
    create?: XOR<BusinessProductCreateWithoutBusiness_menusInput, BusinessProductUncheckedCreateWithoutBusiness_menusInput> | BusinessProductCreateWithoutBusiness_menusInput[] | BusinessProductUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusiness_menusInput | BusinessProductCreateOrConnectWithoutBusiness_menusInput[]
    createMany?: BusinessProductCreateManyBusiness_menusInputEnvelope
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
  }

  export type BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusiness_menusInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput> | BusinessMenuCategoryCreateWithoutBusiness_menusInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput | BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput[]
    createMany?: BusinessMenuCategoryCreateManyBusiness_menusInputEnvelope
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
  }

  export type BusinessProductUncheckedCreateNestedManyWithoutBusiness_menusInput = {
    create?: XOR<BusinessProductCreateWithoutBusiness_menusInput, BusinessProductUncheckedCreateWithoutBusiness_menusInput> | BusinessProductCreateWithoutBusiness_menusInput[] | BusinessProductUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusiness_menusInput | BusinessProductCreateOrConnectWithoutBusiness_menusInput[]
    createMany?: BusinessProductCreateManyBusiness_menusInputEnvelope
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
  }

  export type BusinessMenuCategoryUpdateManyWithoutBusiness_menusNestedInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput> | BusinessMenuCategoryCreateWithoutBusiness_menusInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput | BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput[]
    upsert?: BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusiness_menusInput | BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusiness_menusInput[]
    createMany?: BusinessMenuCategoryCreateManyBusiness_menusInputEnvelope
    set?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    disconnect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    delete?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    update?: BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusiness_menusInput | BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusiness_menusInput[]
    updateMany?: BusinessMenuCategoryUpdateManyWithWhereWithoutBusiness_menusInput | BusinessMenuCategoryUpdateManyWithWhereWithoutBusiness_menusInput[]
    deleteMany?: BusinessMenuCategoryScalarWhereInput | BusinessMenuCategoryScalarWhereInput[]
  }

  export type businessesUpdateOneRequiredWithoutBusiness_menusNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_menusInput, businessesUncheckedCreateWithoutBusiness_menusInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_menusInput
    upsert?: businessesUpsertWithoutBusiness_menusInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_menusInput, businessesUpdateWithoutBusiness_menusInput>, businessesUncheckedUpdateWithoutBusiness_menusInput>
  }

  export type BusinessProductUpdateManyWithoutBusiness_menusNestedInput = {
    create?: XOR<BusinessProductCreateWithoutBusiness_menusInput, BusinessProductUncheckedCreateWithoutBusiness_menusInput> | BusinessProductCreateWithoutBusiness_menusInput[] | BusinessProductUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusiness_menusInput | BusinessProductCreateOrConnectWithoutBusiness_menusInput[]
    upsert?: BusinessProductUpsertWithWhereUniqueWithoutBusiness_menusInput | BusinessProductUpsertWithWhereUniqueWithoutBusiness_menusInput[]
    createMany?: BusinessProductCreateManyBusiness_menusInputEnvelope
    set?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    disconnect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    delete?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    update?: BusinessProductUpdateWithWhereUniqueWithoutBusiness_menusInput | BusinessProductUpdateWithWhereUniqueWithoutBusiness_menusInput[]
    updateMany?: BusinessProductUpdateManyWithWhereWithoutBusiness_menusInput | BusinessProductUpdateManyWithWhereWithoutBusiness_menusInput[]
    deleteMany?: BusinessProductScalarWhereInput | BusinessProductScalarWhereInput[]
  }

  export type BusinessMenuCategoryUncheckedUpdateManyWithoutBusiness_menusNestedInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput> | BusinessMenuCategoryCreateWithoutBusiness_menusInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput | BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput[]
    upsert?: BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusiness_menusInput | BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusiness_menusInput[]
    createMany?: BusinessMenuCategoryCreateManyBusiness_menusInputEnvelope
    set?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    disconnect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    delete?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    update?: BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusiness_menusInput | BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusiness_menusInput[]
    updateMany?: BusinessMenuCategoryUpdateManyWithWhereWithoutBusiness_menusInput | BusinessMenuCategoryUpdateManyWithWhereWithoutBusiness_menusInput[]
    deleteMany?: BusinessMenuCategoryScalarWhereInput | BusinessMenuCategoryScalarWhereInput[]
  }

  export type BusinessProductUncheckedUpdateManyWithoutBusiness_menusNestedInput = {
    create?: XOR<BusinessProductCreateWithoutBusiness_menusInput, BusinessProductUncheckedCreateWithoutBusiness_menusInput> | BusinessProductCreateWithoutBusiness_menusInput[] | BusinessProductUncheckedCreateWithoutBusiness_menusInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusiness_menusInput | BusinessProductCreateOrConnectWithoutBusiness_menusInput[]
    upsert?: BusinessProductUpsertWithWhereUniqueWithoutBusiness_menusInput | BusinessProductUpsertWithWhereUniqueWithoutBusiness_menusInput[]
    createMany?: BusinessProductCreateManyBusiness_menusInputEnvelope
    set?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    disconnect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    delete?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    update?: BusinessProductUpdateWithWhereUniqueWithoutBusiness_menusInput | BusinessProductUpdateWithWhereUniqueWithoutBusiness_menusInput[]
    updateMany?: BusinessProductUpdateManyWithWhereWithoutBusiness_menusInput | BusinessProductUpdateManyWithWhereWithoutBusiness_menusInput[]
    deleteMany?: BusinessProductScalarWhereInput | BusinessProductScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_menu_categoriesInput = {
    create?: XOR<businessesCreateWithoutBusiness_menu_categoriesInput, businessesUncheckedCreateWithoutBusiness_menu_categoriesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_menu_categoriesInput
    connect?: businessesWhereUniqueInput
  }

  export type BusinessMenuCreateNestedOneWithoutBusiness_menu_categoriesInput = {
    create?: XOR<BusinessMenuCreateWithoutBusiness_menu_categoriesInput, BusinessMenuUncheckedCreateWithoutBusiness_menu_categoriesInput>
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusiness_menu_categoriesInput
    connect?: BusinessMenuWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_menu_categoriesNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_menu_categoriesInput, businessesUncheckedCreateWithoutBusiness_menu_categoriesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_menu_categoriesInput
    upsert?: businessesUpsertWithoutBusiness_menu_categoriesInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_menu_categoriesInput, businessesUpdateWithoutBusiness_menu_categoriesInput>, businessesUncheckedUpdateWithoutBusiness_menu_categoriesInput>
  }

  export type BusinessMenuUpdateOneRequiredWithoutBusiness_menu_categoriesNestedInput = {
    create?: XOR<BusinessMenuCreateWithoutBusiness_menu_categoriesInput, BusinessMenuUncheckedCreateWithoutBusiness_menu_categoriesInput>
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusiness_menu_categoriesInput
    upsert?: BusinessMenuUpsertWithoutBusiness_menu_categoriesInput
    connect?: BusinessMenuWhereUniqueInput
    update?: XOR<XOR<BusinessMenuUpdateToOneWithWhereWithoutBusiness_menu_categoriesInput, BusinessMenuUpdateWithoutBusiness_menu_categoriesInput>, BusinessMenuUncheckedUpdateWithoutBusiness_menu_categoriesInput>
  }

  export type BusinessProductCreatestockBatchesInput = {
    set: number[]
  }

  export type BusinessProductCreateexpirationDatesInput = {
    set: Date[] | string[]
  }

  export type businessesCreateNestedOneWithoutBusiness_productsInput = {
    create?: XOR<businessesCreateWithoutBusiness_productsInput, businessesUncheckedCreateWithoutBusiness_productsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_productsInput
    connect?: businessesWhereUniqueInput
  }

  export type BusinessMenuCreateNestedOneWithoutBusiness_productsInput = {
    create?: XOR<BusinessMenuCreateWithoutBusiness_productsInput, BusinessMenuUncheckedCreateWithoutBusiness_productsInput>
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusiness_productsInput
    connect?: BusinessMenuWhereUniqueInput
  }

  export type BusinessProductUpdatestockBatchesInput = {
    set?: number[]
    push?: number | number[]
  }

  export type BusinessProductUpdateexpirationDatesInput = {
    set?: Date[] | string[]
    push?: Date | string | Date[] | string[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type businessesUpdateOneRequiredWithoutBusiness_productsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_productsInput, businessesUncheckedCreateWithoutBusiness_productsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_productsInput
    upsert?: businessesUpsertWithoutBusiness_productsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_productsInput, businessesUpdateWithoutBusiness_productsInput>, businessesUncheckedUpdateWithoutBusiness_productsInput>
  }

  export type BusinessMenuUpdateOneRequiredWithoutBusiness_productsNestedInput = {
    create?: XOR<BusinessMenuCreateWithoutBusiness_productsInput, BusinessMenuUncheckedCreateWithoutBusiness_productsInput>
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusiness_productsInput
    upsert?: BusinessMenuUpsertWithoutBusiness_productsInput
    connect?: BusinessMenuWhereUniqueInput
    update?: XOR<XOR<BusinessMenuUpdateToOneWithWhereWithoutBusiness_productsInput, BusinessMenuUpdateWithoutBusiness_productsInput>, BusinessMenuUncheckedUpdateWithoutBusiness_productsInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_general_sales_reports_aiInput = {
    create?: XOR<businessesCreateWithoutBusiness_general_sales_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_sales_reports_aiInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_general_sales_reports_aiInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_general_sales_reports_aiNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_general_sales_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_sales_reports_aiInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_general_sales_reports_aiInput
    upsert?: businessesUpsertWithoutBusiness_general_sales_reports_aiInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_general_sales_reports_aiInput, businessesUpdateWithoutBusiness_general_sales_reports_aiInput>, businessesUncheckedUpdateWithoutBusiness_general_sales_reports_aiInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_general_warehouse_reports_aiInput = {
    create?: XOR<businessesCreateWithoutBusiness_general_warehouse_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_warehouse_reports_aiInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_general_warehouse_reports_aiInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_general_warehouse_reports_aiNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_general_warehouse_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_warehouse_reports_aiInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_general_warehouse_reports_aiInput
    upsert?: businessesUpsertWithoutBusiness_general_warehouse_reports_aiInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_general_warehouse_reports_aiInput, businessesUpdateWithoutBusiness_general_warehouse_reports_aiInput>, businessesUncheckedUpdateWithoutBusiness_general_warehouse_reports_aiInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    create?: XOR<businessesCreateWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUncheckedCreateWithoutBusiness_warehouse_replenishment_reports_aiInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_warehouse_replenishment_reports_aiInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_warehouse_replenishment_reports_aiNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUncheckedCreateWithoutBusiness_warehouse_replenishment_reports_aiInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_warehouse_replenishment_reports_aiInput
    upsert?: businessesUpsertWithoutBusiness_warehouse_replenishment_reports_aiInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput>, businessesUncheckedUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput>
  }

  export type business_commercial_relationshipsCreateNestedOneWithoutBusiness_commercial_relationship_documents_attachedInput = {
    create?: XOR<business_commercial_relationshipsCreateWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUncheckedCreateWithoutBusiness_commercial_relationship_documents_attachedInput>
    connectOrCreate?: business_commercial_relationshipsCreateOrConnectWithoutBusiness_commercial_relationship_documents_attachedInput
    connect?: business_commercial_relationshipsWhereUniqueInput
  }

  export type business_commercial_relationshipsUpdateOneRequiredWithoutBusiness_commercial_relationship_documents_attachedNestedInput = {
    create?: XOR<business_commercial_relationshipsCreateWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUncheckedCreateWithoutBusiness_commercial_relationship_documents_attachedInput>
    connectOrCreate?: business_commercial_relationshipsCreateOrConnectWithoutBusiness_commercial_relationship_documents_attachedInput
    upsert?: business_commercial_relationshipsUpsertWithoutBusiness_commercial_relationship_documents_attachedInput
    connect?: business_commercial_relationshipsWhereUniqueInput
    update?: XOR<XOR<business_commercial_relationshipsUpdateToOneWithWhereWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUpdateWithoutBusiness_commercial_relationship_documents_attachedInput>, business_commercial_relationshipsUncheckedUpdateWithoutBusiness_commercial_relationship_documents_attachedInput>
  }

  export type business_commercial_relationship_documents_attachedCreateNestedManyWithoutBusiness_commercial_relationshipsInput = {
    create?: XOR<business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput> | business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput[] | business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput[]
    connectOrCreate?: business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput[]
    createMany?: business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInputEnvelope
    connect?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_commercial_relationshipsInput = {
    create?: XOR<businessesCreateWithoutBusiness_commercial_relationshipsInput, businessesUncheckedCreateWithoutBusiness_commercial_relationshipsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_commercial_relationshipsInput
    connect?: businessesWhereUniqueInput
  }

  export type business_commercial_relationship_documents_attachedUncheckedCreateNestedManyWithoutBusiness_commercial_relationshipsInput = {
    create?: XOR<business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput> | business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput[] | business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput[]
    connectOrCreate?: business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput[]
    createMany?: business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInputEnvelope
    connect?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
  }

  export type business_commercial_relationship_documents_attachedUpdateManyWithoutBusiness_commercial_relationshipsNestedInput = {
    create?: XOR<business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput> | business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput[] | business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput[]
    connectOrCreate?: business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput[]
    upsert?: business_commercial_relationship_documents_attachedUpsertWithWhereUniqueWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedUpsertWithWhereUniqueWithoutBusiness_commercial_relationshipsInput[]
    createMany?: business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInputEnvelope
    set?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    disconnect?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    delete?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    connect?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    update?: business_commercial_relationship_documents_attachedUpdateWithWhereUniqueWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedUpdateWithWhereUniqueWithoutBusiness_commercial_relationshipsInput[]
    updateMany?: business_commercial_relationship_documents_attachedUpdateManyWithWhereWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedUpdateManyWithWhereWithoutBusiness_commercial_relationshipsInput[]
    deleteMany?: business_commercial_relationship_documents_attachedScalarWhereInput | business_commercial_relationship_documents_attachedScalarWhereInput[]
  }

  export type businessesUpdateOneRequiredWithoutBusiness_commercial_relationshipsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_commercial_relationshipsInput, businessesUncheckedCreateWithoutBusiness_commercial_relationshipsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_commercial_relationshipsInput
    upsert?: businessesUpsertWithoutBusiness_commercial_relationshipsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_commercial_relationshipsInput, businessesUpdateWithoutBusiness_commercial_relationshipsInput>, businessesUncheckedUpdateWithoutBusiness_commercial_relationshipsInput>
  }

  export type business_commercial_relationship_documents_attachedUncheckedUpdateManyWithoutBusiness_commercial_relationshipsNestedInput = {
    create?: XOR<business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput> | business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput[] | business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput[]
    connectOrCreate?: business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput[]
    upsert?: business_commercial_relationship_documents_attachedUpsertWithWhereUniqueWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedUpsertWithWhereUniqueWithoutBusiness_commercial_relationshipsInput[]
    createMany?: business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInputEnvelope
    set?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    disconnect?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    delete?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    connect?: business_commercial_relationship_documents_attachedWhereUniqueInput | business_commercial_relationship_documents_attachedWhereUniqueInput[]
    update?: business_commercial_relationship_documents_attachedUpdateWithWhereUniqueWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedUpdateWithWhereUniqueWithoutBusiness_commercial_relationshipsInput[]
    updateMany?: business_commercial_relationship_documents_attachedUpdateManyWithWhereWithoutBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedUpdateManyWithWhereWithoutBusiness_commercial_relationshipsInput[]
    deleteMany?: business_commercial_relationship_documents_attachedScalarWhereInput | business_commercial_relationship_documents_attachedScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_complianceInput = {
    create?: XOR<businessesCreateWithoutBusiness_complianceInput, businessesUncheckedCreateWithoutBusiness_complianceInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_complianceInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_complianceNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_complianceInput, businessesUncheckedCreateWithoutBusiness_complianceInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_complianceInput
    upsert?: businessesUpsertWithoutBusiness_complianceInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_complianceInput, businessesUpdateWithoutBusiness_complianceInput>, businessesUncheckedUpdateWithoutBusiness_complianceInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_configurationsInput = {
    create?: XOR<businessesCreateWithoutBusiness_configurationsInput, businessesUncheckedCreateWithoutBusiness_configurationsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_configurationsInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_configurationsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_configurationsInput, businessesUncheckedCreateWithoutBusiness_configurationsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_configurationsInput
    upsert?: businessesUpsertWithoutBusiness_configurationsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_configurationsInput, businessesUpdateWithoutBusiness_configurationsInput>, businessesUncheckedUpdateWithoutBusiness_configurationsInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_employeesInput = {
    create?: XOR<businessesCreateWithoutBusiness_employeesInput, businessesUncheckedCreateWithoutBusiness_employeesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_employeesInput
    connect?: businessesWhereUniqueInput
  }

  export type business_employees_clock_recordsCreateNestedManyWithoutBusiness_employeesInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput> | business_employees_clock_recordsCreateWithoutBusiness_employeesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput | business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusiness_employeesInputEnvelope
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
  }

  export type business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusiness_employeesInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput> | business_employees_clock_recordsCreateWithoutBusiness_employeesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput | business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusiness_employeesInputEnvelope
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
  }

  export type businessesUpdateOneRequiredWithoutBusiness_employeesNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_employeesInput, businessesUncheckedCreateWithoutBusiness_employeesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_employeesInput
    upsert?: businessesUpsertWithoutBusiness_employeesInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_employeesInput, businessesUpdateWithoutBusiness_employeesInput>, businessesUncheckedUpdateWithoutBusiness_employeesInput>
  }

  export type business_employees_clock_recordsUpdateManyWithoutBusiness_employeesNestedInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput> | business_employees_clock_recordsCreateWithoutBusiness_employeesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput | business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput[]
    upsert?: business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusiness_employeesInput | business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusiness_employeesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusiness_employeesInputEnvelope
    set?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    disconnect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    delete?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    update?: business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusiness_employeesInput | business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusiness_employeesInput[]
    updateMany?: business_employees_clock_recordsUpdateManyWithWhereWithoutBusiness_employeesInput | business_employees_clock_recordsUpdateManyWithWhereWithoutBusiness_employeesInput[]
    deleteMany?: business_employees_clock_recordsScalarWhereInput | business_employees_clock_recordsScalarWhereInput[]
  }

  export type business_employees_clock_recordsUncheckedUpdateManyWithoutBusiness_employeesNestedInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput> | business_employees_clock_recordsCreateWithoutBusiness_employeesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput | business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput[]
    upsert?: business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusiness_employeesInput | business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusiness_employeesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusiness_employeesInputEnvelope
    set?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    disconnect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    delete?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    update?: business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusiness_employeesInput | business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusiness_employeesInput[]
    updateMany?: business_employees_clock_recordsUpdateManyWithWhereWithoutBusiness_employeesInput | business_employees_clock_recordsUpdateManyWithWhereWithoutBusiness_employeesInput[]
    deleteMany?: business_employees_clock_recordsScalarWhereInput | business_employees_clock_recordsScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_employees_clock_recordsInput = {
    create?: XOR<businessesCreateWithoutBusiness_employees_clock_recordsInput, businessesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_employees_clock_recordsInput
    connect?: businessesWhereUniqueInput
  }

  export type business_employeesCreateNestedOneWithoutBusiness_employees_clock_recordsInput = {
    create?: XOR<business_employeesCreateWithoutBusiness_employees_clock_recordsInput, business_employeesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
    connectOrCreate?: business_employeesCreateOrConnectWithoutBusiness_employees_clock_recordsInput
    connect?: business_employeesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_employees_clock_recordsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_employees_clock_recordsInput, businessesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_employees_clock_recordsInput
    upsert?: businessesUpsertWithoutBusiness_employees_clock_recordsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_employees_clock_recordsInput, businessesUpdateWithoutBusiness_employees_clock_recordsInput>, businessesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput>
  }

  export type business_employeesUpdateOneRequiredWithoutBusiness_employees_clock_recordsNestedInput = {
    create?: XOR<business_employeesCreateWithoutBusiness_employees_clock_recordsInput, business_employeesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
    connectOrCreate?: business_employeesCreateOrConnectWithoutBusiness_employees_clock_recordsInput
    upsert?: business_employeesUpsertWithoutBusiness_employees_clock_recordsInput
    connect?: business_employeesWhereUniqueInput
    update?: XOR<XOR<business_employeesUpdateToOneWithWhereWithoutBusiness_employees_clock_recordsInput, business_employeesUpdateWithoutBusiness_employees_clock_recordsInput>, business_employeesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_payment_historyInput = {
    create?: XOR<businessesCreateWithoutBusiness_payment_historyInput, businessesUncheckedCreateWithoutBusiness_payment_historyInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_payment_historyInput
    connect?: businessesWhereUniqueInput
  }

  export type BusinessPaymentHistoryDetailCreateNestedOneWithoutBusiness_payment_historyInput = {
    create?: XOR<BusinessPaymentHistoryDetailCreateWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusiness_payment_historyInput>
    connectOrCreate?: BusinessPaymentHistoryDetailCreateOrConnectWithoutBusiness_payment_historyInput
    connect?: BusinessPaymentHistoryDetailWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_payment_historyNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_payment_historyInput, businessesUncheckedCreateWithoutBusiness_payment_historyInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_payment_historyInput
    upsert?: businessesUpsertWithoutBusiness_payment_historyInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_payment_historyInput, businessesUpdateWithoutBusiness_payment_historyInput>, businessesUncheckedUpdateWithoutBusiness_payment_historyInput>
  }

  export type BusinessPaymentHistoryDetailUpdateOneRequiredWithoutBusiness_payment_historyNestedInput = {
    create?: XOR<BusinessPaymentHistoryDetailCreateWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusiness_payment_historyInput>
    connectOrCreate?: BusinessPaymentHistoryDetailCreateOrConnectWithoutBusiness_payment_historyInput
    upsert?: BusinessPaymentHistoryDetailUpsertWithoutBusiness_payment_historyInput
    connect?: BusinessPaymentHistoryDetailWhereUniqueInput
    update?: XOR<XOR<BusinessPaymentHistoryDetailUpdateToOneWithWhereWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUpdateWithoutBusiness_payment_historyInput>, BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusiness_payment_historyInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_phone_idsInput = {
    create?: XOR<businessesCreateWithoutBusiness_phone_idsInput, businessesUncheckedCreateWithoutBusiness_phone_idsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_phone_idsInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_phone_idsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_phone_idsInput, businessesUncheckedCreateWithoutBusiness_phone_idsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_phone_idsInput
    upsert?: businessesUpsertWithoutBusiness_phone_idsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_phone_idsInput, businessesUpdateWithoutBusiness_phone_idsInput>, businessesUncheckedUpdateWithoutBusiness_phone_idsInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_supplier_informationInput = {
    create?: XOR<businessesCreateWithoutBusiness_supplier_informationInput, businessesUncheckedCreateWithoutBusiness_supplier_informationInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supplier_informationInput
    connect?: businessesWhereUniqueInput
  }

  export type BusinessSupplierPictureCreateNestedManyWithoutBusiness_supplier_informationInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput> | BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput | BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput[]
    createMany?: BusinessSupplierPictureCreateManyBusiness_supplier_informationInputEnvelope
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
  }

  export type BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusiness_supplier_informationInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput> | BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput | BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput[]
    createMany?: BusinessSupplierPictureCreateManyBusiness_supplier_informationInputEnvelope
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
  }

  export type businessesUpdateOneRequiredWithoutBusiness_supplier_informationNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_supplier_informationInput, businessesUncheckedCreateWithoutBusiness_supplier_informationInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supplier_informationInput
    upsert?: businessesUpsertWithoutBusiness_supplier_informationInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_supplier_informationInput, businessesUpdateWithoutBusiness_supplier_informationInput>, businessesUncheckedUpdateWithoutBusiness_supplier_informationInput>
  }

  export type BusinessSupplierPictureUpdateManyWithoutBusiness_supplier_informationNestedInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput> | BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput | BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput[]
    upsert?: BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusiness_supplier_informationInput | BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusiness_supplier_informationInput[]
    createMany?: BusinessSupplierPictureCreateManyBusiness_supplier_informationInputEnvelope
    set?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    disconnect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    delete?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    update?: BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusiness_supplier_informationInput | BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusiness_supplier_informationInput[]
    updateMany?: BusinessSupplierPictureUpdateManyWithWhereWithoutBusiness_supplier_informationInput | BusinessSupplierPictureUpdateManyWithWhereWithoutBusiness_supplier_informationInput[]
    deleteMany?: BusinessSupplierPictureScalarWhereInput | BusinessSupplierPictureScalarWhereInput[]
  }

  export type BusinessSupplierPictureUncheckedUpdateManyWithoutBusiness_supplier_informationNestedInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput> | BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput | BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput[]
    upsert?: BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusiness_supplier_informationInput | BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusiness_supplier_informationInput[]
    createMany?: BusinessSupplierPictureCreateManyBusiness_supplier_informationInputEnvelope
    set?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    disconnect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    delete?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    update?: BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusiness_supplier_informationInput | BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusiness_supplier_informationInput[]
    updateMany?: BusinessSupplierPictureUpdateManyWithWhereWithoutBusiness_supplier_informationInput | BusinessSupplierPictureUpdateManyWithWhereWithoutBusiness_supplier_informationInput[]
    deleteMany?: BusinessSupplierPictureScalarWhereInput | BusinessSupplierPictureScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutBusiness_supporting_documentsInput = {
    create?: XOR<businessesCreateWithoutBusiness_supporting_documentsInput, businessesUncheckedCreateWithoutBusiness_supporting_documentsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supporting_documentsInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_supporting_documentsNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_supporting_documentsInput, businessesUncheckedCreateWithoutBusiness_supporting_documentsInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supporting_documentsInput
    upsert?: businessesUpsertWithoutBusiness_supporting_documentsInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_supporting_documentsInput, businessesUpdateWithoutBusiness_supporting_documentsInput>, businessesUncheckedUpdateWithoutBusiness_supporting_documentsInput>
  }

  export type businessesCreateNestedOneWithoutBusiness_supporting_documents_attachedInput = {
    create?: XOR<businessesCreateWithoutBusiness_supporting_documents_attachedInput, businessesUncheckedCreateWithoutBusiness_supporting_documents_attachedInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supporting_documents_attachedInput
    connect?: businessesWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutBusiness_supporting_documents_attachedNestedInput = {
    create?: XOR<businessesCreateWithoutBusiness_supporting_documents_attachedInput, businessesUncheckedCreateWithoutBusiness_supporting_documents_attachedInput>
    connectOrCreate?: businessesCreateOrConnectWithoutBusiness_supporting_documents_attachedInput
    upsert?: businessesUpsertWithoutBusiness_supporting_documents_attachedInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutBusiness_supporting_documents_attachedInput, businessesUpdateWithoutBusiness_supporting_documents_attachedInput>, businessesUncheckedUpdateWithoutBusiness_supporting_documents_attachedInput>
  }

  export type BusinessBankInformationCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<BusinessBankInformationCreateWithoutBusinessesInput, BusinessBankInformationUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessBankInformationCreateOrConnectWithoutBusinessesInput
    connect?: BusinessBankInformationWhereUniqueInput
  }

  export type business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_commercial_relationshipsCreateWithoutBusinessesInput, business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_commercial_relationshipsCreateOrConnectWithoutBusinessesInput
    connect?: business_commercial_relationshipsWhereUniqueInput
  }

  export type business_complianceCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_complianceCreateWithoutBusinessesInput, business_complianceUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_complianceCreateOrConnectWithoutBusinessesInput
    connect?: business_complianceWhereUniqueInput
  }

  export type business_configurationsCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_configurationsCreateWithoutBusinessesInput, business_configurationsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_configurationsCreateOrConnectWithoutBusinessesInput
    connect?: business_configurationsWhereUniqueInput
  }

  export type business_employeesCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_employeesCreateWithoutBusinessesInput, business_employeesUncheckedCreateWithoutBusinessesInput> | business_employeesCreateWithoutBusinessesInput[] | business_employeesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employeesCreateOrConnectWithoutBusinessesInput | business_employeesCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_employeesCreateManyBusinessesInputEnvelope
    connect?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
  }

  export type business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusinessesInput, business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput> | business_employees_clock_recordsCreateWithoutBusinessesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput | business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusinessesInputEnvelope
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
  }

  export type BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessGeneralSalesReportAICreateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralSalesReportAICreateWithoutBusinessesInput[] | BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessGeneralSalesReportAICreateManyBusinessesInputEnvelope
    connect?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
  }

  export type BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput[] | BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessGeneralWarehouseReportAICreateManyBusinessesInputEnvelope
    connect?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
  }

  export type BusinessLicenseCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessLicenseCreateWithoutBusinessesInput, BusinessLicenseUncheckedCreateWithoutBusinessesInput> | BusinessLicenseCreateWithoutBusinessesInput[] | BusinessLicenseUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessLicenseCreateOrConnectWithoutBusinessesInput | BusinessLicenseCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessLicenseCreateManyBusinessesInputEnvelope
    connect?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
  }

  export type BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusinessesInput, BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput> | BusinessMenuCategoryCreateWithoutBusinessesInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput | BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessMenuCategoryCreateManyBusinessesInputEnvelope
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
  }

  export type BusinessMenuCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessMenuCreateWithoutBusinessesInput, BusinessMenuUncheckedCreateWithoutBusinessesInput> | BusinessMenuCreateWithoutBusinessesInput[] | BusinessMenuUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusinessesInput | BusinessMenuCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessMenuCreateManyBusinessesInputEnvelope
    connect?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
  }

  export type BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<BusinessPayingCompanyCreateWithoutBusinessesInput, BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessPayingCompanyCreateOrConnectWithoutBusinessesInput
    connect?: BusinessPayingCompanyWhereUniqueInput
  }

  export type business_payment_historyCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_payment_historyCreateWithoutBusinessesInput, business_payment_historyUncheckedCreateWithoutBusinessesInput> | business_payment_historyCreateWithoutBusinessesInput[] | business_payment_historyUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusinessesInput | business_payment_historyCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_payment_historyCreateManyBusinessesInputEnvelope
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
  }

  export type BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessPaymentHistoryDetailCreateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput> | BusinessPaymentHistoryDetailCreateWithoutBusinessesInput[] | BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput | BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessPaymentHistoryDetailCreateManyBusinessesInputEnvelope
    connect?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
  }

  export type business_phone_idsCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_phone_idsCreateWithoutBusinessesInput, business_phone_idsUncheckedCreateWithoutBusinessesInput> | business_phone_idsCreateWithoutBusinessesInput[] | business_phone_idsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_phone_idsCreateOrConnectWithoutBusinessesInput | business_phone_idsCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_phone_idsCreateManyBusinessesInputEnvelope
    connect?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
  }

  export type BusinessProductCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessProductCreateWithoutBusinessesInput, BusinessProductUncheckedCreateWithoutBusinessesInput> | BusinessProductCreateWithoutBusinessesInput[] | BusinessProductUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusinessesInput | BusinessProductCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessProductCreateManyBusinessesInputEnvelope
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
  }

  export type business_supplier_informationCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_supplier_informationCreateWithoutBusinessesInput, business_supplier_informationUncheckedCreateWithoutBusinessesInput> | business_supplier_informationCreateWithoutBusinessesInput[] | business_supplier_informationUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supplier_informationCreateOrConnectWithoutBusinessesInput | business_supplier_informationCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_supplier_informationCreateManyBusinessesInputEnvelope
    connect?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
  }

  export type BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusinessesInput, BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput> | BusinessSupplierPictureCreateWithoutBusinessesInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput | BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessSupplierPictureCreateManyBusinessesInputEnvelope
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
  }

  export type business_supporting_documentsCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_supporting_documentsCreateWithoutBusinessesInput, business_supporting_documentsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_supporting_documentsCreateOrConnectWithoutBusinessesInput
    connect?: business_supporting_documentsWhereUniqueInput
  }

  export type business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_supporting_documents_attachedCreateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput> | business_supporting_documents_attachedCreateWithoutBusinessesInput[] | business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput | business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_supporting_documents_attachedCreateManyBusinessesInputEnvelope
    connect?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
  }

  export type BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput> | BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput[] | BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessWarehouseReplenishmentReportAICreateManyBusinessesInputEnvelope
    connect?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
  }

  export type client_order_product_linesCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<client_order_product_linesCreateWithoutBusinessesInput, client_order_product_linesUncheckedCreateWithoutBusinessesInput> | client_order_product_linesCreateWithoutBusinessesInput[] | client_order_product_linesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutBusinessesInput | client_order_product_linesCreateOrConnectWithoutBusinessesInput[]
    createMany?: client_order_product_linesCreateManyBusinessesInputEnvelope
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
  }

  export type client_order_thermal_printersCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutBusinessesInput, client_order_thermal_printersUncheckedCreateWithoutBusinessesInput> | client_order_thermal_printersCreateWithoutBusinessesInput[] | client_order_thermal_printersUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutBusinessesInput | client_order_thermal_printersCreateOrConnectWithoutBusinessesInput[]
    createMany?: client_order_thermal_printersCreateManyBusinessesInputEnvelope
    connect?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
  }

  export type ClientOrderTicketCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<ClientOrderTicketCreateWithoutBusinessesInput, ClientOrderTicketUncheckedCreateWithoutBusinessesInput> | ClientOrderTicketCreateWithoutBusinessesInput[] | ClientOrderTicketUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutBusinessesInput | ClientOrderTicketCreateOrConnectWithoutBusinessesInput[]
    createMany?: ClientOrderTicketCreateManyBusinessesInputEnvelope
    connect?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
  }

  export type ClientOrderTransactionCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutBusinessesInput, ClientOrderTransactionUncheckedCreateWithoutBusinessesInput> | ClientOrderTransactionCreateWithoutBusinessesInput[] | ClientOrderTransactionUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutBusinessesInput | ClientOrderTransactionCreateOrConnectWithoutBusinessesInput[]
    createMany?: ClientOrderTransactionCreateManyBusinessesInputEnvelope
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
  }

  export type ClientOrderCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<ClientOrderCreateWithoutBusinessesInput, ClientOrderUncheckedCreateWithoutBusinessesInput> | ClientOrderCreateWithoutBusinessesInput[] | ClientOrderUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderCreateOrConnectWithoutBusinessesInput | ClientOrderCreateOrConnectWithoutBusinessesInput[]
    createMany?: ClientOrderCreateManyBusinessesInputEnvelope
    connect?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
  }

  export type BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<BusinessBankInformationCreateWithoutBusinessesInput, BusinessBankInformationUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessBankInformationCreateOrConnectWithoutBusinessesInput
    connect?: BusinessBankInformationWhereUniqueInput
  }

  export type business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_commercial_relationshipsCreateWithoutBusinessesInput, business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_commercial_relationshipsCreateOrConnectWithoutBusinessesInput
    connect?: business_commercial_relationshipsWhereUniqueInput
  }

  export type business_complianceUncheckedCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_complianceCreateWithoutBusinessesInput, business_complianceUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_complianceCreateOrConnectWithoutBusinessesInput
    connect?: business_complianceWhereUniqueInput
  }

  export type business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_configurationsCreateWithoutBusinessesInput, business_configurationsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_configurationsCreateOrConnectWithoutBusinessesInput
    connect?: business_configurationsWhereUniqueInput
  }

  export type business_employeesUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_employeesCreateWithoutBusinessesInput, business_employeesUncheckedCreateWithoutBusinessesInput> | business_employeesCreateWithoutBusinessesInput[] | business_employeesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employeesCreateOrConnectWithoutBusinessesInput | business_employeesCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_employeesCreateManyBusinessesInputEnvelope
    connect?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
  }

  export type business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusinessesInput, business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput> | business_employees_clock_recordsCreateWithoutBusinessesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput | business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusinessesInputEnvelope
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
  }

  export type BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessGeneralSalesReportAICreateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralSalesReportAICreateWithoutBusinessesInput[] | BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessGeneralSalesReportAICreateManyBusinessesInputEnvelope
    connect?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
  }

  export type BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput[] | BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessGeneralWarehouseReportAICreateManyBusinessesInputEnvelope
    connect?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
  }

  export type BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessLicenseCreateWithoutBusinessesInput, BusinessLicenseUncheckedCreateWithoutBusinessesInput> | BusinessLicenseCreateWithoutBusinessesInput[] | BusinessLicenseUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessLicenseCreateOrConnectWithoutBusinessesInput | BusinessLicenseCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessLicenseCreateManyBusinessesInputEnvelope
    connect?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
  }

  export type BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusinessesInput, BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput> | BusinessMenuCategoryCreateWithoutBusinessesInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput | BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessMenuCategoryCreateManyBusinessesInputEnvelope
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
  }

  export type BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessMenuCreateWithoutBusinessesInput, BusinessMenuUncheckedCreateWithoutBusinessesInput> | BusinessMenuCreateWithoutBusinessesInput[] | BusinessMenuUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusinessesInput | BusinessMenuCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessMenuCreateManyBusinessesInputEnvelope
    connect?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
  }

  export type BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<BusinessPayingCompanyCreateWithoutBusinessesInput, BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessPayingCompanyCreateOrConnectWithoutBusinessesInput
    connect?: BusinessPayingCompanyWhereUniqueInput
  }

  export type business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_payment_historyCreateWithoutBusinessesInput, business_payment_historyUncheckedCreateWithoutBusinessesInput> | business_payment_historyCreateWithoutBusinessesInput[] | business_payment_historyUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusinessesInput | business_payment_historyCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_payment_historyCreateManyBusinessesInputEnvelope
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
  }

  export type BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessPaymentHistoryDetailCreateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput> | BusinessPaymentHistoryDetailCreateWithoutBusinessesInput[] | BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput | BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessPaymentHistoryDetailCreateManyBusinessesInputEnvelope
    connect?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
  }

  export type business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_phone_idsCreateWithoutBusinessesInput, business_phone_idsUncheckedCreateWithoutBusinessesInput> | business_phone_idsCreateWithoutBusinessesInput[] | business_phone_idsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_phone_idsCreateOrConnectWithoutBusinessesInput | business_phone_idsCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_phone_idsCreateManyBusinessesInputEnvelope
    connect?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
  }

  export type BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessProductCreateWithoutBusinessesInput, BusinessProductUncheckedCreateWithoutBusinessesInput> | BusinessProductCreateWithoutBusinessesInput[] | BusinessProductUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusinessesInput | BusinessProductCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessProductCreateManyBusinessesInputEnvelope
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
  }

  export type business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_supplier_informationCreateWithoutBusinessesInput, business_supplier_informationUncheckedCreateWithoutBusinessesInput> | business_supplier_informationCreateWithoutBusinessesInput[] | business_supplier_informationUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supplier_informationCreateOrConnectWithoutBusinessesInput | business_supplier_informationCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_supplier_informationCreateManyBusinessesInputEnvelope
    connect?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
  }

  export type BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusinessesInput, BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput> | BusinessSupplierPictureCreateWithoutBusinessesInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput | BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessSupplierPictureCreateManyBusinessesInputEnvelope
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
  }

  export type business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput = {
    create?: XOR<business_supporting_documentsCreateWithoutBusinessesInput, business_supporting_documentsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_supporting_documentsCreateOrConnectWithoutBusinessesInput
    connect?: business_supporting_documentsWhereUniqueInput
  }

  export type business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<business_supporting_documents_attachedCreateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput> | business_supporting_documents_attachedCreateWithoutBusinessesInput[] | business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput | business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput[]
    createMany?: business_supporting_documents_attachedCreateManyBusinessesInputEnvelope
    connect?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput> | BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput[] | BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput[]
    createMany?: BusinessWarehouseReplenishmentReportAICreateManyBusinessesInputEnvelope
    connect?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
  }

  export type client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<client_order_product_linesCreateWithoutBusinessesInput, client_order_product_linesUncheckedCreateWithoutBusinessesInput> | client_order_product_linesCreateWithoutBusinessesInput[] | client_order_product_linesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutBusinessesInput | client_order_product_linesCreateOrConnectWithoutBusinessesInput[]
    createMany?: client_order_product_linesCreateManyBusinessesInputEnvelope
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
  }

  export type client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutBusinessesInput, client_order_thermal_printersUncheckedCreateWithoutBusinessesInput> | client_order_thermal_printersCreateWithoutBusinessesInput[] | client_order_thermal_printersUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutBusinessesInput | client_order_thermal_printersCreateOrConnectWithoutBusinessesInput[]
    createMany?: client_order_thermal_printersCreateManyBusinessesInputEnvelope
    connect?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
  }

  export type ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<ClientOrderTicketCreateWithoutBusinessesInput, ClientOrderTicketUncheckedCreateWithoutBusinessesInput> | ClientOrderTicketCreateWithoutBusinessesInput[] | ClientOrderTicketUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutBusinessesInput | ClientOrderTicketCreateOrConnectWithoutBusinessesInput[]
    createMany?: ClientOrderTicketCreateManyBusinessesInputEnvelope
    connect?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
  }

  export type ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutBusinessesInput, ClientOrderTransactionUncheckedCreateWithoutBusinessesInput> | ClientOrderTransactionCreateWithoutBusinessesInput[] | ClientOrderTransactionUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutBusinessesInput | ClientOrderTransactionCreateOrConnectWithoutBusinessesInput[]
    createMany?: ClientOrderTransactionCreateManyBusinessesInputEnvelope
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
  }

  export type ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput = {
    create?: XOR<ClientOrderCreateWithoutBusinessesInput, ClientOrderUncheckedCreateWithoutBusinessesInput> | ClientOrderCreateWithoutBusinessesInput[] | ClientOrderUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderCreateOrConnectWithoutBusinessesInput | ClientOrderCreateOrConnectWithoutBusinessesInput[]
    createMany?: ClientOrderCreateManyBusinessesInputEnvelope
    connect?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
  }

  export type BusinessBankInformationUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<BusinessBankInformationCreateWithoutBusinessesInput, BusinessBankInformationUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessBankInformationCreateOrConnectWithoutBusinessesInput
    upsert?: BusinessBankInformationUpsertWithoutBusinessesInput
    disconnect?: BusinessBankInformationWhereInput | boolean
    delete?: BusinessBankInformationWhereInput | boolean
    connect?: BusinessBankInformationWhereUniqueInput
    update?: XOR<XOR<BusinessBankInformationUpdateToOneWithWhereWithoutBusinessesInput, BusinessBankInformationUpdateWithoutBusinessesInput>, BusinessBankInformationUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_commercial_relationshipsCreateWithoutBusinessesInput, business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_commercial_relationshipsCreateOrConnectWithoutBusinessesInput
    upsert?: business_commercial_relationshipsUpsertWithoutBusinessesInput
    disconnect?: business_commercial_relationshipsWhereInput | boolean
    delete?: business_commercial_relationshipsWhereInput | boolean
    connect?: business_commercial_relationshipsWhereUniqueInput
    update?: XOR<XOR<business_commercial_relationshipsUpdateToOneWithWhereWithoutBusinessesInput, business_commercial_relationshipsUpdateWithoutBusinessesInput>, business_commercial_relationshipsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_complianceUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_complianceCreateWithoutBusinessesInput, business_complianceUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_complianceCreateOrConnectWithoutBusinessesInput
    upsert?: business_complianceUpsertWithoutBusinessesInput
    disconnect?: business_complianceWhereInput | boolean
    delete?: business_complianceWhereInput | boolean
    connect?: business_complianceWhereUniqueInput
    update?: XOR<XOR<business_complianceUpdateToOneWithWhereWithoutBusinessesInput, business_complianceUpdateWithoutBusinessesInput>, business_complianceUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_configurationsUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_configurationsCreateWithoutBusinessesInput, business_configurationsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_configurationsCreateOrConnectWithoutBusinessesInput
    upsert?: business_configurationsUpsertWithoutBusinessesInput
    disconnect?: business_configurationsWhereInput | boolean
    delete?: business_configurationsWhereInput | boolean
    connect?: business_configurationsWhereUniqueInput
    update?: XOR<XOR<business_configurationsUpdateToOneWithWhereWithoutBusinessesInput, business_configurationsUpdateWithoutBusinessesInput>, business_configurationsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_employeesUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_employeesCreateWithoutBusinessesInput, business_employeesUncheckedCreateWithoutBusinessesInput> | business_employeesCreateWithoutBusinessesInput[] | business_employeesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employeesCreateOrConnectWithoutBusinessesInput | business_employeesCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_employeesUpsertWithWhereUniqueWithoutBusinessesInput | business_employeesUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_employeesCreateManyBusinessesInputEnvelope
    set?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    disconnect?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    delete?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    connect?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    update?: business_employeesUpdateWithWhereUniqueWithoutBusinessesInput | business_employeesUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_employeesUpdateManyWithWhereWithoutBusinessesInput | business_employeesUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_employeesScalarWhereInput | business_employeesScalarWhereInput[]
  }

  export type business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusinessesInput, business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput> | business_employees_clock_recordsCreateWithoutBusinessesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput | business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusinessesInput | business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusinessesInputEnvelope
    set?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    disconnect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    delete?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    update?: business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusinessesInput | business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_employees_clock_recordsUpdateManyWithWhereWithoutBusinessesInput | business_employees_clock_recordsUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_employees_clock_recordsScalarWhereInput | business_employees_clock_recordsScalarWhereInput[]
  }

  export type BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessGeneralSalesReportAICreateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralSalesReportAICreateWithoutBusinessesInput[] | BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessGeneralSalesReportAIUpsertWithWhereUniqueWithoutBusinessesInput | BusinessGeneralSalesReportAIUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessGeneralSalesReportAICreateManyBusinessesInputEnvelope
    set?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    disconnect?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    delete?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    connect?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    update?: BusinessGeneralSalesReportAIUpdateWithWhereUniqueWithoutBusinessesInput | BusinessGeneralSalesReportAIUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessGeneralSalesReportAIUpdateManyWithWhereWithoutBusinessesInput | BusinessGeneralSalesReportAIUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessGeneralSalesReportAIScalarWhereInput | BusinessGeneralSalesReportAIScalarWhereInput[]
  }

  export type BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput[] | BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessGeneralWarehouseReportAIUpsertWithWhereUniqueWithoutBusinessesInput | BusinessGeneralWarehouseReportAIUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessGeneralWarehouseReportAICreateManyBusinessesInputEnvelope
    set?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    disconnect?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    delete?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    connect?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    update?: BusinessGeneralWarehouseReportAIUpdateWithWhereUniqueWithoutBusinessesInput | BusinessGeneralWarehouseReportAIUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessGeneralWarehouseReportAIUpdateManyWithWhereWithoutBusinessesInput | BusinessGeneralWarehouseReportAIUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessGeneralWarehouseReportAIScalarWhereInput | BusinessGeneralWarehouseReportAIScalarWhereInput[]
  }

  export type BusinessLicenseUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessLicenseCreateWithoutBusinessesInput, BusinessLicenseUncheckedCreateWithoutBusinessesInput> | BusinessLicenseCreateWithoutBusinessesInput[] | BusinessLicenseUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessLicenseCreateOrConnectWithoutBusinessesInput | BusinessLicenseCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessLicenseUpsertWithWhereUniqueWithoutBusinessesInput | BusinessLicenseUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessLicenseCreateManyBusinessesInputEnvelope
    set?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    disconnect?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    delete?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    connect?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    update?: BusinessLicenseUpdateWithWhereUniqueWithoutBusinessesInput | BusinessLicenseUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessLicenseUpdateManyWithWhereWithoutBusinessesInput | BusinessLicenseUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessLicenseScalarWhereInput | BusinessLicenseScalarWhereInput[]
  }

  export type BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusinessesInput, BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput> | BusinessMenuCategoryCreateWithoutBusinessesInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput | BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusinessesInput | BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessMenuCategoryCreateManyBusinessesInputEnvelope
    set?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    disconnect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    delete?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    update?: BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusinessesInput | BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessMenuCategoryUpdateManyWithWhereWithoutBusinessesInput | BusinessMenuCategoryUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessMenuCategoryScalarWhereInput | BusinessMenuCategoryScalarWhereInput[]
  }

  export type BusinessMenuUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessMenuCreateWithoutBusinessesInput, BusinessMenuUncheckedCreateWithoutBusinessesInput> | BusinessMenuCreateWithoutBusinessesInput[] | BusinessMenuUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusinessesInput | BusinessMenuCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessMenuUpsertWithWhereUniqueWithoutBusinessesInput | BusinessMenuUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessMenuCreateManyBusinessesInputEnvelope
    set?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    disconnect?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    delete?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    connect?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    update?: BusinessMenuUpdateWithWhereUniqueWithoutBusinessesInput | BusinessMenuUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessMenuUpdateManyWithWhereWithoutBusinessesInput | BusinessMenuUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessMenuScalarWhereInput | BusinessMenuScalarWhereInput[]
  }

  export type BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<BusinessPayingCompanyCreateWithoutBusinessesInput, BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessPayingCompanyCreateOrConnectWithoutBusinessesInput
    upsert?: BusinessPayingCompanyUpsertWithoutBusinessesInput
    disconnect?: BusinessPayingCompanyWhereInput | boolean
    delete?: BusinessPayingCompanyWhereInput | boolean
    connect?: BusinessPayingCompanyWhereUniqueInput
    update?: XOR<XOR<BusinessPayingCompanyUpdateToOneWithWhereWithoutBusinessesInput, BusinessPayingCompanyUpdateWithoutBusinessesInput>, BusinessPayingCompanyUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_payment_historyUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_payment_historyCreateWithoutBusinessesInput, business_payment_historyUncheckedCreateWithoutBusinessesInput> | business_payment_historyCreateWithoutBusinessesInput[] | business_payment_historyUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusinessesInput | business_payment_historyCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_payment_historyUpsertWithWhereUniqueWithoutBusinessesInput | business_payment_historyUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_payment_historyCreateManyBusinessesInputEnvelope
    set?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    disconnect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    delete?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    update?: business_payment_historyUpdateWithWhereUniqueWithoutBusinessesInput | business_payment_historyUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_payment_historyUpdateManyWithWhereWithoutBusinessesInput | business_payment_historyUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_payment_historyScalarWhereInput | business_payment_historyScalarWhereInput[]
  }

  export type BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessPaymentHistoryDetailCreateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput> | BusinessPaymentHistoryDetailCreateWithoutBusinessesInput[] | BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput | BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessPaymentHistoryDetailUpsertWithWhereUniqueWithoutBusinessesInput | BusinessPaymentHistoryDetailUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessPaymentHistoryDetailCreateManyBusinessesInputEnvelope
    set?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    disconnect?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    delete?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    connect?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    update?: BusinessPaymentHistoryDetailUpdateWithWhereUniqueWithoutBusinessesInput | BusinessPaymentHistoryDetailUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessPaymentHistoryDetailUpdateManyWithWhereWithoutBusinessesInput | BusinessPaymentHistoryDetailUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessPaymentHistoryDetailScalarWhereInput | BusinessPaymentHistoryDetailScalarWhereInput[]
  }

  export type business_phone_idsUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_phone_idsCreateWithoutBusinessesInput, business_phone_idsUncheckedCreateWithoutBusinessesInput> | business_phone_idsCreateWithoutBusinessesInput[] | business_phone_idsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_phone_idsCreateOrConnectWithoutBusinessesInput | business_phone_idsCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_phone_idsUpsertWithWhereUniqueWithoutBusinessesInput | business_phone_idsUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_phone_idsCreateManyBusinessesInputEnvelope
    set?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    disconnect?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    delete?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    connect?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    update?: business_phone_idsUpdateWithWhereUniqueWithoutBusinessesInput | business_phone_idsUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_phone_idsUpdateManyWithWhereWithoutBusinessesInput | business_phone_idsUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_phone_idsScalarWhereInput | business_phone_idsScalarWhereInput[]
  }

  export type BusinessProductUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessProductCreateWithoutBusinessesInput, BusinessProductUncheckedCreateWithoutBusinessesInput> | BusinessProductCreateWithoutBusinessesInput[] | BusinessProductUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusinessesInput | BusinessProductCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessProductUpsertWithWhereUniqueWithoutBusinessesInput | BusinessProductUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessProductCreateManyBusinessesInputEnvelope
    set?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    disconnect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    delete?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    update?: BusinessProductUpdateWithWhereUniqueWithoutBusinessesInput | BusinessProductUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessProductUpdateManyWithWhereWithoutBusinessesInput | BusinessProductUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessProductScalarWhereInput | BusinessProductScalarWhereInput[]
  }

  export type business_supplier_informationUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_supplier_informationCreateWithoutBusinessesInput, business_supplier_informationUncheckedCreateWithoutBusinessesInput> | business_supplier_informationCreateWithoutBusinessesInput[] | business_supplier_informationUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supplier_informationCreateOrConnectWithoutBusinessesInput | business_supplier_informationCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_supplier_informationUpsertWithWhereUniqueWithoutBusinessesInput | business_supplier_informationUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_supplier_informationCreateManyBusinessesInputEnvelope
    set?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    disconnect?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    delete?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    connect?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    update?: business_supplier_informationUpdateWithWhereUniqueWithoutBusinessesInput | business_supplier_informationUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_supplier_informationUpdateManyWithWhereWithoutBusinessesInput | business_supplier_informationUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_supplier_informationScalarWhereInput | business_supplier_informationScalarWhereInput[]
  }

  export type BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusinessesInput, BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput> | BusinessSupplierPictureCreateWithoutBusinessesInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput | BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusinessesInput | BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessSupplierPictureCreateManyBusinessesInputEnvelope
    set?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    disconnect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    delete?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    update?: BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusinessesInput | BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessSupplierPictureUpdateManyWithWhereWithoutBusinessesInput | BusinessSupplierPictureUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessSupplierPictureScalarWhereInput | BusinessSupplierPictureScalarWhereInput[]
  }

  export type business_supporting_documentsUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_supporting_documentsCreateWithoutBusinessesInput, business_supporting_documentsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_supporting_documentsCreateOrConnectWithoutBusinessesInput
    upsert?: business_supporting_documentsUpsertWithoutBusinessesInput
    disconnect?: business_supporting_documentsWhereInput | boolean
    delete?: business_supporting_documentsWhereInput | boolean
    connect?: business_supporting_documentsWhereUniqueInput
    update?: XOR<XOR<business_supporting_documentsUpdateToOneWithWhereWithoutBusinessesInput, business_supporting_documentsUpdateWithoutBusinessesInput>, business_supporting_documentsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_supporting_documents_attachedCreateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput> | business_supporting_documents_attachedCreateWithoutBusinessesInput[] | business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput | business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_supporting_documents_attachedUpsertWithWhereUniqueWithoutBusinessesInput | business_supporting_documents_attachedUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_supporting_documents_attachedCreateManyBusinessesInputEnvelope
    set?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    disconnect?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    delete?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    connect?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    update?: business_supporting_documents_attachedUpdateWithWhereUniqueWithoutBusinessesInput | business_supporting_documents_attachedUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_supporting_documents_attachedUpdateManyWithWhereWithoutBusinessesInput | business_supporting_documents_attachedUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_supporting_documents_attachedScalarWhereInput | business_supporting_documents_attachedScalarWhereInput[]
  }

  export type BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput> | BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput[] | BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessWarehouseReplenishmentReportAIUpsertWithWhereUniqueWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAIUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessWarehouseReplenishmentReportAICreateManyBusinessesInputEnvelope
    set?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    disconnect?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    delete?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    connect?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    update?: BusinessWarehouseReplenishmentReportAIUpdateWithWhereUniqueWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAIUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessWarehouseReplenishmentReportAIUpdateManyWithWhereWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAIUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessWarehouseReplenishmentReportAIScalarWhereInput | BusinessWarehouseReplenishmentReportAIScalarWhereInput[]
  }

  export type client_order_product_linesUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<client_order_product_linesCreateWithoutBusinessesInput, client_order_product_linesUncheckedCreateWithoutBusinessesInput> | client_order_product_linesCreateWithoutBusinessesInput[] | client_order_product_linesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutBusinessesInput | client_order_product_linesCreateOrConnectWithoutBusinessesInput[]
    upsert?: client_order_product_linesUpsertWithWhereUniqueWithoutBusinessesInput | client_order_product_linesUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: client_order_product_linesCreateManyBusinessesInputEnvelope
    set?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    disconnect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    delete?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    update?: client_order_product_linesUpdateWithWhereUniqueWithoutBusinessesInput | client_order_product_linesUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: client_order_product_linesUpdateManyWithWhereWithoutBusinessesInput | client_order_product_linesUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: client_order_product_linesScalarWhereInput | client_order_product_linesScalarWhereInput[]
  }

  export type client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutBusinessesInput, client_order_thermal_printersUncheckedCreateWithoutBusinessesInput> | client_order_thermal_printersCreateWithoutBusinessesInput[] | client_order_thermal_printersUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutBusinessesInput | client_order_thermal_printersCreateOrConnectWithoutBusinessesInput[]
    upsert?: client_order_thermal_printersUpsertWithWhereUniqueWithoutBusinessesInput | client_order_thermal_printersUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: client_order_thermal_printersCreateManyBusinessesInputEnvelope
    set?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    disconnect?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    delete?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    connect?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    update?: client_order_thermal_printersUpdateWithWhereUniqueWithoutBusinessesInput | client_order_thermal_printersUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: client_order_thermal_printersUpdateManyWithWhereWithoutBusinessesInput | client_order_thermal_printersUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: client_order_thermal_printersScalarWhereInput | client_order_thermal_printersScalarWhereInput[]
  }

  export type ClientOrderTicketUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<ClientOrderTicketCreateWithoutBusinessesInput, ClientOrderTicketUncheckedCreateWithoutBusinessesInput> | ClientOrderTicketCreateWithoutBusinessesInput[] | ClientOrderTicketUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutBusinessesInput | ClientOrderTicketCreateOrConnectWithoutBusinessesInput[]
    upsert?: ClientOrderTicketUpsertWithWhereUniqueWithoutBusinessesInput | ClientOrderTicketUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: ClientOrderTicketCreateManyBusinessesInputEnvelope
    set?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    disconnect?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    delete?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    connect?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    update?: ClientOrderTicketUpdateWithWhereUniqueWithoutBusinessesInput | ClientOrderTicketUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: ClientOrderTicketUpdateManyWithWhereWithoutBusinessesInput | ClientOrderTicketUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: ClientOrderTicketScalarWhereInput | ClientOrderTicketScalarWhereInput[]
  }

  export type ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutBusinessesInput, ClientOrderTransactionUncheckedCreateWithoutBusinessesInput> | ClientOrderTransactionCreateWithoutBusinessesInput[] | ClientOrderTransactionUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutBusinessesInput | ClientOrderTransactionCreateOrConnectWithoutBusinessesInput[]
    upsert?: ClientOrderTransactionUpsertWithWhereUniqueWithoutBusinessesInput | ClientOrderTransactionUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: ClientOrderTransactionCreateManyBusinessesInputEnvelope
    set?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    disconnect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    delete?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    update?: ClientOrderTransactionUpdateWithWhereUniqueWithoutBusinessesInput | ClientOrderTransactionUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: ClientOrderTransactionUpdateManyWithWhereWithoutBusinessesInput | ClientOrderTransactionUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: ClientOrderTransactionScalarWhereInput | ClientOrderTransactionScalarWhereInput[]
  }

  export type ClientOrderUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<ClientOrderCreateWithoutBusinessesInput, ClientOrderUncheckedCreateWithoutBusinessesInput> | ClientOrderCreateWithoutBusinessesInput[] | ClientOrderUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderCreateOrConnectWithoutBusinessesInput | ClientOrderCreateOrConnectWithoutBusinessesInput[]
    upsert?: ClientOrderUpsertWithWhereUniqueWithoutBusinessesInput | ClientOrderUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: ClientOrderCreateManyBusinessesInputEnvelope
    set?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    disconnect?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    delete?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    connect?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    update?: ClientOrderUpdateWithWhereUniqueWithoutBusinessesInput | ClientOrderUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: ClientOrderUpdateManyWithWhereWithoutBusinessesInput | ClientOrderUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: ClientOrderScalarWhereInput | ClientOrderScalarWhereInput[]
  }

  export type BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<BusinessBankInformationCreateWithoutBusinessesInput, BusinessBankInformationUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessBankInformationCreateOrConnectWithoutBusinessesInput
    upsert?: BusinessBankInformationUpsertWithoutBusinessesInput
    disconnect?: BusinessBankInformationWhereInput | boolean
    delete?: BusinessBankInformationWhereInput | boolean
    connect?: BusinessBankInformationWhereUniqueInput
    update?: XOR<XOR<BusinessBankInformationUpdateToOneWithWhereWithoutBusinessesInput, BusinessBankInformationUpdateWithoutBusinessesInput>, BusinessBankInformationUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_commercial_relationshipsCreateWithoutBusinessesInput, business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_commercial_relationshipsCreateOrConnectWithoutBusinessesInput
    upsert?: business_commercial_relationshipsUpsertWithoutBusinessesInput
    disconnect?: business_commercial_relationshipsWhereInput | boolean
    delete?: business_commercial_relationshipsWhereInput | boolean
    connect?: business_commercial_relationshipsWhereUniqueInput
    update?: XOR<XOR<business_commercial_relationshipsUpdateToOneWithWhereWithoutBusinessesInput, business_commercial_relationshipsUpdateWithoutBusinessesInput>, business_commercial_relationshipsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_complianceCreateWithoutBusinessesInput, business_complianceUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_complianceCreateOrConnectWithoutBusinessesInput
    upsert?: business_complianceUpsertWithoutBusinessesInput
    disconnect?: business_complianceWhereInput | boolean
    delete?: business_complianceWhereInput | boolean
    connect?: business_complianceWhereUniqueInput
    update?: XOR<XOR<business_complianceUpdateToOneWithWhereWithoutBusinessesInput, business_complianceUpdateWithoutBusinessesInput>, business_complianceUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_configurationsCreateWithoutBusinessesInput, business_configurationsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_configurationsCreateOrConnectWithoutBusinessesInput
    upsert?: business_configurationsUpsertWithoutBusinessesInput
    disconnect?: business_configurationsWhereInput | boolean
    delete?: business_configurationsWhereInput | boolean
    connect?: business_configurationsWhereUniqueInput
    update?: XOR<XOR<business_configurationsUpdateToOneWithWhereWithoutBusinessesInput, business_configurationsUpdateWithoutBusinessesInput>, business_configurationsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_employeesCreateWithoutBusinessesInput, business_employeesUncheckedCreateWithoutBusinessesInput> | business_employeesCreateWithoutBusinessesInput[] | business_employeesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employeesCreateOrConnectWithoutBusinessesInput | business_employeesCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_employeesUpsertWithWhereUniqueWithoutBusinessesInput | business_employeesUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_employeesCreateManyBusinessesInputEnvelope
    set?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    disconnect?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    delete?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    connect?: business_employeesWhereUniqueInput | business_employeesWhereUniqueInput[]
    update?: business_employeesUpdateWithWhereUniqueWithoutBusinessesInput | business_employeesUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_employeesUpdateManyWithWhereWithoutBusinessesInput | business_employeesUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_employeesScalarWhereInput | business_employeesScalarWhereInput[]
  }

  export type business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_employees_clock_recordsCreateWithoutBusinessesInput, business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput> | business_employees_clock_recordsCreateWithoutBusinessesInput[] | business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput | business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusinessesInput | business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_employees_clock_recordsCreateManyBusinessesInputEnvelope
    set?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    disconnect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    delete?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    connect?: business_employees_clock_recordsWhereUniqueInput | business_employees_clock_recordsWhereUniqueInput[]
    update?: business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusinessesInput | business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_employees_clock_recordsUpdateManyWithWhereWithoutBusinessesInput | business_employees_clock_recordsUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_employees_clock_recordsScalarWhereInput | business_employees_clock_recordsScalarWhereInput[]
  }

  export type BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessGeneralSalesReportAICreateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralSalesReportAICreateWithoutBusinessesInput[] | BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessGeneralSalesReportAIUpsertWithWhereUniqueWithoutBusinessesInput | BusinessGeneralSalesReportAIUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessGeneralSalesReportAICreateManyBusinessesInputEnvelope
    set?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    disconnect?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    delete?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    connect?: BusinessGeneralSalesReportAIWhereUniqueInput | BusinessGeneralSalesReportAIWhereUniqueInput[]
    update?: BusinessGeneralSalesReportAIUpdateWithWhereUniqueWithoutBusinessesInput | BusinessGeneralSalesReportAIUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessGeneralSalesReportAIUpdateManyWithWhereWithoutBusinessesInput | BusinessGeneralSalesReportAIUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessGeneralSalesReportAIScalarWhereInput | BusinessGeneralSalesReportAIScalarWhereInput[]
  }

  export type BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput> | BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput[] | BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput | BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessGeneralWarehouseReportAIUpsertWithWhereUniqueWithoutBusinessesInput | BusinessGeneralWarehouseReportAIUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessGeneralWarehouseReportAICreateManyBusinessesInputEnvelope
    set?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    disconnect?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    delete?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    connect?: BusinessGeneralWarehouseReportAIWhereUniqueInput | BusinessGeneralWarehouseReportAIWhereUniqueInput[]
    update?: BusinessGeneralWarehouseReportAIUpdateWithWhereUniqueWithoutBusinessesInput | BusinessGeneralWarehouseReportAIUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessGeneralWarehouseReportAIUpdateManyWithWhereWithoutBusinessesInput | BusinessGeneralWarehouseReportAIUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessGeneralWarehouseReportAIScalarWhereInput | BusinessGeneralWarehouseReportAIScalarWhereInput[]
  }

  export type BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessLicenseCreateWithoutBusinessesInput, BusinessLicenseUncheckedCreateWithoutBusinessesInput> | BusinessLicenseCreateWithoutBusinessesInput[] | BusinessLicenseUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessLicenseCreateOrConnectWithoutBusinessesInput | BusinessLicenseCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessLicenseUpsertWithWhereUniqueWithoutBusinessesInput | BusinessLicenseUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessLicenseCreateManyBusinessesInputEnvelope
    set?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    disconnect?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    delete?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    connect?: BusinessLicenseWhereUniqueInput | BusinessLicenseWhereUniqueInput[]
    update?: BusinessLicenseUpdateWithWhereUniqueWithoutBusinessesInput | BusinessLicenseUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessLicenseUpdateManyWithWhereWithoutBusinessesInput | BusinessLicenseUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessLicenseScalarWhereInput | BusinessLicenseScalarWhereInput[]
  }

  export type BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessMenuCategoryCreateWithoutBusinessesInput, BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput> | BusinessMenuCategoryCreateWithoutBusinessesInput[] | BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput | BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusinessesInput | BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessMenuCategoryCreateManyBusinessesInputEnvelope
    set?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    disconnect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    delete?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    connect?: BusinessMenuCategoryWhereUniqueInput | BusinessMenuCategoryWhereUniqueInput[]
    update?: BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusinessesInput | BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessMenuCategoryUpdateManyWithWhereWithoutBusinessesInput | BusinessMenuCategoryUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessMenuCategoryScalarWhereInput | BusinessMenuCategoryScalarWhereInput[]
  }

  export type BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessMenuCreateWithoutBusinessesInput, BusinessMenuUncheckedCreateWithoutBusinessesInput> | BusinessMenuCreateWithoutBusinessesInput[] | BusinessMenuUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessMenuCreateOrConnectWithoutBusinessesInput | BusinessMenuCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessMenuUpsertWithWhereUniqueWithoutBusinessesInput | BusinessMenuUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessMenuCreateManyBusinessesInputEnvelope
    set?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    disconnect?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    delete?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    connect?: BusinessMenuWhereUniqueInput | BusinessMenuWhereUniqueInput[]
    update?: BusinessMenuUpdateWithWhereUniqueWithoutBusinessesInput | BusinessMenuUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessMenuUpdateManyWithWhereWithoutBusinessesInput | BusinessMenuUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessMenuScalarWhereInput | BusinessMenuScalarWhereInput[]
  }

  export type BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<BusinessPayingCompanyCreateWithoutBusinessesInput, BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: BusinessPayingCompanyCreateOrConnectWithoutBusinessesInput
    upsert?: BusinessPayingCompanyUpsertWithoutBusinessesInput
    disconnect?: BusinessPayingCompanyWhereInput | boolean
    delete?: BusinessPayingCompanyWhereInput | boolean
    connect?: BusinessPayingCompanyWhereUniqueInput
    update?: XOR<XOR<BusinessPayingCompanyUpdateToOneWithWhereWithoutBusinessesInput, BusinessPayingCompanyUpdateWithoutBusinessesInput>, BusinessPayingCompanyUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_payment_historyCreateWithoutBusinessesInput, business_payment_historyUncheckedCreateWithoutBusinessesInput> | business_payment_historyCreateWithoutBusinessesInput[] | business_payment_historyUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_payment_historyCreateOrConnectWithoutBusinessesInput | business_payment_historyCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_payment_historyUpsertWithWhereUniqueWithoutBusinessesInput | business_payment_historyUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_payment_historyCreateManyBusinessesInputEnvelope
    set?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    disconnect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    delete?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    connect?: business_payment_historyWhereUniqueInput | business_payment_historyWhereUniqueInput[]
    update?: business_payment_historyUpdateWithWhereUniqueWithoutBusinessesInput | business_payment_historyUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_payment_historyUpdateManyWithWhereWithoutBusinessesInput | business_payment_historyUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_payment_historyScalarWhereInput | business_payment_historyScalarWhereInput[]
  }

  export type BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessPaymentHistoryDetailCreateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput> | BusinessPaymentHistoryDetailCreateWithoutBusinessesInput[] | BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput | BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessPaymentHistoryDetailUpsertWithWhereUniqueWithoutBusinessesInput | BusinessPaymentHistoryDetailUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessPaymentHistoryDetailCreateManyBusinessesInputEnvelope
    set?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    disconnect?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    delete?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    connect?: BusinessPaymentHistoryDetailWhereUniqueInput | BusinessPaymentHistoryDetailWhereUniqueInput[]
    update?: BusinessPaymentHistoryDetailUpdateWithWhereUniqueWithoutBusinessesInput | BusinessPaymentHistoryDetailUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessPaymentHistoryDetailUpdateManyWithWhereWithoutBusinessesInput | BusinessPaymentHistoryDetailUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessPaymentHistoryDetailScalarWhereInput | BusinessPaymentHistoryDetailScalarWhereInput[]
  }

  export type business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_phone_idsCreateWithoutBusinessesInput, business_phone_idsUncheckedCreateWithoutBusinessesInput> | business_phone_idsCreateWithoutBusinessesInput[] | business_phone_idsUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_phone_idsCreateOrConnectWithoutBusinessesInput | business_phone_idsCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_phone_idsUpsertWithWhereUniqueWithoutBusinessesInput | business_phone_idsUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_phone_idsCreateManyBusinessesInputEnvelope
    set?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    disconnect?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    delete?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    connect?: business_phone_idsWhereUniqueInput | business_phone_idsWhereUniqueInput[]
    update?: business_phone_idsUpdateWithWhereUniqueWithoutBusinessesInput | business_phone_idsUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_phone_idsUpdateManyWithWhereWithoutBusinessesInput | business_phone_idsUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_phone_idsScalarWhereInput | business_phone_idsScalarWhereInput[]
  }

  export type BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessProductCreateWithoutBusinessesInput, BusinessProductUncheckedCreateWithoutBusinessesInput> | BusinessProductCreateWithoutBusinessesInput[] | BusinessProductUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessProductCreateOrConnectWithoutBusinessesInput | BusinessProductCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessProductUpsertWithWhereUniqueWithoutBusinessesInput | BusinessProductUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessProductCreateManyBusinessesInputEnvelope
    set?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    disconnect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    delete?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    connect?: BusinessProductWhereUniqueInput | BusinessProductWhereUniqueInput[]
    update?: BusinessProductUpdateWithWhereUniqueWithoutBusinessesInput | BusinessProductUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessProductUpdateManyWithWhereWithoutBusinessesInput | BusinessProductUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessProductScalarWhereInput | BusinessProductScalarWhereInput[]
  }

  export type business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_supplier_informationCreateWithoutBusinessesInput, business_supplier_informationUncheckedCreateWithoutBusinessesInput> | business_supplier_informationCreateWithoutBusinessesInput[] | business_supplier_informationUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supplier_informationCreateOrConnectWithoutBusinessesInput | business_supplier_informationCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_supplier_informationUpsertWithWhereUniqueWithoutBusinessesInput | business_supplier_informationUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_supplier_informationCreateManyBusinessesInputEnvelope
    set?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    disconnect?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    delete?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    connect?: business_supplier_informationWhereUniqueInput | business_supplier_informationWhereUniqueInput[]
    update?: business_supplier_informationUpdateWithWhereUniqueWithoutBusinessesInput | business_supplier_informationUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_supplier_informationUpdateManyWithWhereWithoutBusinessesInput | business_supplier_informationUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_supplier_informationScalarWhereInput | business_supplier_informationScalarWhereInput[]
  }

  export type BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessSupplierPictureCreateWithoutBusinessesInput, BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput> | BusinessSupplierPictureCreateWithoutBusinessesInput[] | BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput | BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusinessesInput | BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessSupplierPictureCreateManyBusinessesInputEnvelope
    set?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    disconnect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    delete?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    connect?: BusinessSupplierPictureWhereUniqueInput | BusinessSupplierPictureWhereUniqueInput[]
    update?: BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusinessesInput | BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessSupplierPictureUpdateManyWithWhereWithoutBusinessesInput | BusinessSupplierPictureUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessSupplierPictureScalarWhereInput | BusinessSupplierPictureScalarWhereInput[]
  }

  export type business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput = {
    create?: XOR<business_supporting_documentsCreateWithoutBusinessesInput, business_supporting_documentsUncheckedCreateWithoutBusinessesInput>
    connectOrCreate?: business_supporting_documentsCreateOrConnectWithoutBusinessesInput
    upsert?: business_supporting_documentsUpsertWithoutBusinessesInput
    disconnect?: business_supporting_documentsWhereInput | boolean
    delete?: business_supporting_documentsWhereInput | boolean
    connect?: business_supporting_documentsWhereUniqueInput
    update?: XOR<XOR<business_supporting_documentsUpdateToOneWithWhereWithoutBusinessesInput, business_supporting_documentsUpdateWithoutBusinessesInput>, business_supporting_documentsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<business_supporting_documents_attachedCreateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput> | business_supporting_documents_attachedCreateWithoutBusinessesInput[] | business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput | business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput[]
    upsert?: business_supporting_documents_attachedUpsertWithWhereUniqueWithoutBusinessesInput | business_supporting_documents_attachedUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: business_supporting_documents_attachedCreateManyBusinessesInputEnvelope
    set?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    disconnect?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    delete?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    connect?: business_supporting_documents_attachedWhereUniqueInput | business_supporting_documents_attachedWhereUniqueInput[]
    update?: business_supporting_documents_attachedUpdateWithWhereUniqueWithoutBusinessesInput | business_supporting_documents_attachedUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: business_supporting_documents_attachedUpdateManyWithWhereWithoutBusinessesInput | business_supporting_documents_attachedUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: business_supporting_documents_attachedScalarWhereInput | business_supporting_documents_attachedScalarWhereInput[]
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput> | BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput[] | BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput[]
    upsert?: BusinessWarehouseReplenishmentReportAIUpsertWithWhereUniqueWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAIUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: BusinessWarehouseReplenishmentReportAICreateManyBusinessesInputEnvelope
    set?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    disconnect?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    delete?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    connect?: BusinessWarehouseReplenishmentReportAIWhereUniqueInput | BusinessWarehouseReplenishmentReportAIWhereUniqueInput[]
    update?: BusinessWarehouseReplenishmentReportAIUpdateWithWhereUniqueWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAIUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: BusinessWarehouseReplenishmentReportAIUpdateManyWithWhereWithoutBusinessesInput | BusinessWarehouseReplenishmentReportAIUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: BusinessWarehouseReplenishmentReportAIScalarWhereInput | BusinessWarehouseReplenishmentReportAIScalarWhereInput[]
  }

  export type client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<client_order_product_linesCreateWithoutBusinessesInput, client_order_product_linesUncheckedCreateWithoutBusinessesInput> | client_order_product_linesCreateWithoutBusinessesInput[] | client_order_product_linesUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_product_linesCreateOrConnectWithoutBusinessesInput | client_order_product_linesCreateOrConnectWithoutBusinessesInput[]
    upsert?: client_order_product_linesUpsertWithWhereUniqueWithoutBusinessesInput | client_order_product_linesUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: client_order_product_linesCreateManyBusinessesInputEnvelope
    set?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    disconnect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    delete?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    connect?: client_order_product_linesWhereUniqueInput | client_order_product_linesWhereUniqueInput[]
    update?: client_order_product_linesUpdateWithWhereUniqueWithoutBusinessesInput | client_order_product_linesUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: client_order_product_linesUpdateManyWithWhereWithoutBusinessesInput | client_order_product_linesUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: client_order_product_linesScalarWhereInput | client_order_product_linesScalarWhereInput[]
  }

  export type client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<client_order_thermal_printersCreateWithoutBusinessesInput, client_order_thermal_printersUncheckedCreateWithoutBusinessesInput> | client_order_thermal_printersCreateWithoutBusinessesInput[] | client_order_thermal_printersUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: client_order_thermal_printersCreateOrConnectWithoutBusinessesInput | client_order_thermal_printersCreateOrConnectWithoutBusinessesInput[]
    upsert?: client_order_thermal_printersUpsertWithWhereUniqueWithoutBusinessesInput | client_order_thermal_printersUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: client_order_thermal_printersCreateManyBusinessesInputEnvelope
    set?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    disconnect?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    delete?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    connect?: client_order_thermal_printersWhereUniqueInput | client_order_thermal_printersWhereUniqueInput[]
    update?: client_order_thermal_printersUpdateWithWhereUniqueWithoutBusinessesInput | client_order_thermal_printersUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: client_order_thermal_printersUpdateManyWithWhereWithoutBusinessesInput | client_order_thermal_printersUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: client_order_thermal_printersScalarWhereInput | client_order_thermal_printersScalarWhereInput[]
  }

  export type ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<ClientOrderTicketCreateWithoutBusinessesInput, ClientOrderTicketUncheckedCreateWithoutBusinessesInput> | ClientOrderTicketCreateWithoutBusinessesInput[] | ClientOrderTicketUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTicketCreateOrConnectWithoutBusinessesInput | ClientOrderTicketCreateOrConnectWithoutBusinessesInput[]
    upsert?: ClientOrderTicketUpsertWithWhereUniqueWithoutBusinessesInput | ClientOrderTicketUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: ClientOrderTicketCreateManyBusinessesInputEnvelope
    set?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    disconnect?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    delete?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    connect?: ClientOrderTicketWhereUniqueInput | ClientOrderTicketWhereUniqueInput[]
    update?: ClientOrderTicketUpdateWithWhereUniqueWithoutBusinessesInput | ClientOrderTicketUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: ClientOrderTicketUpdateManyWithWhereWithoutBusinessesInput | ClientOrderTicketUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: ClientOrderTicketScalarWhereInput | ClientOrderTicketScalarWhereInput[]
  }

  export type ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<ClientOrderTransactionCreateWithoutBusinessesInput, ClientOrderTransactionUncheckedCreateWithoutBusinessesInput> | ClientOrderTransactionCreateWithoutBusinessesInput[] | ClientOrderTransactionUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderTransactionCreateOrConnectWithoutBusinessesInput | ClientOrderTransactionCreateOrConnectWithoutBusinessesInput[]
    upsert?: ClientOrderTransactionUpsertWithWhereUniqueWithoutBusinessesInput | ClientOrderTransactionUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: ClientOrderTransactionCreateManyBusinessesInputEnvelope
    set?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    disconnect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    delete?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    connect?: ClientOrderTransactionWhereUniqueInput | ClientOrderTransactionWhereUniqueInput[]
    update?: ClientOrderTransactionUpdateWithWhereUniqueWithoutBusinessesInput | ClientOrderTransactionUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: ClientOrderTransactionUpdateManyWithWhereWithoutBusinessesInput | ClientOrderTransactionUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: ClientOrderTransactionScalarWhereInput | ClientOrderTransactionScalarWhereInput[]
  }

  export type ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput = {
    create?: XOR<ClientOrderCreateWithoutBusinessesInput, ClientOrderUncheckedCreateWithoutBusinessesInput> | ClientOrderCreateWithoutBusinessesInput[] | ClientOrderUncheckedCreateWithoutBusinessesInput[]
    connectOrCreate?: ClientOrderCreateOrConnectWithoutBusinessesInput | ClientOrderCreateOrConnectWithoutBusinessesInput[]
    upsert?: ClientOrderUpsertWithWhereUniqueWithoutBusinessesInput | ClientOrderUpsertWithWhereUniqueWithoutBusinessesInput[]
    createMany?: ClientOrderCreateManyBusinessesInputEnvelope
    set?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    disconnect?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    delete?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    connect?: ClientOrderWhereUniqueInput | ClientOrderWhereUniqueInput[]
    update?: ClientOrderUpdateWithWhereUniqueWithoutBusinessesInput | ClientOrderUpdateWithWhereUniqueWithoutBusinessesInput[]
    updateMany?: ClientOrderUpdateManyWithWhereWithoutBusinessesInput | ClientOrderUpdateManyWithWhereWithoutBusinessesInput[]
    deleteMany?: ClientOrderScalarWhereInput | ClientOrderScalarWhereInput[]
  }

  export type businessesCreateNestedOneWithoutClient_order_product_linesInput = {
    create?: XOR<businessesCreateWithoutClient_order_product_linesInput, businessesUncheckedCreateWithoutClient_order_product_linesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_product_linesInput
    connect?: businessesWhereUniqueInput
  }

  export type ClientOrderCreateNestedOneWithoutClient_order_product_linesInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_product_linesInput, ClientOrderUncheckedCreateWithoutClient_order_product_linesInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_product_linesInput
    connect?: ClientOrderWhereUniqueInput
  }

  export type businessesUpdateOneRequiredWithoutClient_order_product_linesNestedInput = {
    create?: XOR<businessesCreateWithoutClient_order_product_linesInput, businessesUncheckedCreateWithoutClient_order_product_linesInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_product_linesInput
    upsert?: businessesUpsertWithoutClient_order_product_linesInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutClient_order_product_linesInput, businessesUpdateWithoutClient_order_product_linesInput>, businessesUncheckedUpdateWithoutClient_order_product_linesInput>
  }

  export type ClientOrderUpdateOneRequiredWithoutClient_order_product_linesNestedInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_product_linesInput, ClientOrderUncheckedCreateWithoutClient_order_product_linesInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_product_linesInput
    upsert?: ClientOrderUpsertWithoutClient_order_product_linesInput
    connect?: ClientOrderWhereUniqueInput
    update?: XOR<XOR<ClientOrderUpdateToOneWithWhereWithoutClient_order_product_linesInput, ClientOrderUpdateWithoutClient_order_product_linesInput>, ClientOrderUncheckedUpdateWithoutClient_order_product_linesInput>
  }

  export type client_order_thermal_printersCreateprintersInput = {
    set: string[]
  }

  export type businessesCreateNestedOneWithoutClient_order_thermal_printersInput = {
    create?: XOR<businessesCreateWithoutClient_order_thermal_printersInput, businessesUncheckedCreateWithoutClient_order_thermal_printersInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_thermal_printersInput
    connect?: businessesWhereUniqueInput
  }

  export type ClientOrderCreateNestedOneWithoutClient_order_thermal_printersInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_thermal_printersInput, ClientOrderUncheckedCreateWithoutClient_order_thermal_printersInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_thermal_printersInput
    connect?: ClientOrderWhereUniqueInput
  }

  export type client_order_thermal_printersUpdateprintersInput = {
    set?: string[]
    push?: string | string[]
  }

  export type businessesUpdateOneRequiredWithoutClient_order_thermal_printersNestedInput = {
    create?: XOR<businessesCreateWithoutClient_order_thermal_printersInput, businessesUncheckedCreateWithoutClient_order_thermal_printersInput>
    connectOrCreate?: businessesCreateOrConnectWithoutClient_order_thermal_printersInput
    upsert?: businessesUpsertWithoutClient_order_thermal_printersInput
    connect?: businessesWhereUniqueInput
    update?: XOR<XOR<businessesUpdateToOneWithWhereWithoutClient_order_thermal_printersInput, businessesUpdateWithoutClient_order_thermal_printersInput>, businessesUncheckedUpdateWithoutClient_order_thermal_printersInput>
  }

  export type ClientOrderUpdateOneRequiredWithoutClient_order_thermal_printersNestedInput = {
    create?: XOR<ClientOrderCreateWithoutClient_order_thermal_printersInput, ClientOrderUncheckedCreateWithoutClient_order_thermal_printersInput>
    connectOrCreate?: ClientOrderCreateOrConnectWithoutClient_order_thermal_printersInput
    upsert?: ClientOrderUpsertWithoutClient_order_thermal_printersInput
    connect?: ClientOrderWhereUniqueInput
    update?: XOR<XOR<ClientOrderUpdateToOneWithWhereWithoutClient_order_thermal_printersInput, ClientOrderUpdateWithoutClient_order_thermal_printersInput>, ClientOrderUncheckedUpdateWithoutClient_order_thermal_printersInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumLicenseTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseType | EnumLicenseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseTypeFilter<$PrismaModel> | $Enums.LicenseType
  }

  export type NestedEnumLicensePlanFilter<$PrismaModel = never> = {
    equals?: $Enums.LicensePlan | EnumLicensePlanFieldRefInput<$PrismaModel>
    in?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    not?: NestedEnumLicensePlanFilter<$PrismaModel> | $Enums.LicensePlan
  }

  export type NestedEnumLicenseStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusFilter<$PrismaModel> | $Enums.LicenseStatus
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumLicenseTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseType | EnumLicenseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseType[] | ListEnumLicenseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseTypeWithAggregatesFilter<$PrismaModel> | $Enums.LicenseType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicenseTypeFilter<$PrismaModel>
    _max?: NestedEnumLicenseTypeFilter<$PrismaModel>
  }

  export type NestedEnumLicensePlanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicensePlan | EnumLicensePlanFieldRefInput<$PrismaModel>
    in?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicensePlan[] | ListEnumLicensePlanFieldRefInput<$PrismaModel>
    not?: NestedEnumLicensePlanWithAggregatesFilter<$PrismaModel> | $Enums.LicensePlan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicensePlanFilter<$PrismaModel>
    _max?: NestedEnumLicensePlanFilter<$PrismaModel>
  }

  export type NestedEnumLicenseStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusWithAggregatesFilter<$PrismaModel> | $Enums.LicenseStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicenseStatusFilter<$PrismaModel>
    _max?: NestedEnumLicenseStatusFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type NestedEnumPaymentMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableFilter<$PrismaModel> | $Enums.PaymentMethod | null
  }

  export type NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type businessesCreateWithoutBusiness_bank_informationInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_bank_informationInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_bank_informationInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_bank_informationInput, businessesUncheckedCreateWithoutBusiness_bank_informationInput>
  }

  export type businessesUpsertWithoutBusiness_bank_informationInput = {
    update: XOR<businessesUpdateWithoutBusiness_bank_informationInput, businessesUncheckedUpdateWithoutBusiness_bank_informationInput>
    create: XOR<businessesCreateWithoutBusiness_bank_informationInput, businessesUncheckedCreateWithoutBusiness_bank_informationInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_bank_informationInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_bank_informationInput, businessesUncheckedUpdateWithoutBusiness_bank_informationInput>
  }

  export type businessesUpdateWithoutBusiness_bank_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_bank_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type business_payment_historyCreateWithoutBusiness_payment_history_detailsInput = {
    id: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_payment_historyInput
  }

  export type business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput = {
    id: string
    businessId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_payment_historyCreateOrConnectWithoutBusiness_payment_history_detailsInput = {
    where: business_payment_historyWhereUniqueInput
    create: XOR<business_payment_historyCreateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput>
  }

  export type business_payment_historyCreateManyBusiness_payment_history_detailsInputEnvelope = {
    data: business_payment_historyCreateManyBusiness_payment_history_detailsInput | business_payment_historyCreateManyBusiness_payment_history_detailsInput[]
    skipDuplicates?: boolean
  }

  export type businessesCreateWithoutBusiness_payment_history_detailsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_payment_history_detailsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_payment_history_detailsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_payment_history_detailsInput, businessesUncheckedCreateWithoutBusiness_payment_history_detailsInput>
  }

  export type business_payment_historyUpsertWithWhereUniqueWithoutBusiness_payment_history_detailsInput = {
    where: business_payment_historyWhereUniqueInput
    update: XOR<business_payment_historyUpdateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedUpdateWithoutBusiness_payment_history_detailsInput>
    create: XOR<business_payment_historyCreateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedCreateWithoutBusiness_payment_history_detailsInput>
  }

  export type business_payment_historyUpdateWithWhereUniqueWithoutBusiness_payment_history_detailsInput = {
    where: business_payment_historyWhereUniqueInput
    data: XOR<business_payment_historyUpdateWithoutBusiness_payment_history_detailsInput, business_payment_historyUncheckedUpdateWithoutBusiness_payment_history_detailsInput>
  }

  export type business_payment_historyUpdateManyWithWhereWithoutBusiness_payment_history_detailsInput = {
    where: business_payment_historyScalarWhereInput
    data: XOR<business_payment_historyUpdateManyMutationInput, business_payment_historyUncheckedUpdateManyWithoutBusiness_payment_history_detailsInput>
  }

  export type business_payment_historyScalarWhereInput = {
    AND?: business_payment_historyScalarWhereInput | business_payment_historyScalarWhereInput[]
    OR?: business_payment_historyScalarWhereInput[]
    NOT?: business_payment_historyScalarWhereInput | business_payment_historyScalarWhereInput[]
    id?: StringFilter<"business_payment_history"> | string
    businessId?: StringFilter<"business_payment_history"> | string
    paymentDetailId?: StringFilter<"business_payment_history"> | string
    amount?: FloatFilter<"business_payment_history"> | number
    currency?: StringFilter<"business_payment_history"> | string
    type?: StringFilter<"business_payment_history"> | string
    status?: StringFilter<"business_payment_history"> | string
    stripeInvoiceId?: StringNullableFilter<"business_payment_history"> | string | null
    createdAt?: DateTimeFilter<"business_payment_history"> | Date | string
    updatedAt?: DateTimeFilter<"business_payment_history"> | Date | string
  }

  export type businessesUpsertWithoutBusiness_payment_history_detailsInput = {
    update: XOR<businessesUpdateWithoutBusiness_payment_history_detailsInput, businessesUncheckedUpdateWithoutBusiness_payment_history_detailsInput>
    create: XOR<businessesCreateWithoutBusiness_payment_history_detailsInput, businessesUncheckedCreateWithoutBusiness_payment_history_detailsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_payment_history_detailsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_payment_history_detailsInput, businessesUncheckedUpdateWithoutBusiness_payment_history_detailsInput>
  }

  export type businessesUpdateWithoutBusiness_payment_history_detailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_payment_history_detailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_licensesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_licensesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_licensesInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_licensesInput, businessesUncheckedCreateWithoutBusiness_licensesInput>
  }

  export type businessesUpsertWithoutBusiness_licensesInput = {
    update: XOR<businessesUpdateWithoutBusiness_licensesInput, businessesUncheckedUpdateWithoutBusiness_licensesInput>
    create: XOR<businessesCreateWithoutBusiness_licensesInput, businessesUncheckedCreateWithoutBusiness_licensesInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_licensesInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_licensesInput, businessesUncheckedUpdateWithoutBusiness_licensesInput>
  }

  export type businessesUpdateWithoutBusiness_licensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_licensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_paying_companiesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_paying_companiesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_paying_companiesInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_paying_companiesInput, businessesUncheckedCreateWithoutBusiness_paying_companiesInput>
  }

  export type businessesUpsertWithoutBusiness_paying_companiesInput = {
    update: XOR<businessesUpdateWithoutBusiness_paying_companiesInput, businessesUncheckedUpdateWithoutBusiness_paying_companiesInput>
    create: XOR<businessesCreateWithoutBusiness_paying_companiesInput, businessesUncheckedCreateWithoutBusiness_paying_companiesInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_paying_companiesInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_paying_companiesInput, businessesUncheckedUpdateWithoutBusiness_paying_companiesInput>
  }

  export type businessesUpdateWithoutBusiness_paying_companiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_paying_companiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type client_order_product_linesCreateWithoutClient_ordersInput = {
    id: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_product_linesInput
  }

  export type client_order_product_linesUncheckedCreateWithoutClient_ordersInput = {
    id: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_product_linesCreateOrConnectWithoutClient_ordersInput = {
    where: client_order_product_linesWhereUniqueInput
    create: XOR<client_order_product_linesCreateWithoutClient_ordersInput, client_order_product_linesUncheckedCreateWithoutClient_ordersInput>
  }

  export type client_order_product_linesCreateManyClient_ordersInputEnvelope = {
    data: client_order_product_linesCreateManyClient_ordersInput | client_order_product_linesCreateManyClient_ordersInput[]
    skipDuplicates?: boolean
  }

  export type client_order_thermal_printersCreateWithoutClient_ordersInput = {
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_thermal_printersInput
  }

  export type client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput = {
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_thermal_printersCreateOrConnectWithoutClient_ordersInput = {
    where: client_order_thermal_printersWhereUniqueInput
    create: XOR<client_order_thermal_printersCreateWithoutClient_ordersInput, client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput>
  }

  export type ClientOrderTicketCreateWithoutClient_ordersInput = {
    tickets: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_ticketsInput
  }

  export type ClientOrderTicketUncheckedCreateWithoutClient_ordersInput = {
    tickets: JsonNullValueInput | InputJsonValue
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTicketCreateOrConnectWithoutClient_ordersInput = {
    where: ClientOrderTicketWhereUniqueInput
    create: XOR<ClientOrderTicketCreateWithoutClient_ordersInput, ClientOrderTicketUncheckedCreateWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionCreateWithoutClient_ordersInput = {
    id?: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutClient_order_transactionsInput
  }

  export type ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput = {
    id?: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTransactionCreateOrConnectWithoutClient_ordersInput = {
    where: ClientOrderTransactionWhereUniqueInput
    create: XOR<ClientOrderTransactionCreateWithoutClient_ordersInput, ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionCreateManyClient_ordersInputEnvelope = {
    data: ClientOrderTransactionCreateManyClient_ordersInput | ClientOrderTransactionCreateManyClient_ordersInput[]
    skipDuplicates?: boolean
  }

  export type businessesCreateWithoutClient_ordersInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutClient_ordersInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutClient_ordersInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutClient_ordersInput, businessesUncheckedCreateWithoutClient_ordersInput>
  }

  export type client_order_product_linesUpsertWithWhereUniqueWithoutClient_ordersInput = {
    where: client_order_product_linesWhereUniqueInput
    update: XOR<client_order_product_linesUpdateWithoutClient_ordersInput, client_order_product_linesUncheckedUpdateWithoutClient_ordersInput>
    create: XOR<client_order_product_linesCreateWithoutClient_ordersInput, client_order_product_linesUncheckedCreateWithoutClient_ordersInput>
  }

  export type client_order_product_linesUpdateWithWhereUniqueWithoutClient_ordersInput = {
    where: client_order_product_linesWhereUniqueInput
    data: XOR<client_order_product_linesUpdateWithoutClient_ordersInput, client_order_product_linesUncheckedUpdateWithoutClient_ordersInput>
  }

  export type client_order_product_linesUpdateManyWithWhereWithoutClient_ordersInput = {
    where: client_order_product_linesScalarWhereInput
    data: XOR<client_order_product_linesUpdateManyMutationInput, client_order_product_linesUncheckedUpdateManyWithoutClient_ordersInput>
  }

  export type client_order_product_linesScalarWhereInput = {
    AND?: client_order_product_linesScalarWhereInput | client_order_product_linesScalarWhereInput[]
    OR?: client_order_product_linesScalarWhereInput[]
    NOT?: client_order_product_linesScalarWhereInput | client_order_product_linesScalarWhereInput[]
    id?: StringFilter<"client_order_product_lines"> | string
    orderId?: StringFilter<"client_order_product_lines"> | string
    productSnapshot?: JsonFilter<"client_order_product_lines">
    quantity?: IntFilter<"client_order_product_lines"> | number
    subtotal?: FloatFilter<"client_order_product_lines"> | number
    businessId?: StringFilter<"client_order_product_lines"> | string
    createdAt?: DateTimeFilter<"client_order_product_lines"> | Date | string
    updatedAt?: DateTimeFilter<"client_order_product_lines"> | Date | string
  }

  export type client_order_thermal_printersUpsertWithoutClient_ordersInput = {
    update: XOR<client_order_thermal_printersUpdateWithoutClient_ordersInput, client_order_thermal_printersUncheckedUpdateWithoutClient_ordersInput>
    create: XOR<client_order_thermal_printersCreateWithoutClient_ordersInput, client_order_thermal_printersUncheckedCreateWithoutClient_ordersInput>
    where?: client_order_thermal_printersWhereInput
  }

  export type client_order_thermal_printersUpdateToOneWithWhereWithoutClient_ordersInput = {
    where?: client_order_thermal_printersWhereInput
    data: XOR<client_order_thermal_printersUpdateWithoutClient_ordersInput, client_order_thermal_printersUncheckedUpdateWithoutClient_ordersInput>
  }

  export type client_order_thermal_printersUpdateWithoutClient_ordersInput = {
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_thermal_printersNestedInput
  }

  export type client_order_thermal_printersUncheckedUpdateWithoutClient_ordersInput = {
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTicketUpsertWithoutClient_ordersInput = {
    update: XOR<ClientOrderTicketUpdateWithoutClient_ordersInput, ClientOrderTicketUncheckedUpdateWithoutClient_ordersInput>
    create: XOR<ClientOrderTicketCreateWithoutClient_ordersInput, ClientOrderTicketUncheckedCreateWithoutClient_ordersInput>
    where?: ClientOrderTicketWhereInput
  }

  export type ClientOrderTicketUpdateToOneWithWhereWithoutClient_ordersInput = {
    where?: ClientOrderTicketWhereInput
    data: XOR<ClientOrderTicketUpdateWithoutClient_ordersInput, ClientOrderTicketUncheckedUpdateWithoutClient_ordersInput>
  }

  export type ClientOrderTicketUpdateWithoutClient_ordersInput = {
    tickets?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_ticketsNestedInput
  }

  export type ClientOrderTicketUncheckedUpdateWithoutClient_ordersInput = {
    tickets?: JsonNullValueInput | InputJsonValue
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionUpsertWithWhereUniqueWithoutClient_ordersInput = {
    where: ClientOrderTransactionWhereUniqueInput
    update: XOR<ClientOrderTransactionUpdateWithoutClient_ordersInput, ClientOrderTransactionUncheckedUpdateWithoutClient_ordersInput>
    create: XOR<ClientOrderTransactionCreateWithoutClient_ordersInput, ClientOrderTransactionUncheckedCreateWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionUpdateWithWhereUniqueWithoutClient_ordersInput = {
    where: ClientOrderTransactionWhereUniqueInput
    data: XOR<ClientOrderTransactionUpdateWithoutClient_ordersInput, ClientOrderTransactionUncheckedUpdateWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionUpdateManyWithWhereWithoutClient_ordersInput = {
    where: ClientOrderTransactionScalarWhereInput
    data: XOR<ClientOrderTransactionUpdateManyMutationInput, ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersInput>
  }

  export type ClientOrderTransactionScalarWhereInput = {
    AND?: ClientOrderTransactionScalarWhereInput | ClientOrderTransactionScalarWhereInput[]
    OR?: ClientOrderTransactionScalarWhereInput[]
    NOT?: ClientOrderTransactionScalarWhereInput | ClientOrderTransactionScalarWhereInput[]
    id?: StringFilter<"ClientOrderTransaction"> | string
    orderId?: StringFilter<"ClientOrderTransaction"> | string
    externalTransactionId?: StringFilter<"ClientOrderTransaction"> | string
    transactionAmount?: FloatFilter<"ClientOrderTransaction"> | number
    transactionCurrencyIso?: StringFilter<"ClientOrderTransaction"> | string
    status?: EnumTransactionStatusFilter<"ClientOrderTransaction"> | $Enums.TransactionStatus
    paymentMethod?: EnumPaymentMethodNullableFilter<"ClientOrderTransaction"> | $Enums.PaymentMethod | null
    businessId?: StringFilter<"ClientOrderTransaction"> | string
    createdAt?: DateTimeFilter<"ClientOrderTransaction"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrderTransaction"> | Date | string
  }

  export type businessesUpsertWithoutClient_ordersInput = {
    update: XOR<businessesUpdateWithoutClient_ordersInput, businessesUncheckedUpdateWithoutClient_ordersInput>
    create: XOR<businessesCreateWithoutClient_ordersInput, businessesUncheckedCreateWithoutClient_ordersInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutClient_ordersInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutClient_ordersInput, businessesUncheckedUpdateWithoutClient_ordersInput>
  }

  export type businessesUpdateWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutClient_order_ticketsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutClient_order_ticketsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutClient_order_ticketsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutClient_order_ticketsInput, businessesUncheckedCreateWithoutClient_order_ticketsInput>
  }

  export type ClientOrderCreateWithoutClient_order_ticketsInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutClient_ordersInput
    businesses: businessesCreateNestedOneWithoutClient_ordersInput
  }

  export type ClientOrderUncheckedCreateWithoutClient_order_ticketsInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutClient_ordersInput
  }

  export type ClientOrderCreateOrConnectWithoutClient_order_ticketsInput = {
    where: ClientOrderWhereUniqueInput
    create: XOR<ClientOrderCreateWithoutClient_order_ticketsInput, ClientOrderUncheckedCreateWithoutClient_order_ticketsInput>
  }

  export type businessesUpsertWithoutClient_order_ticketsInput = {
    update: XOR<businessesUpdateWithoutClient_order_ticketsInput, businessesUncheckedUpdateWithoutClient_order_ticketsInput>
    create: XOR<businessesCreateWithoutClient_order_ticketsInput, businessesUncheckedCreateWithoutClient_order_ticketsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutClient_order_ticketsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutClient_order_ticketsInput, businessesUncheckedUpdateWithoutClient_order_ticketsInput>
  }

  export type businessesUpdateWithoutClient_order_ticketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutClient_order_ticketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type ClientOrderUpsertWithoutClient_order_ticketsInput = {
    update: XOR<ClientOrderUpdateWithoutClient_order_ticketsInput, ClientOrderUncheckedUpdateWithoutClient_order_ticketsInput>
    create: XOR<ClientOrderCreateWithoutClient_order_ticketsInput, ClientOrderUncheckedCreateWithoutClient_order_ticketsInput>
    where?: ClientOrderWhereInput
  }

  export type ClientOrderUpdateToOneWithWhereWithoutClient_order_ticketsInput = {
    where?: ClientOrderWhereInput
    data: XOR<ClientOrderUpdateWithoutClient_order_ticketsInput, ClientOrderUncheckedUpdateWithoutClient_order_ticketsInput>
  }

  export type ClientOrderUpdateWithoutClient_order_ticketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutClient_ordersNestedInput
    businesses?: businessesUpdateOneRequiredWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateWithoutClient_order_ticketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersNestedInput
  }

  export type businessesCreateWithoutClient_order_transactionsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutClient_order_transactionsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutClient_order_transactionsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutClient_order_transactionsInput, businessesUncheckedCreateWithoutClient_order_transactionsInput>
  }

  export type ClientOrderCreateWithoutClient_order_transactionsInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketCreateNestedOneWithoutClient_ordersInput
    businesses: businessesCreateNestedOneWithoutClient_ordersInput
  }

  export type ClientOrderUncheckedCreateWithoutClient_order_transactionsInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedOneWithoutClient_ordersInput
  }

  export type ClientOrderCreateOrConnectWithoutClient_order_transactionsInput = {
    where: ClientOrderWhereUniqueInput
    create: XOR<ClientOrderCreateWithoutClient_order_transactionsInput, ClientOrderUncheckedCreateWithoutClient_order_transactionsInput>
  }

  export type businessesUpsertWithoutClient_order_transactionsInput = {
    update: XOR<businessesUpdateWithoutClient_order_transactionsInput, businessesUncheckedUpdateWithoutClient_order_transactionsInput>
    create: XOR<businessesCreateWithoutClient_order_transactionsInput, businessesUncheckedCreateWithoutClient_order_transactionsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutClient_order_transactionsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutClient_order_transactionsInput, businessesUncheckedUpdateWithoutClient_order_transactionsInput>
  }

  export type businessesUpdateWithoutClient_order_transactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutClient_order_transactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type ClientOrderUpsertWithoutClient_order_transactionsInput = {
    update: XOR<ClientOrderUpdateWithoutClient_order_transactionsInput, ClientOrderUncheckedUpdateWithoutClient_order_transactionsInput>
    create: XOR<ClientOrderCreateWithoutClient_order_transactionsInput, ClientOrderUncheckedCreateWithoutClient_order_transactionsInput>
    where?: ClientOrderWhereInput
  }

  export type ClientOrderUpdateToOneWithWhereWithoutClient_order_transactionsInput = {
    where?: ClientOrderWhereInput
    data: XOR<ClientOrderUpdateWithoutClient_order_transactionsInput, ClientOrderUncheckedUpdateWithoutClient_order_transactionsInput>
  }

  export type ClientOrderUpdateWithoutClient_order_transactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUpdateOneWithoutClient_ordersNestedInput
    businesses?: businessesUpdateOneRequiredWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateWithoutClient_order_transactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateOneWithoutClient_ordersNestedInput
  }

  export type businessesCreateWithoutBusiness_supplier_picturesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_supplier_picturesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_supplier_picturesInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_supplier_picturesInput, businessesUncheckedCreateWithoutBusiness_supplier_picturesInput>
  }

  export type business_supplier_informationCreateWithoutBusiness_supplier_picturesInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_supplier_informationInput
  }

  export type business_supplier_informationUncheckedCreateWithoutBusiness_supplier_picturesInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supplier_informationCreateOrConnectWithoutBusiness_supplier_picturesInput = {
    where: business_supplier_informationWhereUniqueInput
    create: XOR<business_supplier_informationCreateWithoutBusiness_supplier_picturesInput, business_supplier_informationUncheckedCreateWithoutBusiness_supplier_picturesInput>
  }

  export type businessesUpsertWithoutBusiness_supplier_picturesInput = {
    update: XOR<businessesUpdateWithoutBusiness_supplier_picturesInput, businessesUncheckedUpdateWithoutBusiness_supplier_picturesInput>
    create: XOR<businessesCreateWithoutBusiness_supplier_picturesInput, businessesUncheckedCreateWithoutBusiness_supplier_picturesInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_supplier_picturesInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_supplier_picturesInput, businessesUncheckedUpdateWithoutBusiness_supplier_picturesInput>
  }

  export type businessesUpdateWithoutBusiness_supplier_picturesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_supplier_picturesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type business_supplier_informationUpsertWithoutBusiness_supplier_picturesInput = {
    update: XOR<business_supplier_informationUpdateWithoutBusiness_supplier_picturesInput, business_supplier_informationUncheckedUpdateWithoutBusiness_supplier_picturesInput>
    create: XOR<business_supplier_informationCreateWithoutBusiness_supplier_picturesInput, business_supplier_informationUncheckedCreateWithoutBusiness_supplier_picturesInput>
    where?: business_supplier_informationWhereInput
  }

  export type business_supplier_informationUpdateToOneWithWhereWithoutBusiness_supplier_picturesInput = {
    where?: business_supplier_informationWhereInput
    data: XOR<business_supplier_informationUpdateWithoutBusiness_supplier_picturesInput, business_supplier_informationUncheckedUpdateWithoutBusiness_supplier_picturesInput>
  }

  export type business_supplier_informationUpdateWithoutBusiness_supplier_picturesInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_supplier_informationNestedInput
  }

  export type business_supplier_informationUncheckedUpdateWithoutBusiness_supplier_picturesInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryCreateWithoutBusiness_menusInput = {
    id?: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_menu_categoriesInput
  }

  export type BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput = {
    id?: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCategoryCreateOrConnectWithoutBusiness_menusInput = {
    where: BusinessMenuCategoryWhereUniqueInput
    create: XOR<BusinessMenuCategoryCreateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput>
  }

  export type BusinessMenuCategoryCreateManyBusiness_menusInputEnvelope = {
    data: BusinessMenuCategoryCreateManyBusiness_menusInput | BusinessMenuCategoryCreateManyBusiness_menusInput[]
    skipDuplicates?: boolean
  }

  export type businessesCreateWithoutBusiness_menusInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_menusInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_menusInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_menusInput, businessesUncheckedCreateWithoutBusiness_menusInput>
  }

  export type BusinessProductCreateWithoutBusiness_menusInput = {
    id?: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_productsInput
  }

  export type BusinessProductUncheckedCreateWithoutBusiness_menusInput = {
    id?: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessProductCreateOrConnectWithoutBusiness_menusInput = {
    where: BusinessProductWhereUniqueInput
    create: XOR<BusinessProductCreateWithoutBusiness_menusInput, BusinessProductUncheckedCreateWithoutBusiness_menusInput>
  }

  export type BusinessProductCreateManyBusiness_menusInputEnvelope = {
    data: BusinessProductCreateManyBusiness_menusInput | BusinessProductCreateManyBusiness_menusInput[]
    skipDuplicates?: boolean
  }

  export type BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusiness_menusInput = {
    where: BusinessMenuCategoryWhereUniqueInput
    update: XOR<BusinessMenuCategoryUpdateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedUpdateWithoutBusiness_menusInput>
    create: XOR<BusinessMenuCategoryCreateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedCreateWithoutBusiness_menusInput>
  }

  export type BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusiness_menusInput = {
    where: BusinessMenuCategoryWhereUniqueInput
    data: XOR<BusinessMenuCategoryUpdateWithoutBusiness_menusInput, BusinessMenuCategoryUncheckedUpdateWithoutBusiness_menusInput>
  }

  export type BusinessMenuCategoryUpdateManyWithWhereWithoutBusiness_menusInput = {
    where: BusinessMenuCategoryScalarWhereInput
    data: XOR<BusinessMenuCategoryUpdateManyMutationInput, BusinessMenuCategoryUncheckedUpdateManyWithoutBusiness_menusInput>
  }

  export type BusinessMenuCategoryScalarWhereInput = {
    AND?: BusinessMenuCategoryScalarWhereInput | BusinessMenuCategoryScalarWhereInput[]
    OR?: BusinessMenuCategoryScalarWhereInput[]
    NOT?: BusinessMenuCategoryScalarWhereInput | BusinessMenuCategoryScalarWhereInput[]
    id?: StringFilter<"BusinessMenuCategory"> | string
    menuId?: StringFilter<"BusinessMenuCategory"> | string
    vip?: BoolFilter<"BusinessMenuCategory"> | boolean
    haveSchedule?: BoolFilter<"BusinessMenuCategory"> | boolean
    schedule?: JsonNullableFilter<"BusinessMenuCategory">
    nameLastModificationEmployee?: StringNullableFilter<"BusinessMenuCategory"> | string | null
    businessId?: StringFilter<"BusinessMenuCategory"> | string
    createdAt?: DateTimeFilter<"BusinessMenuCategory"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessMenuCategory"> | Date | string
  }

  export type businessesUpsertWithoutBusiness_menusInput = {
    update: XOR<businessesUpdateWithoutBusiness_menusInput, businessesUncheckedUpdateWithoutBusiness_menusInput>
    create: XOR<businessesCreateWithoutBusiness_menusInput, businessesUncheckedCreateWithoutBusiness_menusInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_menusInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_menusInput, businessesUncheckedUpdateWithoutBusiness_menusInput>
  }

  export type businessesUpdateWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type BusinessProductUpsertWithWhereUniqueWithoutBusiness_menusInput = {
    where: BusinessProductWhereUniqueInput
    update: XOR<BusinessProductUpdateWithoutBusiness_menusInput, BusinessProductUncheckedUpdateWithoutBusiness_menusInput>
    create: XOR<BusinessProductCreateWithoutBusiness_menusInput, BusinessProductUncheckedCreateWithoutBusiness_menusInput>
  }

  export type BusinessProductUpdateWithWhereUniqueWithoutBusiness_menusInput = {
    where: BusinessProductWhereUniqueInput
    data: XOR<BusinessProductUpdateWithoutBusiness_menusInput, BusinessProductUncheckedUpdateWithoutBusiness_menusInput>
  }

  export type BusinessProductUpdateManyWithWhereWithoutBusiness_menusInput = {
    where: BusinessProductScalarWhereInput
    data: XOR<BusinessProductUpdateManyMutationInput, BusinessProductUncheckedUpdateManyWithoutBusiness_menusInput>
  }

  export type BusinessProductScalarWhereInput = {
    AND?: BusinessProductScalarWhereInput | BusinessProductScalarWhereInput[]
    OR?: BusinessProductScalarWhereInput[]
    NOT?: BusinessProductScalarWhereInput | BusinessProductScalarWhereInput[]
    id?: StringFilter<"BusinessProduct"> | string
    menuId?: StringFilter<"BusinessProduct"> | string
    name?: StringFilter<"BusinessProduct"> | string
    unityAmount?: FloatFilter<"BusinessProduct"> | number
    stockBatches?: IntNullableListFilter<"BusinessProduct">
    expirationDates?: DateTimeNullableListFilter<"BusinessProduct">
    unityConsumeStock?: IntFilter<"BusinessProduct"> | number
    typeUnitConsumeMeasurement?: StringFilter<"BusinessProduct"> | string
    tags?: StringNullableFilter<"BusinessProduct"> | string | null
    nameLastModificationEmployee?: StringNullableFilter<"BusinessProduct"> | string | null
    businessId?: StringFilter<"BusinessProduct"> | string
    createdAt?: DateTimeFilter<"BusinessProduct"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessProduct"> | Date | string
  }

  export type businessesCreateWithoutBusiness_menu_categoriesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_menu_categoriesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_menu_categoriesInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_menu_categoriesInput, businessesUncheckedCreateWithoutBusiness_menu_categoriesInput>
  }

  export type BusinessMenuCreateWithoutBusiness_menu_categoriesInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_menusInput
    business_products?: BusinessProductCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuUncheckedCreateWithoutBusiness_menu_categoriesInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuCreateOrConnectWithoutBusiness_menu_categoriesInput = {
    where: BusinessMenuWhereUniqueInput
    create: XOR<BusinessMenuCreateWithoutBusiness_menu_categoriesInput, BusinessMenuUncheckedCreateWithoutBusiness_menu_categoriesInput>
  }

  export type businessesUpsertWithoutBusiness_menu_categoriesInput = {
    update: XOR<businessesUpdateWithoutBusiness_menu_categoriesInput, businessesUncheckedUpdateWithoutBusiness_menu_categoriesInput>
    create: XOR<businessesCreateWithoutBusiness_menu_categoriesInput, businessesUncheckedCreateWithoutBusiness_menu_categoriesInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_menu_categoriesInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_menu_categoriesInput, businessesUncheckedUpdateWithoutBusiness_menu_categoriesInput>
  }

  export type businessesUpdateWithoutBusiness_menu_categoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_menu_categoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type BusinessMenuUpsertWithoutBusiness_menu_categoriesInput = {
    update: XOR<BusinessMenuUpdateWithoutBusiness_menu_categoriesInput, BusinessMenuUncheckedUpdateWithoutBusiness_menu_categoriesInput>
    create: XOR<BusinessMenuCreateWithoutBusiness_menu_categoriesInput, BusinessMenuUncheckedCreateWithoutBusiness_menu_categoriesInput>
    where?: BusinessMenuWhereInput
  }

  export type BusinessMenuUpdateToOneWithWhereWithoutBusiness_menu_categoriesInput = {
    where?: BusinessMenuWhereInput
    data: XOR<BusinessMenuUpdateWithoutBusiness_menu_categoriesInput, BusinessMenuUncheckedUpdateWithoutBusiness_menu_categoriesInput>
  }

  export type BusinessMenuUpdateWithoutBusiness_menu_categoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_menusNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusiness_menusNestedInput
  }

  export type BusinessMenuUncheckedUpdateWithoutBusiness_menu_categoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusiness_menusNestedInput
  }

  export type businessesCreateWithoutBusiness_productsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_productsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_productsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_productsInput, businessesUncheckedCreateWithoutBusiness_productsInput>
  }

  export type BusinessMenuCreateWithoutBusiness_productsInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusiness_menusInput
    businesses: businessesCreateNestedOneWithoutBusiness_menusInput
  }

  export type BusinessMenuUncheckedCreateWithoutBusiness_productsInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuCreateOrConnectWithoutBusiness_productsInput = {
    where: BusinessMenuWhereUniqueInput
    create: XOR<BusinessMenuCreateWithoutBusiness_productsInput, BusinessMenuUncheckedCreateWithoutBusiness_productsInput>
  }

  export type businessesUpsertWithoutBusiness_productsInput = {
    update: XOR<businessesUpdateWithoutBusiness_productsInput, businessesUncheckedUpdateWithoutBusiness_productsInput>
    create: XOR<businessesCreateWithoutBusiness_productsInput, businessesUncheckedCreateWithoutBusiness_productsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_productsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_productsInput, businessesUncheckedUpdateWithoutBusiness_productsInput>
  }

  export type businessesUpdateWithoutBusiness_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type BusinessMenuUpsertWithoutBusiness_productsInput = {
    update: XOR<BusinessMenuUpdateWithoutBusiness_productsInput, BusinessMenuUncheckedUpdateWithoutBusiness_productsInput>
    create: XOR<BusinessMenuCreateWithoutBusiness_productsInput, BusinessMenuUncheckedCreateWithoutBusiness_productsInput>
    where?: BusinessMenuWhereInput
  }

  export type BusinessMenuUpdateToOneWithWhereWithoutBusiness_productsInput = {
    where?: BusinessMenuWhereInput
    data: XOR<BusinessMenuUpdateWithoutBusiness_productsInput, BusinessMenuUncheckedUpdateWithoutBusiness_productsInput>
  }

  export type BusinessMenuUpdateWithoutBusiness_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusiness_menusNestedInput
    businesses?: businessesUpdateOneRequiredWithoutBusiness_menusNestedInput
  }

  export type BusinessMenuUncheckedUpdateWithoutBusiness_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusiness_menusNestedInput
  }

  export type businessesCreateWithoutBusiness_general_sales_reports_aiInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_general_sales_reports_aiInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_general_sales_reports_aiInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_general_sales_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_sales_reports_aiInput>
  }

  export type businessesUpsertWithoutBusiness_general_sales_reports_aiInput = {
    update: XOR<businessesUpdateWithoutBusiness_general_sales_reports_aiInput, businessesUncheckedUpdateWithoutBusiness_general_sales_reports_aiInput>
    create: XOR<businessesCreateWithoutBusiness_general_sales_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_sales_reports_aiInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_general_sales_reports_aiInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_general_sales_reports_aiInput, businessesUncheckedUpdateWithoutBusiness_general_sales_reports_aiInput>
  }

  export type businessesUpdateWithoutBusiness_general_sales_reports_aiInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_general_sales_reports_aiInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_general_warehouse_reports_aiInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_general_warehouse_reports_aiInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_general_warehouse_reports_aiInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_general_warehouse_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_warehouse_reports_aiInput>
  }

  export type businessesUpsertWithoutBusiness_general_warehouse_reports_aiInput = {
    update: XOR<businessesUpdateWithoutBusiness_general_warehouse_reports_aiInput, businessesUncheckedUpdateWithoutBusiness_general_warehouse_reports_aiInput>
    create: XOR<businessesCreateWithoutBusiness_general_warehouse_reports_aiInput, businessesUncheckedCreateWithoutBusiness_general_warehouse_reports_aiInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_general_warehouse_reports_aiInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_general_warehouse_reports_aiInput, businessesUncheckedUpdateWithoutBusiness_general_warehouse_reports_aiInput>
  }

  export type businessesUpdateWithoutBusiness_general_warehouse_reports_aiInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_general_warehouse_reports_aiInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUncheckedCreateWithoutBusiness_warehouse_replenishment_reports_aiInput>
  }

  export type businessesUpsertWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    update: XOR<businessesUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUncheckedUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput>
    create: XOR<businessesCreateWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUncheckedCreateWithoutBusiness_warehouse_replenishment_reports_aiInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput, businessesUncheckedUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput>
  }

  export type businessesUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_warehouse_replenishment_reports_aiInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type business_commercial_relationshipsCreateWithoutBusiness_commercial_relationship_documents_attachedInput = {
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_commercial_relationshipsInput
  }

  export type business_commercial_relationshipsUncheckedCreateWithoutBusiness_commercial_relationship_documents_attachedInput = {
    id: string
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationshipsCreateOrConnectWithoutBusiness_commercial_relationship_documents_attachedInput = {
    where: business_commercial_relationshipsWhereUniqueInput
    create: XOR<business_commercial_relationshipsCreateWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUncheckedCreateWithoutBusiness_commercial_relationship_documents_attachedInput>
  }

  export type business_commercial_relationshipsUpsertWithoutBusiness_commercial_relationship_documents_attachedInput = {
    update: XOR<business_commercial_relationshipsUpdateWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUncheckedUpdateWithoutBusiness_commercial_relationship_documents_attachedInput>
    create: XOR<business_commercial_relationshipsCreateWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUncheckedCreateWithoutBusiness_commercial_relationship_documents_attachedInput>
    where?: business_commercial_relationshipsWhereInput
  }

  export type business_commercial_relationshipsUpdateToOneWithWhereWithoutBusiness_commercial_relationship_documents_attachedInput = {
    where?: business_commercial_relationshipsWhereInput
    data: XOR<business_commercial_relationshipsUpdateWithoutBusiness_commercial_relationship_documents_attachedInput, business_commercial_relationshipsUncheckedUpdateWithoutBusiness_commercial_relationship_documents_attachedInput>
  }

  export type business_commercial_relationshipsUpdateWithoutBusiness_commercial_relationship_documents_attachedInput = {
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_commercial_relationshipsNestedInput
  }

  export type business_commercial_relationshipsUncheckedUpdateWithoutBusiness_commercial_relationship_documents_attachedInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationship_documents_attachedCreateOrConnectWithoutBusiness_commercial_relationshipsInput = {
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
    create: XOR<business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput>
  }

  export type business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInputEnvelope = {
    data: business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInput | business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInput[]
    skipDuplicates?: boolean
  }

  export type businessesCreateWithoutBusiness_commercial_relationshipsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_commercial_relationshipsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_commercial_relationshipsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_commercial_relationshipsInput, businessesUncheckedCreateWithoutBusiness_commercial_relationshipsInput>
  }

  export type business_commercial_relationship_documents_attachedUpsertWithWhereUniqueWithoutBusiness_commercial_relationshipsInput = {
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
    update: XOR<business_commercial_relationship_documents_attachedUpdateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedUpdateWithoutBusiness_commercial_relationshipsInput>
    create: XOR<business_commercial_relationship_documents_attachedCreateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedCreateWithoutBusiness_commercial_relationshipsInput>
  }

  export type business_commercial_relationship_documents_attachedUpdateWithWhereUniqueWithoutBusiness_commercial_relationshipsInput = {
    where: business_commercial_relationship_documents_attachedWhereUniqueInput
    data: XOR<business_commercial_relationship_documents_attachedUpdateWithoutBusiness_commercial_relationshipsInput, business_commercial_relationship_documents_attachedUncheckedUpdateWithoutBusiness_commercial_relationshipsInput>
  }

  export type business_commercial_relationship_documents_attachedUpdateManyWithWhereWithoutBusiness_commercial_relationshipsInput = {
    where: business_commercial_relationship_documents_attachedScalarWhereInput
    data: XOR<business_commercial_relationship_documents_attachedUpdateManyMutationInput, business_commercial_relationship_documents_attachedUncheckedUpdateManyWithoutBusiness_commercial_relationshipsInput>
  }

  export type business_commercial_relationship_documents_attachedScalarWhereInput = {
    AND?: business_commercial_relationship_documents_attachedScalarWhereInput | business_commercial_relationship_documents_attachedScalarWhereInput[]
    OR?: business_commercial_relationship_documents_attachedScalarWhereInput[]
    NOT?: business_commercial_relationship_documents_attachedScalarWhereInput | business_commercial_relationship_documents_attachedScalarWhereInput[]
    id?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    url?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    commercialRelationshipId?: StringFilter<"business_commercial_relationship_documents_attached"> | string
    createdAt?: DateTimeFilter<"business_commercial_relationship_documents_attached"> | Date | string
    updatedAt?: DateTimeFilter<"business_commercial_relationship_documents_attached"> | Date | string
  }

  export type businessesUpsertWithoutBusiness_commercial_relationshipsInput = {
    update: XOR<businessesUpdateWithoutBusiness_commercial_relationshipsInput, businessesUncheckedUpdateWithoutBusiness_commercial_relationshipsInput>
    create: XOR<businessesCreateWithoutBusiness_commercial_relationshipsInput, businessesUncheckedCreateWithoutBusiness_commercial_relationshipsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_commercial_relationshipsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_commercial_relationshipsInput, businessesUncheckedUpdateWithoutBusiness_commercial_relationshipsInput>
  }

  export type businessesUpdateWithoutBusiness_commercial_relationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_commercial_relationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_complianceInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_complianceInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_complianceInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_complianceInput, businessesUncheckedCreateWithoutBusiness_complianceInput>
  }

  export type businessesUpsertWithoutBusiness_complianceInput = {
    update: XOR<businessesUpdateWithoutBusiness_complianceInput, businessesUncheckedUpdateWithoutBusiness_complianceInput>
    create: XOR<businessesCreateWithoutBusiness_complianceInput, businessesUncheckedCreateWithoutBusiness_complianceInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_complianceInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_complianceInput, businessesUncheckedUpdateWithoutBusiness_complianceInput>
  }

  export type businessesUpdateWithoutBusiness_complianceInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_complianceInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_configurationsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_configurationsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_configurationsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_configurationsInput, businessesUncheckedCreateWithoutBusiness_configurationsInput>
  }

  export type businessesUpsertWithoutBusiness_configurationsInput = {
    update: XOR<businessesUpdateWithoutBusiness_configurationsInput, businessesUncheckedUpdateWithoutBusiness_configurationsInput>
    create: XOR<businessesCreateWithoutBusiness_configurationsInput, businessesUncheckedCreateWithoutBusiness_configurationsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_configurationsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_configurationsInput, businessesUncheckedUpdateWithoutBusiness_configurationsInput>
  }

  export type businessesUpdateWithoutBusiness_configurationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_configurationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_employeesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_employeesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_employeesInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_employeesInput, businessesUncheckedCreateWithoutBusiness_employeesInput>
  }

  export type business_employees_clock_recordsCreateWithoutBusiness_employeesInput = {
    id: string
    recordTime: Date | string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_employees_clock_recordsInput
  }

  export type business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput = {
    id: string
    recordTime: Date | string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employees_clock_recordsCreateOrConnectWithoutBusiness_employeesInput = {
    where: business_employees_clock_recordsWhereUniqueInput
    create: XOR<business_employees_clock_recordsCreateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput>
  }

  export type business_employees_clock_recordsCreateManyBusiness_employeesInputEnvelope = {
    data: business_employees_clock_recordsCreateManyBusiness_employeesInput | business_employees_clock_recordsCreateManyBusiness_employeesInput[]
    skipDuplicates?: boolean
  }

  export type businessesUpsertWithoutBusiness_employeesInput = {
    update: XOR<businessesUpdateWithoutBusiness_employeesInput, businessesUncheckedUpdateWithoutBusiness_employeesInput>
    create: XOR<businessesCreateWithoutBusiness_employeesInput, businessesUncheckedCreateWithoutBusiness_employeesInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_employeesInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_employeesInput, businessesUncheckedUpdateWithoutBusiness_employeesInput>
  }

  export type businessesUpdateWithoutBusiness_employeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_employeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusiness_employeesInput = {
    where: business_employees_clock_recordsWhereUniqueInput
    update: XOR<business_employees_clock_recordsUpdateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedUpdateWithoutBusiness_employeesInput>
    create: XOR<business_employees_clock_recordsCreateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedCreateWithoutBusiness_employeesInput>
  }

  export type business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusiness_employeesInput = {
    where: business_employees_clock_recordsWhereUniqueInput
    data: XOR<business_employees_clock_recordsUpdateWithoutBusiness_employeesInput, business_employees_clock_recordsUncheckedUpdateWithoutBusiness_employeesInput>
  }

  export type business_employees_clock_recordsUpdateManyWithWhereWithoutBusiness_employeesInput = {
    where: business_employees_clock_recordsScalarWhereInput
    data: XOR<business_employees_clock_recordsUpdateManyMutationInput, business_employees_clock_recordsUncheckedUpdateManyWithoutBusiness_employeesInput>
  }

  export type business_employees_clock_recordsScalarWhereInput = {
    AND?: business_employees_clock_recordsScalarWhereInput | business_employees_clock_recordsScalarWhereInput[]
    OR?: business_employees_clock_recordsScalarWhereInput[]
    NOT?: business_employees_clock_recordsScalarWhereInput | business_employees_clock_recordsScalarWhereInput[]
    id?: StringFilter<"business_employees_clock_records"> | string
    employeeId?: StringFilter<"business_employees_clock_records"> | string
    recordTime?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    businessId?: StringFilter<"business_employees_clock_records"> | string
    createdAt?: DateTimeFilter<"business_employees_clock_records"> | Date | string
    updatedAt?: DateTimeFilter<"business_employees_clock_records"> | Date | string
  }

  export type businessesCreateWithoutBusiness_employees_clock_recordsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_employees_clock_recordsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_employees_clock_recordsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_employees_clock_recordsInput, businessesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
  }

  export type business_employeesCreateWithoutBusiness_employees_clock_recordsInput = {
    id: string
    nameEmployee: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_employeesInput
  }

  export type business_employeesUncheckedCreateWithoutBusiness_employees_clock_recordsInput = {
    id: string
    nameEmployee: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employeesCreateOrConnectWithoutBusiness_employees_clock_recordsInput = {
    where: business_employeesWhereUniqueInput
    create: XOR<business_employeesCreateWithoutBusiness_employees_clock_recordsInput, business_employeesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
  }

  export type businessesUpsertWithoutBusiness_employees_clock_recordsInput = {
    update: XOR<businessesUpdateWithoutBusiness_employees_clock_recordsInput, businessesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput>
    create: XOR<businessesCreateWithoutBusiness_employees_clock_recordsInput, businessesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_employees_clock_recordsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_employees_clock_recordsInput, businessesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput>
  }

  export type businessesUpdateWithoutBusiness_employees_clock_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type business_employeesUpsertWithoutBusiness_employees_clock_recordsInput = {
    update: XOR<business_employeesUpdateWithoutBusiness_employees_clock_recordsInput, business_employeesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput>
    create: XOR<business_employeesCreateWithoutBusiness_employees_clock_recordsInput, business_employeesUncheckedCreateWithoutBusiness_employees_clock_recordsInput>
    where?: business_employeesWhereInput
  }

  export type business_employeesUpdateToOneWithWhereWithoutBusiness_employees_clock_recordsInput = {
    where?: business_employeesWhereInput
    data: XOR<business_employeesUpdateWithoutBusiness_employees_clock_recordsInput, business_employeesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput>
  }

  export type business_employeesUpdateWithoutBusiness_employees_clock_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_employeesNestedInput
  }

  export type business_employeesUncheckedUpdateWithoutBusiness_employees_clock_recordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type businessesCreateWithoutBusiness_payment_historyInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_payment_historyInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_payment_historyInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_payment_historyInput, businessesUncheckedCreateWithoutBusiness_payment_historyInput>
  }

  export type BusinessPaymentHistoryDetailCreateWithoutBusiness_payment_historyInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_payment_history_detailsInput
  }

  export type BusinessPaymentHistoryDetailUncheckedCreateWithoutBusiness_payment_historyInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPaymentHistoryDetailCreateOrConnectWithoutBusiness_payment_historyInput = {
    where: BusinessPaymentHistoryDetailWhereUniqueInput
    create: XOR<BusinessPaymentHistoryDetailCreateWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusiness_payment_historyInput>
  }

  export type businessesUpsertWithoutBusiness_payment_historyInput = {
    update: XOR<businessesUpdateWithoutBusiness_payment_historyInput, businessesUncheckedUpdateWithoutBusiness_payment_historyInput>
    create: XOR<businessesCreateWithoutBusiness_payment_historyInput, businessesUncheckedCreateWithoutBusiness_payment_historyInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_payment_historyInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_payment_historyInput, businessesUncheckedUpdateWithoutBusiness_payment_historyInput>
  }

  export type businessesUpdateWithoutBusiness_payment_historyInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_payment_historyInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type BusinessPaymentHistoryDetailUpsertWithoutBusiness_payment_historyInput = {
    update: XOR<BusinessPaymentHistoryDetailUpdateWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusiness_payment_historyInput>
    create: XOR<BusinessPaymentHistoryDetailCreateWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusiness_payment_historyInput>
    where?: BusinessPaymentHistoryDetailWhereInput
  }

  export type BusinessPaymentHistoryDetailUpdateToOneWithWhereWithoutBusiness_payment_historyInput = {
    where?: BusinessPaymentHistoryDetailWhereInput
    data: XOR<BusinessPaymentHistoryDetailUpdateWithoutBusiness_payment_historyInput, BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusiness_payment_historyInput>
  }

  export type BusinessPaymentHistoryDetailUpdateWithoutBusiness_payment_historyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_payment_history_detailsNestedInput
  }

  export type BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusiness_payment_historyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type businessesCreateWithoutBusiness_phone_idsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_phone_idsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_phone_idsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_phone_idsInput, businessesUncheckedCreateWithoutBusiness_phone_idsInput>
  }

  export type businessesUpsertWithoutBusiness_phone_idsInput = {
    update: XOR<businessesUpdateWithoutBusiness_phone_idsInput, businessesUncheckedUpdateWithoutBusiness_phone_idsInput>
    create: XOR<businessesCreateWithoutBusiness_phone_idsInput, businessesUncheckedCreateWithoutBusiness_phone_idsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_phone_idsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_phone_idsInput, businessesUncheckedUpdateWithoutBusiness_phone_idsInput>
  }

  export type businessesUpdateWithoutBusiness_phone_idsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_phone_idsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_supplier_informationInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_supplier_informationInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_supplier_informationInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_supplier_informationInput, businessesUncheckedCreateWithoutBusiness_supplier_informationInput>
  }

  export type BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    businesses: businessesCreateNestedOneWithoutBusiness_supplier_picturesInput
  }

  export type BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessSupplierPictureCreateOrConnectWithoutBusiness_supplier_informationInput = {
    where: BusinessSupplierPictureWhereUniqueInput
    create: XOR<BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput>
  }

  export type BusinessSupplierPictureCreateManyBusiness_supplier_informationInputEnvelope = {
    data: BusinessSupplierPictureCreateManyBusiness_supplier_informationInput | BusinessSupplierPictureCreateManyBusiness_supplier_informationInput[]
    skipDuplicates?: boolean
  }

  export type businessesUpsertWithoutBusiness_supplier_informationInput = {
    update: XOR<businessesUpdateWithoutBusiness_supplier_informationInput, businessesUncheckedUpdateWithoutBusiness_supplier_informationInput>
    create: XOR<businessesCreateWithoutBusiness_supplier_informationInput, businessesUncheckedCreateWithoutBusiness_supplier_informationInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_supplier_informationInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_supplier_informationInput, businessesUncheckedUpdateWithoutBusiness_supplier_informationInput>
  }

  export type businessesUpdateWithoutBusiness_supplier_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_supplier_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusiness_supplier_informationInput = {
    where: BusinessSupplierPictureWhereUniqueInput
    update: XOR<BusinessSupplierPictureUpdateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedUpdateWithoutBusiness_supplier_informationInput>
    create: XOR<BusinessSupplierPictureCreateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedCreateWithoutBusiness_supplier_informationInput>
  }

  export type BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusiness_supplier_informationInput = {
    where: BusinessSupplierPictureWhereUniqueInput
    data: XOR<BusinessSupplierPictureUpdateWithoutBusiness_supplier_informationInput, BusinessSupplierPictureUncheckedUpdateWithoutBusiness_supplier_informationInput>
  }

  export type BusinessSupplierPictureUpdateManyWithWhereWithoutBusiness_supplier_informationInput = {
    where: BusinessSupplierPictureScalarWhereInput
    data: XOR<BusinessSupplierPictureUpdateManyMutationInput, BusinessSupplierPictureUncheckedUpdateManyWithoutBusiness_supplier_informationInput>
  }

  export type BusinessSupplierPictureScalarWhereInput = {
    AND?: BusinessSupplierPictureScalarWhereInput | BusinessSupplierPictureScalarWhereInput[]
    OR?: BusinessSupplierPictureScalarWhereInput[]
    NOT?: BusinessSupplierPictureScalarWhereInput | BusinessSupplierPictureScalarWhereInput[]
    id?: StringFilter<"BusinessSupplierPicture"> | string
    supplierId?: StringFilter<"BusinessSupplierPicture"> | string
    url?: StringFilter<"BusinessSupplierPicture"> | string
    businessId?: StringFilter<"BusinessSupplierPicture"> | string
    createdAt?: DateTimeFilter<"BusinessSupplierPicture"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessSupplierPicture"> | Date | string
  }

  export type businessesCreateWithoutBusiness_supporting_documentsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_supporting_documentsInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_supporting_documentsInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_supporting_documentsInput, businessesUncheckedCreateWithoutBusiness_supporting_documentsInput>
  }

  export type businessesUpsertWithoutBusiness_supporting_documentsInput = {
    update: XOR<businessesUpdateWithoutBusiness_supporting_documentsInput, businessesUncheckedUpdateWithoutBusiness_supporting_documentsInput>
    create: XOR<businessesCreateWithoutBusiness_supporting_documentsInput, businessesUncheckedCreateWithoutBusiness_supporting_documentsInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_supporting_documentsInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_supporting_documentsInput, businessesUncheckedUpdateWithoutBusiness_supporting_documentsInput>
  }

  export type businessesUpdateWithoutBusiness_supporting_documentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_supporting_documentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesCreateWithoutBusiness_supporting_documents_attachedInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutBusiness_supporting_documents_attachedInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutBusiness_supporting_documents_attachedInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutBusiness_supporting_documents_attachedInput, businessesUncheckedCreateWithoutBusiness_supporting_documents_attachedInput>
  }

  export type businessesUpsertWithoutBusiness_supporting_documents_attachedInput = {
    update: XOR<businessesUpdateWithoutBusiness_supporting_documents_attachedInput, businessesUncheckedUpdateWithoutBusiness_supporting_documents_attachedInput>
    create: XOR<businessesCreateWithoutBusiness_supporting_documents_attachedInput, businessesUncheckedCreateWithoutBusiness_supporting_documents_attachedInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutBusiness_supporting_documents_attachedInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutBusiness_supporting_documents_attachedInput, businessesUncheckedUpdateWithoutBusiness_supporting_documents_attachedInput>
  }

  export type businessesUpdateWithoutBusiness_supporting_documents_attachedInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutBusiness_supporting_documents_attachedInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type BusinessBankInformationCreateWithoutBusinessesInput = {
    bankName: string
    ibanOrAccountNumber: string
    swiftBic?: string | null
    accountHolderName: string
    bankAddress?: string | null
    currency: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessBankInformationUncheckedCreateWithoutBusinessesInput = {
    bankName: string
    ibanOrAccountNumber: string
    swiftBic?: string | null
    accountHolderName: string
    bankAddress?: string | null
    currency: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessBankInformationCreateOrConnectWithoutBusinessesInput = {
    where: BusinessBankInformationWhereUniqueInput
    create: XOR<BusinessBankInformationCreateWithoutBusinessesInput, BusinessBankInformationUncheckedCreateWithoutBusinessesInput>
  }

  export type business_commercial_relationshipsCreateWithoutBusinessesInput = {
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedCreateNestedManyWithoutBusiness_commercial_relationshipsInput
  }

  export type business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput = {
    type: string
    signedContract?: boolean | null
    thirdPartyPaymentPermission?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedUncheckedCreateNestedManyWithoutBusiness_commercial_relationshipsInput
  }

  export type business_commercial_relationshipsCreateOrConnectWithoutBusinessesInput = {
    where: business_commercial_relationshipsWhereUniqueInput
    create: XOR<business_commercial_relationshipsCreateWithoutBusinessesInput, business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_complianceCreateWithoutBusinessesInput = {
    kycVerified?: boolean | null
    amlApproved?: boolean | null
    taxWithholdingApplicable?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_complianceUncheckedCreateWithoutBusinessesInput = {
    kycVerified?: boolean | null
    amlApproved?: boolean | null
    taxWithholdingApplicable?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_complianceCreateOrConnectWithoutBusinessesInput = {
    where: business_complianceWhereUniqueInput
    create: XOR<business_complianceCreateWithoutBusinessesInput, business_complianceUncheckedCreateWithoutBusinessesInput>
  }

  export type business_configurationsCreateWithoutBusinessesInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: boolean | null
    maxPhonesDevices?: number | null
    displayUsername?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_configurationsUncheckedCreateWithoutBusinessesInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: boolean | null
    maxPhonesDevices?: number | null
    displayUsername?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_configurationsCreateOrConnectWithoutBusinessesInput = {
    where: business_configurationsWhereUniqueInput
    create: XOR<business_configurationsCreateWithoutBusinessesInput, business_configurationsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_employeesCreateWithoutBusinessesInput = {
    id: string
    nameEmployee: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusiness_employeesInput
  }

  export type business_employeesUncheckedCreateWithoutBusinessesInput = {
    id: string
    nameEmployee: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusiness_employeesInput
  }

  export type business_employeesCreateOrConnectWithoutBusinessesInput = {
    where: business_employeesWhereUniqueInput
    create: XOR<business_employeesCreateWithoutBusinessesInput, business_employeesUncheckedCreateWithoutBusinessesInput>
  }

  export type business_employeesCreateManyBusinessesInputEnvelope = {
    data: business_employeesCreateManyBusinessesInput | business_employeesCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type business_employees_clock_recordsCreateWithoutBusinessesInput = {
    id: string
    recordTime: Date | string
    createdAt?: Date | string
    updatedAt: Date | string
    business_employees: business_employeesCreateNestedOneWithoutBusiness_employees_clock_recordsInput
  }

  export type business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput = {
    id: string
    employeeId: string
    recordTime: Date | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employees_clock_recordsCreateOrConnectWithoutBusinessesInput = {
    where: business_employees_clock_recordsWhereUniqueInput
    create: XOR<business_employees_clock_recordsCreateWithoutBusinessesInput, business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_employees_clock_recordsCreateManyBusinessesInputEnvelope = {
    data: business_employees_clock_recordsCreateManyBusinessesInput | business_employees_clock_recordsCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessGeneralSalesReportAICreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralSalesReportAICreateOrConnectWithoutBusinessesInput = {
    where: BusinessGeneralSalesReportAIWhereUniqueInput
    create: XOR<BusinessGeneralSalesReportAICreateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessGeneralSalesReportAICreateManyBusinessesInputEnvelope = {
    data: BusinessGeneralSalesReportAICreateManyBusinessesInput | BusinessGeneralSalesReportAICreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralWarehouseReportAICreateOrConnectWithoutBusinessesInput = {
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
    create: XOR<BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessGeneralWarehouseReportAICreateManyBusinessesInputEnvelope = {
    data: BusinessGeneralWarehouseReportAICreateManyBusinessesInput | BusinessGeneralWarehouseReportAICreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessLicenseCreateWithoutBusinessesInput = {
    id?: string
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    stripePaymentIntentId?: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date | string
    endDate?: Date | string | null
    isPaid?: boolean
    lockinMonths?: number | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessLicenseUncheckedCreateWithoutBusinessesInput = {
    id?: string
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    stripePaymentIntentId?: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date | string
    endDate?: Date | string | null
    isPaid?: boolean
    lockinMonths?: number | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessLicenseCreateOrConnectWithoutBusinessesInput = {
    where: BusinessLicenseWhereUniqueInput
    create: XOR<BusinessLicenseCreateWithoutBusinessesInput, BusinessLicenseUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessLicenseCreateManyBusinessesInputEnvelope = {
    data: BusinessLicenseCreateManyBusinessesInput | BusinessLicenseCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessMenuCategoryCreateWithoutBusinessesInput = {
    id?: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_menus: BusinessMenuCreateNestedOneWithoutBusiness_menu_categoriesInput
  }

  export type BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput = {
    id?: string
    menuId: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCategoryCreateOrConnectWithoutBusinessesInput = {
    where: BusinessMenuCategoryWhereUniqueInput
    create: XOR<BusinessMenuCategoryCreateWithoutBusinessesInput, BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessMenuCategoryCreateManyBusinessesInputEnvelope = {
    data: BusinessMenuCategoryCreateManyBusinessesInput | BusinessMenuCategoryCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessMenuCreateWithoutBusinessesInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusiness_menusInput
    business_products?: BusinessProductCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuUncheckedCreateWithoutBusinessesInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusiness_menusInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusiness_menusInput
  }

  export type BusinessMenuCreateOrConnectWithoutBusinessesInput = {
    where: BusinessMenuWhereUniqueInput
    create: XOR<BusinessMenuCreateWithoutBusinessesInput, BusinessMenuUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessMenuCreateManyBusinessesInputEnvelope = {
    data: BusinessMenuCreateManyBusinessesInput | BusinessMenuCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessPayingCompanyCreateWithoutBusinessesInput = {
    legalName: string
    taxId: string
    country: string
    role: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput = {
    legalName: string
    taxId: string
    country: string
    role: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPayingCompanyCreateOrConnectWithoutBusinessesInput = {
    where: BusinessPayingCompanyWhereUniqueInput
    create: XOR<BusinessPayingCompanyCreateWithoutBusinessesInput, BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput>
  }

  export type business_payment_historyCreateWithoutBusinessesInput = {
    id: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_payment_history_details: BusinessPaymentHistoryDetailCreateNestedOneWithoutBusiness_payment_historyInput
  }

  export type business_payment_historyUncheckedCreateWithoutBusinessesInput = {
    id: string
    paymentDetailId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_payment_historyCreateOrConnectWithoutBusinessesInput = {
    where: business_payment_historyWhereUniqueInput
    create: XOR<business_payment_historyCreateWithoutBusinessesInput, business_payment_historyUncheckedCreateWithoutBusinessesInput>
  }

  export type business_payment_historyCreateManyBusinessesInputEnvelope = {
    data: business_payment_historyCreateManyBusinessesInput | business_payment_historyCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessPaymentHistoryDetailCreateWithoutBusinessesInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusiness_payment_history_detailsInput
  }

  export type BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusiness_payment_history_detailsInput
  }

  export type BusinessPaymentHistoryDetailCreateOrConnectWithoutBusinessesInput = {
    where: BusinessPaymentHistoryDetailWhereUniqueInput
    create: XOR<BusinessPaymentHistoryDetailCreateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessPaymentHistoryDetailCreateManyBusinessesInputEnvelope = {
    data: BusinessPaymentHistoryDetailCreateManyBusinessesInput | BusinessPaymentHistoryDetailCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type business_phone_idsCreateWithoutBusinessesInput = {
    id: string
    title: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_phone_idsUncheckedCreateWithoutBusinessesInput = {
    id: string
    title: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_phone_idsCreateOrConnectWithoutBusinessesInput = {
    where: business_phone_idsWhereUniqueInput
    create: XOR<business_phone_idsCreateWithoutBusinessesInput, business_phone_idsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_phone_idsCreateManyBusinessesInputEnvelope = {
    data: business_phone_idsCreateManyBusinessesInput | business_phone_idsCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessProductCreateWithoutBusinessesInput = {
    id?: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    business_menus: BusinessMenuCreateNestedOneWithoutBusiness_productsInput
  }

  export type BusinessProductUncheckedCreateWithoutBusinessesInput = {
    id?: string
    menuId: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessProductCreateOrConnectWithoutBusinessesInput = {
    where: BusinessProductWhereUniqueInput
    create: XOR<BusinessProductCreateWithoutBusinessesInput, BusinessProductUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessProductCreateManyBusinessesInputEnvelope = {
    data: BusinessProductCreateManyBusinessesInput | BusinessProductCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type business_supplier_informationCreateWithoutBusinessesInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusiness_supplier_informationInput
  }

  export type business_supplier_informationUncheckedCreateWithoutBusinessesInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusiness_supplier_informationInput
  }

  export type business_supplier_informationCreateOrConnectWithoutBusinessesInput = {
    where: business_supplier_informationWhereUniqueInput
    create: XOR<business_supplier_informationCreateWithoutBusinessesInput, business_supplier_informationUncheckedCreateWithoutBusinessesInput>
  }

  export type business_supplier_informationCreateManyBusinessesInputEnvelope = {
    data: business_supplier_informationCreateManyBusinessesInput | business_supplier_informationCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessSupplierPictureCreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
    business_supplier_information: business_supplier_informationCreateNestedOneWithoutBusiness_supplier_picturesInput
  }

  export type BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput = {
    id?: string
    supplierId: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessSupplierPictureCreateOrConnectWithoutBusinessesInput = {
    where: BusinessSupplierPictureWhereUniqueInput
    create: XOR<BusinessSupplierPictureCreateWithoutBusinessesInput, BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessSupplierPictureCreateManyBusinessesInputEnvelope = {
    data: BusinessSupplierPictureCreateManyBusinessesInput | BusinessSupplierPictureCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type business_supporting_documentsCreateWithoutBusinessesInput = {
    serviceContract?: boolean | null
    issuedInvoice?: boolean | null
    thirdPartyPaymentAgreement?: boolean | null
    ultimateBeneficialOwnerCertificate?: boolean | null
    businessLicense?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documentsUncheckedCreateWithoutBusinessesInput = {
    serviceContract?: boolean | null
    issuedInvoice?: boolean | null
    thirdPartyPaymentAgreement?: boolean | null
    ultimateBeneficialOwnerCertificate?: boolean | null
    businessLicense?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documentsCreateOrConnectWithoutBusinessesInput = {
    where: business_supporting_documentsWhereUniqueInput
    create: XOR<business_supporting_documentsCreateWithoutBusinessesInput, business_supporting_documentsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedCreateWithoutBusinessesInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documents_attachedCreateOrConnectWithoutBusinessesInput = {
    where: business_supporting_documents_attachedWhereUniqueInput
    create: XOR<business_supporting_documents_attachedCreateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedCreateManyBusinessesInputEnvelope = {
    data: business_supporting_documents_attachedCreateManyBusinessesInput | business_supporting_documents_attachedCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessWarehouseReplenishmentReportAICreateOrConnectWithoutBusinessesInput = {
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    create: XOR<BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessWarehouseReplenishmentReportAICreateManyBusinessesInputEnvelope = {
    data: BusinessWarehouseReplenishmentReportAICreateManyBusinessesInput | BusinessWarehouseReplenishmentReportAICreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type client_order_product_linesCreateWithoutBusinessesInput = {
    id: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    createdAt?: Date | string
    updatedAt: Date | string
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_product_linesInput
  }

  export type client_order_product_linesUncheckedCreateWithoutBusinessesInput = {
    id: string
    orderId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_product_linesCreateOrConnectWithoutBusinessesInput = {
    where: client_order_product_linesWhereUniqueInput
    create: XOR<client_order_product_linesCreateWithoutBusinessesInput, client_order_product_linesUncheckedCreateWithoutBusinessesInput>
  }

  export type client_order_product_linesCreateManyBusinessesInputEnvelope = {
    data: client_order_product_linesCreateManyBusinessesInput | client_order_product_linesCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type client_order_thermal_printersCreateWithoutBusinessesInput = {
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    createdAt?: Date | string
    updatedAt: Date | string
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_thermal_printersInput
  }

  export type client_order_thermal_printersUncheckedCreateWithoutBusinessesInput = {
    orderId: string
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_thermal_printersCreateOrConnectWithoutBusinessesInput = {
    where: client_order_thermal_printersWhereUniqueInput
    create: XOR<client_order_thermal_printersCreateWithoutBusinessesInput, client_order_thermal_printersUncheckedCreateWithoutBusinessesInput>
  }

  export type client_order_thermal_printersCreateManyBusinessesInputEnvelope = {
    data: client_order_thermal_printersCreateManyBusinessesInput | client_order_thermal_printersCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type ClientOrderTicketCreateWithoutBusinessesInput = {
    tickets: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_ticketsInput
  }

  export type ClientOrderTicketUncheckedCreateWithoutBusinessesInput = {
    orderId: string
    tickets: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTicketCreateOrConnectWithoutBusinessesInput = {
    where: ClientOrderTicketWhereUniqueInput
    create: XOR<ClientOrderTicketCreateWithoutBusinessesInput, ClientOrderTicketUncheckedCreateWithoutBusinessesInput>
  }

  export type ClientOrderTicketCreateManyBusinessesInputEnvelope = {
    data: ClientOrderTicketCreateManyBusinessesInput | ClientOrderTicketCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type ClientOrderTransactionCreateWithoutBusinessesInput = {
    id?: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    createdAt?: Date | string
    updatedAt: Date | string
    client_orders: ClientOrderCreateNestedOneWithoutClient_order_transactionsInput
  }

  export type ClientOrderTransactionUncheckedCreateWithoutBusinessesInput = {
    id?: string
    orderId: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTransactionCreateOrConnectWithoutBusinessesInput = {
    where: ClientOrderTransactionWhereUniqueInput
    create: XOR<ClientOrderTransactionCreateWithoutBusinessesInput, ClientOrderTransactionUncheckedCreateWithoutBusinessesInput>
  }

  export type ClientOrderTransactionCreateManyBusinessesInputEnvelope = {
    data: ClientOrderTransactionCreateManyBusinessesInput | ClientOrderTransactionCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type ClientOrderCreateWithoutBusinessesInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutClient_ordersInput
  }

  export type ClientOrderUncheckedCreateWithoutBusinessesInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutClient_ordersInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutClient_ordersInput
  }

  export type ClientOrderCreateOrConnectWithoutBusinessesInput = {
    where: ClientOrderWhereUniqueInput
    create: XOR<ClientOrderCreateWithoutBusinessesInput, ClientOrderUncheckedCreateWithoutBusinessesInput>
  }

  export type ClientOrderCreateManyBusinessesInputEnvelope = {
    data: ClientOrderCreateManyBusinessesInput | ClientOrderCreateManyBusinessesInput[]
    skipDuplicates?: boolean
  }

  export type BusinessBankInformationUpsertWithoutBusinessesInput = {
    update: XOR<BusinessBankInformationUpdateWithoutBusinessesInput, BusinessBankInformationUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessBankInformationCreateWithoutBusinessesInput, BusinessBankInformationUncheckedCreateWithoutBusinessesInput>
    where?: BusinessBankInformationWhereInput
  }

  export type BusinessBankInformationUpdateToOneWithWhereWithoutBusinessesInput = {
    where?: BusinessBankInformationWhereInput
    data: XOR<BusinessBankInformationUpdateWithoutBusinessesInput, BusinessBankInformationUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessBankInformationUpdateWithoutBusinessesInput = {
    bankName?: StringFieldUpdateOperationsInput | string
    ibanOrAccountNumber?: StringFieldUpdateOperationsInput | string
    swiftBic?: NullableStringFieldUpdateOperationsInput | string | null
    accountHolderName?: StringFieldUpdateOperationsInput | string
    bankAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessBankInformationUncheckedUpdateWithoutBusinessesInput = {
    bankName?: StringFieldUpdateOperationsInput | string
    ibanOrAccountNumber?: StringFieldUpdateOperationsInput | string
    swiftBic?: NullableStringFieldUpdateOperationsInput | string | null
    accountHolderName?: StringFieldUpdateOperationsInput | string
    bankAddress?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationshipsUpsertWithoutBusinessesInput = {
    update: XOR<business_commercial_relationshipsUpdateWithoutBusinessesInput, business_commercial_relationshipsUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_commercial_relationshipsCreateWithoutBusinessesInput, business_commercial_relationshipsUncheckedCreateWithoutBusinessesInput>
    where?: business_commercial_relationshipsWhereInput
  }

  export type business_commercial_relationshipsUpdateToOneWithWhereWithoutBusinessesInput = {
    where?: business_commercial_relationshipsWhereInput
    data: XOR<business_commercial_relationshipsUpdateWithoutBusinessesInput, business_commercial_relationshipsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_commercial_relationshipsUpdateWithoutBusinessesInput = {
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedUpdateManyWithoutBusiness_commercial_relationshipsNestedInput
  }

  export type business_commercial_relationshipsUncheckedUpdateWithoutBusinessesInput = {
    type?: StringFieldUpdateOperationsInput | string
    signedContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentPermission?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_commercial_relationship_documents_attached?: business_commercial_relationship_documents_attachedUncheckedUpdateManyWithoutBusiness_commercial_relationshipsNestedInput
  }

  export type business_complianceUpsertWithoutBusinessesInput = {
    update: XOR<business_complianceUpdateWithoutBusinessesInput, business_complianceUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_complianceCreateWithoutBusinessesInput, business_complianceUncheckedCreateWithoutBusinessesInput>
    where?: business_complianceWhereInput
  }

  export type business_complianceUpdateToOneWithWhereWithoutBusinessesInput = {
    where?: business_complianceWhereInput
    data: XOR<business_complianceUpdateWithoutBusinessesInput, business_complianceUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_complianceUpdateWithoutBusinessesInput = {
    kycVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amlApproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxWithholdingApplicable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_complianceUncheckedUpdateWithoutBusinessesInput = {
    kycVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amlApproved?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxWithholdingApplicable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_configurationsUpsertWithoutBusinessesInput = {
    update: XOR<business_configurationsUpdateWithoutBusinessesInput, business_configurationsUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_configurationsCreateWithoutBusinessesInput, business_configurationsUncheckedCreateWithoutBusinessesInput>
    where?: business_configurationsWhereInput
  }

  export type business_configurationsUpdateToOneWithWhereWithoutBusinessesInput = {
    where?: business_configurationsWhereInput
    data: XOR<business_configurationsUpdateWithoutBusinessesInput, business_configurationsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_configurationsUpdateWithoutBusinessesInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maxPhonesDevices?: NullableIntFieldUpdateOperationsInput | number | null
    displayUsername?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_configurationsUncheckedUpdateWithoutBusinessesInput = {
    wifi?: NullableJsonNullValueInput | InputJsonValue
    schedule?: NullableJsonNullValueInput | InputJsonValue
    functionsActivated?: NullableJsonNullValueInput | InputJsonValue
    apiKey?: NullableJsonNullValueInput | InputJsonValue
    affiliate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    maxPhonesDevices?: NullableIntFieldUpdateOperationsInput | number | null
    displayUsername?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employeesUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: business_employeesWhereUniqueInput
    update: XOR<business_employeesUpdateWithoutBusinessesInput, business_employeesUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_employeesCreateWithoutBusinessesInput, business_employeesUncheckedCreateWithoutBusinessesInput>
  }

  export type business_employeesUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: business_employeesWhereUniqueInput
    data: XOR<business_employeesUpdateWithoutBusinessesInput, business_employeesUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_employeesUpdateManyWithWhereWithoutBusinessesInput = {
    where: business_employeesScalarWhereInput
    data: XOR<business_employeesUpdateManyMutationInput, business_employeesUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type business_employeesScalarWhereInput = {
    AND?: business_employeesScalarWhereInput | business_employeesScalarWhereInput[]
    OR?: business_employeesScalarWhereInput[]
    NOT?: business_employeesScalarWhereInput | business_employeesScalarWhereInput[]
    id?: StringFilter<"business_employees"> | string
    nameEmployee?: StringFilter<"business_employees"> | string
    businessId?: StringFilter<"business_employees"> | string
    createdAt?: DateTimeFilter<"business_employees"> | Date | string
    updatedAt?: DateTimeFilter<"business_employees"> | Date | string
  }

  export type business_employees_clock_recordsUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: business_employees_clock_recordsWhereUniqueInput
    update: XOR<business_employees_clock_recordsUpdateWithoutBusinessesInput, business_employees_clock_recordsUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_employees_clock_recordsCreateWithoutBusinessesInput, business_employees_clock_recordsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_employees_clock_recordsUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: business_employees_clock_recordsWhereUniqueInput
    data: XOR<business_employees_clock_recordsUpdateWithoutBusinessesInput, business_employees_clock_recordsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_employees_clock_recordsUpdateManyWithWhereWithoutBusinessesInput = {
    where: business_employees_clock_recordsScalarWhereInput
    data: XOR<business_employees_clock_recordsUpdateManyMutationInput, business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessGeneralSalesReportAIUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessGeneralSalesReportAIWhereUniqueInput
    update: XOR<BusinessGeneralSalesReportAIUpdateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessGeneralSalesReportAICreateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessGeneralSalesReportAIUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessGeneralSalesReportAIWhereUniqueInput
    data: XOR<BusinessGeneralSalesReportAIUpdateWithoutBusinessesInput, BusinessGeneralSalesReportAIUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessGeneralSalesReportAIUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessGeneralSalesReportAIScalarWhereInput
    data: XOR<BusinessGeneralSalesReportAIUpdateManyMutationInput, BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessGeneralSalesReportAIScalarWhereInput = {
    AND?: BusinessGeneralSalesReportAIScalarWhereInput | BusinessGeneralSalesReportAIScalarWhereInput[]
    OR?: BusinessGeneralSalesReportAIScalarWhereInput[]
    NOT?: BusinessGeneralSalesReportAIScalarWhereInput | BusinessGeneralSalesReportAIScalarWhereInput[]
    id?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    url?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    businessId?: StringFilter<"BusinessGeneralSalesReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessGeneralSalesReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessGeneralSalesReportAI"> | Date | string
  }

  export type BusinessGeneralWarehouseReportAIUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
    update: XOR<BusinessGeneralWarehouseReportAIUpdateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessGeneralWarehouseReportAICreateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessGeneralWarehouseReportAIUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessGeneralWarehouseReportAIWhereUniqueInput
    data: XOR<BusinessGeneralWarehouseReportAIUpdateWithoutBusinessesInput, BusinessGeneralWarehouseReportAIUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessGeneralWarehouseReportAIUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessGeneralWarehouseReportAIScalarWhereInput
    data: XOR<BusinessGeneralWarehouseReportAIUpdateManyMutationInput, BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessGeneralWarehouseReportAIScalarWhereInput = {
    AND?: BusinessGeneralWarehouseReportAIScalarWhereInput | BusinessGeneralWarehouseReportAIScalarWhereInput[]
    OR?: BusinessGeneralWarehouseReportAIScalarWhereInput[]
    NOT?: BusinessGeneralWarehouseReportAIScalarWhereInput | BusinessGeneralWarehouseReportAIScalarWhereInput[]
    id?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    url?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    businessId?: StringFilter<"BusinessGeneralWarehouseReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessGeneralWarehouseReportAI"> | Date | string
  }

  export type BusinessLicenseUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessLicenseWhereUniqueInput
    update: XOR<BusinessLicenseUpdateWithoutBusinessesInput, BusinessLicenseUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessLicenseCreateWithoutBusinessesInput, BusinessLicenseUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessLicenseUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessLicenseWhereUniqueInput
    data: XOR<BusinessLicenseUpdateWithoutBusinessesInput, BusinessLicenseUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessLicenseUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessLicenseScalarWhereInput
    data: XOR<BusinessLicenseUpdateManyMutationInput, BusinessLicenseUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessLicenseScalarWhereInput = {
    AND?: BusinessLicenseScalarWhereInput | BusinessLicenseScalarWhereInput[]
    OR?: BusinessLicenseScalarWhereInput[]
    NOT?: BusinessLicenseScalarWhereInput | BusinessLicenseScalarWhereInput[]
    id?: StringFilter<"BusinessLicense"> | string
    stripeCustomerId?: StringNullableFilter<"BusinessLicense"> | string | null
    stripeSubscriptionId?: StringNullableFilter<"BusinessLicense"> | string | null
    stripePaymentIntentId?: StringNullableFilter<"BusinessLicense"> | string | null
    licenseType?: EnumLicenseTypeFilter<"BusinessLicense"> | $Enums.LicenseType
    plan?: EnumLicensePlanFilter<"BusinessLicense"> | $Enums.LicensePlan
    status?: EnumLicenseStatusFilter<"BusinessLicense"> | $Enums.LicenseStatus
    startDate?: DateTimeFilter<"BusinessLicense"> | Date | string
    endDate?: DateTimeNullableFilter<"BusinessLicense"> | Date | string | null
    isPaid?: BoolFilter<"BusinessLicense"> | boolean
    lockinMonths?: IntNullableFilter<"BusinessLicense"> | number | null
    businessId?: StringFilter<"BusinessLicense"> | string
    createdAt?: DateTimeFilter<"BusinessLicense"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessLicense"> | Date | string
  }

  export type BusinessMenuCategoryUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessMenuCategoryWhereUniqueInput
    update: XOR<BusinessMenuCategoryUpdateWithoutBusinessesInput, BusinessMenuCategoryUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessMenuCategoryCreateWithoutBusinessesInput, BusinessMenuCategoryUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessMenuCategoryUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessMenuCategoryWhereUniqueInput
    data: XOR<BusinessMenuCategoryUpdateWithoutBusinessesInput, BusinessMenuCategoryUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessMenuCategoryUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessMenuCategoryScalarWhereInput
    data: XOR<BusinessMenuCategoryUpdateManyMutationInput, BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessMenuUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessMenuWhereUniqueInput
    update: XOR<BusinessMenuUpdateWithoutBusinessesInput, BusinessMenuUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessMenuCreateWithoutBusinessesInput, BusinessMenuUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessMenuUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessMenuWhereUniqueInput
    data: XOR<BusinessMenuUpdateWithoutBusinessesInput, BusinessMenuUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessMenuUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessMenuScalarWhereInput
    data: XOR<BusinessMenuUpdateManyMutationInput, BusinessMenuUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessMenuScalarWhereInput = {
    AND?: BusinessMenuScalarWhereInput | BusinessMenuScalarWhereInput[]
    OR?: BusinessMenuScalarWhereInput[]
    NOT?: BusinessMenuScalarWhereInput | BusinessMenuScalarWhereInput[]
    id?: StringFilter<"BusinessMenu"> | string
    title?: StringFilter<"BusinessMenu"> | string
    tags?: StringNullableFilter<"BusinessMenu"> | string | null
    nameLastModificationEmployee?: StringNullableFilter<"BusinessMenu"> | string | null
    businessId?: StringFilter<"BusinessMenu"> | string
    createdAt?: DateTimeFilter<"BusinessMenu"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessMenu"> | Date | string
  }

  export type BusinessPayingCompanyUpsertWithoutBusinessesInput = {
    update: XOR<BusinessPayingCompanyUpdateWithoutBusinessesInput, BusinessPayingCompanyUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessPayingCompanyCreateWithoutBusinessesInput, BusinessPayingCompanyUncheckedCreateWithoutBusinessesInput>
    where?: BusinessPayingCompanyWhereInput
  }

  export type BusinessPayingCompanyUpdateToOneWithWhereWithoutBusinessesInput = {
    where?: BusinessPayingCompanyWhereInput
    data: XOR<BusinessPayingCompanyUpdateWithoutBusinessesInput, BusinessPayingCompanyUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessPayingCompanyUpdateWithoutBusinessesInput = {
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPayingCompanyUncheckedUpdateWithoutBusinessesInput = {
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: business_payment_historyWhereUniqueInput
    update: XOR<business_payment_historyUpdateWithoutBusinessesInput, business_payment_historyUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_payment_historyCreateWithoutBusinessesInput, business_payment_historyUncheckedCreateWithoutBusinessesInput>
  }

  export type business_payment_historyUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: business_payment_historyWhereUniqueInput
    data: XOR<business_payment_historyUpdateWithoutBusinessesInput, business_payment_historyUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_payment_historyUpdateManyWithWhereWithoutBusinessesInput = {
    where: business_payment_historyScalarWhereInput
    data: XOR<business_payment_historyUpdateManyMutationInput, business_payment_historyUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessPaymentHistoryDetailUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessPaymentHistoryDetailWhereUniqueInput
    update: XOR<BusinessPaymentHistoryDetailUpdateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessPaymentHistoryDetailCreateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessPaymentHistoryDetailUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessPaymentHistoryDetailWhereUniqueInput
    data: XOR<BusinessPaymentHistoryDetailUpdateWithoutBusinessesInput, BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessPaymentHistoryDetailUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessPaymentHistoryDetailScalarWhereInput
    data: XOR<BusinessPaymentHistoryDetailUpdateManyMutationInput, BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessPaymentHistoryDetailScalarWhereInput = {
    AND?: BusinessPaymentHistoryDetailScalarWhereInput | BusinessPaymentHistoryDetailScalarWhereInput[]
    OR?: BusinessPaymentHistoryDetailScalarWhereInput[]
    NOT?: BusinessPaymentHistoryDetailScalarWhereInput | BusinessPaymentHistoryDetailScalarWhereInput[]
    id?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    description?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    amount?: FloatFilter<"BusinessPaymentHistoryDetail"> | number
    currency?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    taxesIncluded?: BoolNullableFilter<"BusinessPaymentHistoryDetail"> | boolean | null
    periodStart?: DateTimeNullableFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    periodEnd?: DateTimeNullableFilter<"BusinessPaymentHistoryDetail"> | Date | string | null
    businessId?: StringFilter<"BusinessPaymentHistoryDetail"> | string
    createdAt?: DateTimeFilter<"BusinessPaymentHistoryDetail"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPaymentHistoryDetail"> | Date | string
  }

  export type business_phone_idsUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: business_phone_idsWhereUniqueInput
    update: XOR<business_phone_idsUpdateWithoutBusinessesInput, business_phone_idsUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_phone_idsCreateWithoutBusinessesInput, business_phone_idsUncheckedCreateWithoutBusinessesInput>
  }

  export type business_phone_idsUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: business_phone_idsWhereUniqueInput
    data: XOR<business_phone_idsUpdateWithoutBusinessesInput, business_phone_idsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_phone_idsUpdateManyWithWhereWithoutBusinessesInput = {
    where: business_phone_idsScalarWhereInput
    data: XOR<business_phone_idsUpdateManyMutationInput, business_phone_idsUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type business_phone_idsScalarWhereInput = {
    AND?: business_phone_idsScalarWhereInput | business_phone_idsScalarWhereInput[]
    OR?: business_phone_idsScalarWhereInput[]
    NOT?: business_phone_idsScalarWhereInput | business_phone_idsScalarWhereInput[]
    id?: StringFilter<"business_phone_ids"> | string
    title?: StringFilter<"business_phone_ids"> | string
    businessId?: StringFilter<"business_phone_ids"> | string
    createdAt?: DateTimeFilter<"business_phone_ids"> | Date | string
    updatedAt?: DateTimeFilter<"business_phone_ids"> | Date | string
  }

  export type BusinessProductUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessProductWhereUniqueInput
    update: XOR<BusinessProductUpdateWithoutBusinessesInput, BusinessProductUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessProductCreateWithoutBusinessesInput, BusinessProductUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessProductUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessProductWhereUniqueInput
    data: XOR<BusinessProductUpdateWithoutBusinessesInput, BusinessProductUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessProductUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessProductScalarWhereInput
    data: XOR<BusinessProductUpdateManyMutationInput, BusinessProductUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type business_supplier_informationUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: business_supplier_informationWhereUniqueInput
    update: XOR<business_supplier_informationUpdateWithoutBusinessesInput, business_supplier_informationUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_supplier_informationCreateWithoutBusinessesInput, business_supplier_informationUncheckedCreateWithoutBusinessesInput>
  }

  export type business_supplier_informationUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: business_supplier_informationWhereUniqueInput
    data: XOR<business_supplier_informationUpdateWithoutBusinessesInput, business_supplier_informationUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_supplier_informationUpdateManyWithWhereWithoutBusinessesInput = {
    where: business_supplier_informationScalarWhereInput
    data: XOR<business_supplier_informationUpdateManyMutationInput, business_supplier_informationUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type business_supplier_informationScalarWhereInput = {
    AND?: business_supplier_informationScalarWhereInput | business_supplier_informationScalarWhereInput[]
    OR?: business_supplier_informationScalarWhereInput[]
    NOT?: business_supplier_informationScalarWhereInput | business_supplier_informationScalarWhereInput[]
    id?: StringFilter<"business_supplier_information"> | string
    inUse?: BoolFilter<"business_supplier_information"> | boolean
    title?: StringFilter<"business_supplier_information"> | string
    description?: StringNullableFilter<"business_supplier_information"> | string | null
    schedule?: JsonNullableFilter<"business_supplier_information">
    businessId?: StringFilter<"business_supplier_information"> | string
    createdAt?: DateTimeFilter<"business_supplier_information"> | Date | string
    updatedAt?: DateTimeFilter<"business_supplier_information"> | Date | string
  }

  export type BusinessSupplierPictureUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessSupplierPictureWhereUniqueInput
    update: XOR<BusinessSupplierPictureUpdateWithoutBusinessesInput, BusinessSupplierPictureUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessSupplierPictureCreateWithoutBusinessesInput, BusinessSupplierPictureUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessSupplierPictureUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessSupplierPictureWhereUniqueInput
    data: XOR<BusinessSupplierPictureUpdateWithoutBusinessesInput, BusinessSupplierPictureUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessSupplierPictureUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessSupplierPictureScalarWhereInput
    data: XOR<BusinessSupplierPictureUpdateManyMutationInput, BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type business_supporting_documentsUpsertWithoutBusinessesInput = {
    update: XOR<business_supporting_documentsUpdateWithoutBusinessesInput, business_supporting_documentsUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_supporting_documentsCreateWithoutBusinessesInput, business_supporting_documentsUncheckedCreateWithoutBusinessesInput>
    where?: business_supporting_documentsWhereInput
  }

  export type business_supporting_documentsUpdateToOneWithWhereWithoutBusinessesInput = {
    where?: business_supporting_documentsWhereInput
    data: XOR<business_supporting_documentsUpdateWithoutBusinessesInput, business_supporting_documentsUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_supporting_documentsUpdateWithoutBusinessesInput = {
    serviceContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    issuedInvoice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentAgreement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ultimateBeneficialOwnerCertificate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    businessLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documentsUncheckedUpdateWithoutBusinessesInput = {
    serviceContract?: NullableBoolFieldUpdateOperationsInput | boolean | null
    issuedInvoice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    thirdPartyPaymentAgreement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ultimateBeneficialOwnerCertificate?: NullableBoolFieldUpdateOperationsInput | boolean | null
    businessLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: business_supporting_documents_attachedWhereUniqueInput
    update: XOR<business_supporting_documents_attachedUpdateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedUpdateWithoutBusinessesInput>
    create: XOR<business_supporting_documents_attachedCreateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedCreateWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: business_supporting_documents_attachedWhereUniqueInput
    data: XOR<business_supporting_documents_attachedUpdateWithoutBusinessesInput, business_supporting_documents_attachedUncheckedUpdateWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedUpdateManyWithWhereWithoutBusinessesInput = {
    where: business_supporting_documents_attachedScalarWhereInput
    data: XOR<business_supporting_documents_attachedUpdateManyMutationInput, business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type business_supporting_documents_attachedScalarWhereInput = {
    AND?: business_supporting_documents_attachedScalarWhereInput | business_supporting_documents_attachedScalarWhereInput[]
    OR?: business_supporting_documents_attachedScalarWhereInput[]
    NOT?: business_supporting_documents_attachedScalarWhereInput | business_supporting_documents_attachedScalarWhereInput[]
    id?: StringFilter<"business_supporting_documents_attached"> | string
    url?: StringFilter<"business_supporting_documents_attached"> | string
    businessId?: StringFilter<"business_supporting_documents_attached"> | string
    createdAt?: DateTimeFilter<"business_supporting_documents_attached"> | Date | string
    updatedAt?: DateTimeFilter<"business_supporting_documents_attached"> | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    update: XOR<BusinessWarehouseReplenishmentReportAIUpdateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateWithoutBusinessesInput>
    create: XOR<BusinessWarehouseReplenishmentReportAICreateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedCreateWithoutBusinessesInput>
  }

  export type BusinessWarehouseReplenishmentReportAIUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: BusinessWarehouseReplenishmentReportAIWhereUniqueInput
    data: XOR<BusinessWarehouseReplenishmentReportAIUpdateWithoutBusinessesInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateWithoutBusinessesInput>
  }

  export type BusinessWarehouseReplenishmentReportAIUpdateManyWithWhereWithoutBusinessesInput = {
    where: BusinessWarehouseReplenishmentReportAIScalarWhereInput
    data: XOR<BusinessWarehouseReplenishmentReportAIUpdateManyMutationInput, BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type BusinessWarehouseReplenishmentReportAIScalarWhereInput = {
    AND?: BusinessWarehouseReplenishmentReportAIScalarWhereInput | BusinessWarehouseReplenishmentReportAIScalarWhereInput[]
    OR?: BusinessWarehouseReplenishmentReportAIScalarWhereInput[]
    NOT?: BusinessWarehouseReplenishmentReportAIScalarWhereInput | BusinessWarehouseReplenishmentReportAIScalarWhereInput[]
    id?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    url?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    businessId?: StringFilter<"BusinessWarehouseReplenishmentReportAI"> | string
    createdAt?: DateTimeFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessWarehouseReplenishmentReportAI"> | Date | string
  }

  export type client_order_product_linesUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: client_order_product_linesWhereUniqueInput
    update: XOR<client_order_product_linesUpdateWithoutBusinessesInput, client_order_product_linesUncheckedUpdateWithoutBusinessesInput>
    create: XOR<client_order_product_linesCreateWithoutBusinessesInput, client_order_product_linesUncheckedCreateWithoutBusinessesInput>
  }

  export type client_order_product_linesUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: client_order_product_linesWhereUniqueInput
    data: XOR<client_order_product_linesUpdateWithoutBusinessesInput, client_order_product_linesUncheckedUpdateWithoutBusinessesInput>
  }

  export type client_order_product_linesUpdateManyWithWhereWithoutBusinessesInput = {
    where: client_order_product_linesScalarWhereInput
    data: XOR<client_order_product_linesUpdateManyMutationInput, client_order_product_linesUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type client_order_thermal_printersUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: client_order_thermal_printersWhereUniqueInput
    update: XOR<client_order_thermal_printersUpdateWithoutBusinessesInput, client_order_thermal_printersUncheckedUpdateWithoutBusinessesInput>
    create: XOR<client_order_thermal_printersCreateWithoutBusinessesInput, client_order_thermal_printersUncheckedCreateWithoutBusinessesInput>
  }

  export type client_order_thermal_printersUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: client_order_thermal_printersWhereUniqueInput
    data: XOR<client_order_thermal_printersUpdateWithoutBusinessesInput, client_order_thermal_printersUncheckedUpdateWithoutBusinessesInput>
  }

  export type client_order_thermal_printersUpdateManyWithWhereWithoutBusinessesInput = {
    where: client_order_thermal_printersScalarWhereInput
    data: XOR<client_order_thermal_printersUpdateManyMutationInput, client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type client_order_thermal_printersScalarWhereInput = {
    AND?: client_order_thermal_printersScalarWhereInput | client_order_thermal_printersScalarWhereInput[]
    OR?: client_order_thermal_printersScalarWhereInput[]
    NOT?: client_order_thermal_printersScalarWhereInput | client_order_thermal_printersScalarWhereInput[]
    orderId?: StringFilter<"client_order_thermal_printers"> | string
    printers?: StringNullableListFilter<"client_order_thermal_printers">
    businessId?: StringFilter<"client_order_thermal_printers"> | string
    createdAt?: DateTimeFilter<"client_order_thermal_printers"> | Date | string
    updatedAt?: DateTimeFilter<"client_order_thermal_printers"> | Date | string
  }

  export type ClientOrderTicketUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: ClientOrderTicketWhereUniqueInput
    update: XOR<ClientOrderTicketUpdateWithoutBusinessesInput, ClientOrderTicketUncheckedUpdateWithoutBusinessesInput>
    create: XOR<ClientOrderTicketCreateWithoutBusinessesInput, ClientOrderTicketUncheckedCreateWithoutBusinessesInput>
  }

  export type ClientOrderTicketUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: ClientOrderTicketWhereUniqueInput
    data: XOR<ClientOrderTicketUpdateWithoutBusinessesInput, ClientOrderTicketUncheckedUpdateWithoutBusinessesInput>
  }

  export type ClientOrderTicketUpdateManyWithWhereWithoutBusinessesInput = {
    where: ClientOrderTicketScalarWhereInput
    data: XOR<ClientOrderTicketUpdateManyMutationInput, ClientOrderTicketUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type ClientOrderTicketScalarWhereInput = {
    AND?: ClientOrderTicketScalarWhereInput | ClientOrderTicketScalarWhereInput[]
    OR?: ClientOrderTicketScalarWhereInput[]
    NOT?: ClientOrderTicketScalarWhereInput | ClientOrderTicketScalarWhereInput[]
    orderId?: StringFilter<"ClientOrderTicket"> | string
    tickets?: JsonFilter<"ClientOrderTicket">
    businessId?: StringFilter<"ClientOrderTicket"> | string
    createdAt?: DateTimeFilter<"ClientOrderTicket"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrderTicket"> | Date | string
  }

  export type ClientOrderTransactionUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: ClientOrderTransactionWhereUniqueInput
    update: XOR<ClientOrderTransactionUpdateWithoutBusinessesInput, ClientOrderTransactionUncheckedUpdateWithoutBusinessesInput>
    create: XOR<ClientOrderTransactionCreateWithoutBusinessesInput, ClientOrderTransactionUncheckedCreateWithoutBusinessesInput>
  }

  export type ClientOrderTransactionUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: ClientOrderTransactionWhereUniqueInput
    data: XOR<ClientOrderTransactionUpdateWithoutBusinessesInput, ClientOrderTransactionUncheckedUpdateWithoutBusinessesInput>
  }

  export type ClientOrderTransactionUpdateManyWithWhereWithoutBusinessesInput = {
    where: ClientOrderTransactionScalarWhereInput
    data: XOR<ClientOrderTransactionUpdateManyMutationInput, ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type ClientOrderUpsertWithWhereUniqueWithoutBusinessesInput = {
    where: ClientOrderWhereUniqueInput
    update: XOR<ClientOrderUpdateWithoutBusinessesInput, ClientOrderUncheckedUpdateWithoutBusinessesInput>
    create: XOR<ClientOrderCreateWithoutBusinessesInput, ClientOrderUncheckedCreateWithoutBusinessesInput>
  }

  export type ClientOrderUpdateWithWhereUniqueWithoutBusinessesInput = {
    where: ClientOrderWhereUniqueInput
    data: XOR<ClientOrderUpdateWithoutBusinessesInput, ClientOrderUncheckedUpdateWithoutBusinessesInput>
  }

  export type ClientOrderUpdateManyWithWhereWithoutBusinessesInput = {
    where: ClientOrderScalarWhereInput
    data: XOR<ClientOrderUpdateManyMutationInput, ClientOrderUncheckedUpdateManyWithoutBusinessesInput>
  }

  export type ClientOrderScalarWhereInput = {
    AND?: ClientOrderScalarWhereInput | ClientOrderScalarWhereInput[]
    OR?: ClientOrderScalarWhereInput[]
    NOT?: ClientOrderScalarWhereInput | ClientOrderScalarWhereInput[]
    id?: StringFilter<"ClientOrder"> | string
    status?: EnumOrderStatusFilter<"ClientOrder"> | $Enums.OrderStatus
    informationNotes?: StringNullableFilter<"ClientOrder"> | string | null
    tableServed?: StringNullableFilter<"ClientOrder"> | string | null
    employeeServed?: StringNullableFilter<"ClientOrder"> | string | null
    refund?: BoolFilter<"ClientOrder"> | boolean
    businessId?: StringFilter<"ClientOrder"> | string
    createdAt?: DateTimeFilter<"ClientOrder"> | Date | string
    updatedAt?: DateTimeFilter<"ClientOrder"> | Date | string
  }

  export type businessesCreateWithoutClient_order_product_linesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutClient_order_product_linesInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutClient_order_product_linesInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutClient_order_product_linesInput, businessesUncheckedCreateWithoutClient_order_product_linesInput>
  }

  export type ClientOrderCreateWithoutClient_order_product_linesInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_thermal_printers?: client_order_thermal_printersCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutClient_ordersInput
    businesses: businessesCreateNestedOneWithoutClient_ordersInput
  }

  export type ClientOrderUncheckedCreateWithoutClient_order_product_linesInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_thermal_printers?: client_order_thermal_printersUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutClient_ordersInput
  }

  export type ClientOrderCreateOrConnectWithoutClient_order_product_linesInput = {
    where: ClientOrderWhereUniqueInput
    create: XOR<ClientOrderCreateWithoutClient_order_product_linesInput, ClientOrderUncheckedCreateWithoutClient_order_product_linesInput>
  }

  export type businessesUpsertWithoutClient_order_product_linesInput = {
    update: XOR<businessesUpdateWithoutClient_order_product_linesInput, businessesUncheckedUpdateWithoutClient_order_product_linesInput>
    create: XOR<businessesCreateWithoutClient_order_product_linesInput, businessesUncheckedCreateWithoutClient_order_product_linesInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutClient_order_product_linesInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutClient_order_product_linesInput, businessesUncheckedUpdateWithoutClient_order_product_linesInput>
  }

  export type businessesUpdateWithoutClient_order_product_linesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutClient_order_product_linesInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type ClientOrderUpsertWithoutClient_order_product_linesInput = {
    update: XOR<ClientOrderUpdateWithoutClient_order_product_linesInput, ClientOrderUncheckedUpdateWithoutClient_order_product_linesInput>
    create: XOR<ClientOrderCreateWithoutClient_order_product_linesInput, ClientOrderUncheckedCreateWithoutClient_order_product_linesInput>
    where?: ClientOrderWhereInput
  }

  export type ClientOrderUpdateToOneWithWhereWithoutClient_order_product_linesInput = {
    where?: ClientOrderWhereInput
    data: XOR<ClientOrderUpdateWithoutClient_order_product_linesInput, ClientOrderUncheckedUpdateWithoutClient_order_product_linesInput>
  }

  export type ClientOrderUpdateWithoutClient_order_product_linesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_thermal_printers?: client_order_thermal_printersUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutClient_ordersNestedInput
    businesses?: businessesUpdateOneRequiredWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateWithoutClient_order_product_linesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersNestedInput
  }

  export type businessesCreateWithoutClient_order_thermal_printersInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAICreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAICreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAICreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderCreateNestedManyWithoutBusinessesInput
  }

  export type businessesUncheckedCreateWithoutClient_order_thermal_printersInput = {
    id: string
    legalName: string
    taxId: string
    phone: string
    email: string
    registeredAddress: string
    countryOfIncorporation: string
    legalForm: string
    legalRepresentative: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    business_bank_information?: BusinessBankInformationUncheckedCreateNestedOneWithoutBusinessesInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedCreateNestedOneWithoutBusinessesInput
    business_compliance?: business_complianceUncheckedCreateNestedOneWithoutBusinessesInput
    business_configurations?: business_configurationsUncheckedCreateNestedOneWithoutBusinessesInput
    business_employees?: business_employeesUncheckedCreateNestedManyWithoutBusinessesInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    business_licenses?: BusinessLicenseUncheckedCreateNestedManyWithoutBusinessesInput
    business_menu_categories?: BusinessMenuCategoryUncheckedCreateNestedManyWithoutBusinessesInput
    business_menus?: BusinessMenuUncheckedCreateNestedManyWithoutBusinessesInput
    business_paying_companies?: BusinessPayingCompanyUncheckedCreateNestedOneWithoutBusinessesInput
    business_payment_history?: business_payment_historyUncheckedCreateNestedManyWithoutBusinessesInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedCreateNestedManyWithoutBusinessesInput
    business_phone_ids?: business_phone_idsUncheckedCreateNestedManyWithoutBusinessesInput
    business_products?: BusinessProductUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_information?: business_supplier_informationUncheckedCreateNestedManyWithoutBusinessesInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedCreateNestedManyWithoutBusinessesInput
    business_supporting_documents?: business_supporting_documentsUncheckedCreateNestedOneWithoutBusinessesInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedCreateNestedManyWithoutBusinessesInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedManyWithoutBusinessesInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutBusinessesInput
    client_orders?: ClientOrderUncheckedCreateNestedManyWithoutBusinessesInput
  }

  export type businessesCreateOrConnectWithoutClient_order_thermal_printersInput = {
    where: businessesWhereUniqueInput
    create: XOR<businessesCreateWithoutClient_order_thermal_printersInput, businessesUncheckedCreateWithoutClient_order_thermal_printersInput>
  }

  export type ClientOrderCreateWithoutClient_order_thermal_printersInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesCreateNestedManyWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionCreateNestedManyWithoutClient_ordersInput
    businesses: businessesCreateNestedOneWithoutClient_ordersInput
  }

  export type ClientOrderUncheckedCreateWithoutClient_order_thermal_printersInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
    client_order_product_lines?: client_order_product_linesUncheckedCreateNestedManyWithoutClient_ordersInput
    client_order_tickets?: ClientOrderTicketUncheckedCreateNestedOneWithoutClient_ordersInput
    client_order_transactions?: ClientOrderTransactionUncheckedCreateNestedManyWithoutClient_ordersInput
  }

  export type ClientOrderCreateOrConnectWithoutClient_order_thermal_printersInput = {
    where: ClientOrderWhereUniqueInput
    create: XOR<ClientOrderCreateWithoutClient_order_thermal_printersInput, ClientOrderUncheckedCreateWithoutClient_order_thermal_printersInput>
  }

  export type businessesUpsertWithoutClient_order_thermal_printersInput = {
    update: XOR<businessesUpdateWithoutClient_order_thermal_printersInput, businessesUncheckedUpdateWithoutClient_order_thermal_printersInput>
    create: XOR<businessesCreateWithoutClient_order_thermal_printersInput, businessesUncheckedCreateWithoutClient_order_thermal_printersInput>
    where?: businessesWhereInput
  }

  export type businessesUpdateToOneWithWhereWithoutClient_order_thermal_printersInput = {
    where?: businessesWhereInput
    data: XOR<businessesUpdateWithoutClient_order_thermal_printersInput, businessesUncheckedUpdateWithoutClient_order_thermal_printersInput>
  }

  export type businessesUpdateWithoutClient_order_thermal_printersInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUpdateManyWithoutBusinessesNestedInput
  }

  export type businessesUncheckedUpdateWithoutClient_order_thermal_printersInput = {
    id?: StringFieldUpdateOperationsInput | string
    legalName?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    registeredAddress?: StringFieldUpdateOperationsInput | string
    countryOfIncorporation?: StringFieldUpdateOperationsInput | string
    legalForm?: StringFieldUpdateOperationsInput | string
    legalRepresentative?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_bank_information?: BusinessBankInformationUncheckedUpdateOneWithoutBusinessesNestedInput
    business_commercial_relationships?: business_commercial_relationshipsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_compliance?: business_complianceUncheckedUpdateOneWithoutBusinessesNestedInput
    business_configurations?: business_configurationsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_employees?: business_employeesUncheckedUpdateManyWithoutBusinessesNestedInput
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_sales_reports_ai?: BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_general_warehouse_reports_ai?: BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    business_licenses?: BusinessLicenseUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesNestedInput
    business_menus?: BusinessMenuUncheckedUpdateManyWithoutBusinessesNestedInput
    business_paying_companies?: BusinessPayingCompanyUncheckedUpdateOneWithoutBusinessesNestedInput
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusinessesNestedInput
    business_payment_history_details?: BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesNestedInput
    business_phone_ids?: business_phone_idsUncheckedUpdateManyWithoutBusinessesNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_information?: business_supplier_informationUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesNestedInput
    business_supporting_documents?: business_supporting_documentsUncheckedUpdateOneWithoutBusinessesNestedInput
    business_supporting_documents_attached?: business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesNestedInput
    business_warehouse_replenishment_reports_ai?: BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateManyWithoutBusinessesNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesNestedInput
    client_orders?: ClientOrderUncheckedUpdateManyWithoutBusinessesNestedInput
  }

  export type ClientOrderUpsertWithoutClient_order_thermal_printersInput = {
    update: XOR<ClientOrderUpdateWithoutClient_order_thermal_printersInput, ClientOrderUncheckedUpdateWithoutClient_order_thermal_printersInput>
    create: XOR<ClientOrderCreateWithoutClient_order_thermal_printersInput, ClientOrderUncheckedCreateWithoutClient_order_thermal_printersInput>
    where?: ClientOrderWhereInput
  }

  export type ClientOrderUpdateToOneWithWhereWithoutClient_order_thermal_printersInput = {
    where?: ClientOrderWhereInput
    data: XOR<ClientOrderUpdateWithoutClient_order_thermal_printersInput, ClientOrderUncheckedUpdateWithoutClient_order_thermal_printersInput>
  }

  export type ClientOrderUpdateWithoutClient_order_thermal_printersInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutClient_ordersNestedInput
    businesses?: businessesUpdateOneRequiredWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateWithoutClient_order_thermal_printersInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersNestedInput
  }

  export type business_payment_historyCreateManyBusiness_payment_history_detailsInput = {
    id: string
    businessId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_payment_historyUpdateWithoutBusiness_payment_history_detailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_payment_historyNestedInput
  }

  export type business_payment_historyUncheckedUpdateWithoutBusiness_payment_history_detailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyUncheckedUpdateManyWithoutBusiness_payment_history_detailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesCreateManyClient_ordersInput = {
    id: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTransactionCreateManyClient_ordersInput = {
    id?: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_product_linesUpdateWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_product_linesNestedInput
  }

  export type client_order_product_linesUncheckedUpdateWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesUncheckedUpdateManyWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionUpdateWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutClient_order_transactionsNestedInput
  }

  export type ClientOrderTransactionUncheckedUpdateWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersInput = {
    id?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryCreateManyBusiness_menusInput = {
    id?: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessProductCreateManyBusiness_menusInput = {
    id?: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCategoryUpdateWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_menu_categoriesNestedInput
  }

  export type BusinessMenuCategoryUncheckedUpdateWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryUncheckedUpdateManyWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductUpdateWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_productsNestedInput
  }

  export type BusinessProductUncheckedUpdateWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductUncheckedUpdateManyWithoutBusiness_menusInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedCreateManyBusiness_commercial_relationshipsInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_commercial_relationship_documents_attachedUpdateWithoutBusiness_commercial_relationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedUncheckedUpdateWithoutBusiness_commercial_relationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_commercial_relationship_documents_attachedUncheckedUpdateManyWithoutBusiness_commercial_relationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsCreateManyBusiness_employeesInput = {
    id: string
    recordTime: Date | string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employees_clock_recordsUpdateWithoutBusiness_employeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_employees_clock_recordsNestedInput
  }

  export type business_employees_clock_recordsUncheckedUpdateWithoutBusiness_employeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsUncheckedUpdateManyWithoutBusiness_employeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureCreateManyBusiness_supplier_informationInput = {
    id?: string
    url: string
    businessId: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessSupplierPictureUpdateWithoutBusiness_supplier_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businesses?: businessesUpdateOneRequiredWithoutBusiness_supplier_picturesNestedInput
  }

  export type BusinessSupplierPictureUncheckedUpdateWithoutBusiness_supplier_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureUncheckedUpdateManyWithoutBusiness_supplier_informationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    businessId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employeesCreateManyBusinessesInput = {
    id: string
    nameEmployee: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employees_clock_recordsCreateManyBusinessesInput = {
    id: string
    employeeId: string
    recordTime: Date | string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralSalesReportAICreateManyBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessGeneralWarehouseReportAICreateManyBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessLicenseCreateManyBusinessesInput = {
    id?: string
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    stripePaymentIntentId?: string | null
    licenseType: $Enums.LicenseType
    plan: $Enums.LicensePlan
    status: $Enums.LicenseStatus
    startDate: Date | string
    endDate?: Date | string | null
    isPaid?: boolean
    lockinMonths?: number | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCategoryCreateManyBusinessesInput = {
    id?: string
    menuId: string
    vip?: boolean
    haveSchedule?: boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessMenuCreateManyBusinessesInput = {
    id?: string
    title: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_payment_historyCreateManyBusinessesInput = {
    id: string
    paymentDetailId: string
    amount: number
    currency: string
    type: string
    status: string
    stripeInvoiceId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessPaymentHistoryDetailCreateManyBusinessesInput = {
    id?: string
    description: string
    amount: number
    currency: string
    taxesIncluded?: boolean | null
    periodStart?: Date | string | null
    periodEnd?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_phone_idsCreateManyBusinessesInput = {
    id: string
    title: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessProductCreateManyBusinessesInput = {
    id?: string
    menuId: string
    name: string
    unityAmount: number
    stockBatches?: BusinessProductCreatestockBatchesInput | number[]
    expirationDates?: BusinessProductCreateexpirationDatesInput | Date[] | string[]
    unityConsumeStock: number
    typeUnitConsumeMeasurement: string
    tags?: string | null
    nameLastModificationEmployee?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supplier_informationCreateManyBusinessesInput = {
    id: string
    inUse?: boolean
    title: string
    description?: string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessSupplierPictureCreateManyBusinessesInput = {
    id?: string
    supplierId: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_supporting_documents_attachedCreateManyBusinessesInput = {
    id: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type BusinessWarehouseReplenishmentReportAICreateManyBusinessesInput = {
    id?: string
    url: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_product_linesCreateManyBusinessesInput = {
    id: string
    orderId: string
    productSnapshot: JsonNullValueInput | InputJsonValue
    quantity: number
    subtotal: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type client_order_thermal_printersCreateManyBusinessesInput = {
    orderId: string
    printers?: client_order_thermal_printersCreateprintersInput | string[]
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTicketCreateManyBusinessesInput = {
    orderId: string
    tickets: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderTransactionCreateManyBusinessesInput = {
    id?: string
    orderId: string
    externalTransactionId: string
    transactionAmount: number
    transactionCurrencyIso: string
    status: $Enums.TransactionStatus
    paymentMethod?: $Enums.PaymentMethod | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ClientOrderCreateManyBusinessesInput = {
    id?: string
    status?: $Enums.OrderStatus
    informationNotes?: string | null
    tableServed?: string | null
    employeeServed?: string | null
    refund?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type business_employeesUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_employees_clock_records?: business_employees_clock_recordsUpdateManyWithoutBusiness_employeesNestedInput
  }

  export type business_employeesUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_employees_clock_records?: business_employees_clock_recordsUncheckedUpdateManyWithoutBusiness_employeesNestedInput
  }

  export type business_employeesUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nameEmployee?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_employees?: business_employeesUpdateOneRequiredWithoutBusiness_employees_clock_recordsNestedInput
  }

  export type business_employees_clock_recordsUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeId?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_employees_clock_recordsUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeId?: StringFieldUpdateOperationsInput | string
    recordTime?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralSalesReportAIUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralSalesReportAIUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralSalesReportAIUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralWarehouseReportAIUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralWarehouseReportAIUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessGeneralWarehouseReportAIUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessLicenseUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessLicenseUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessLicenseUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: EnumLicenseTypeFieldUpdateOperationsInput | $Enums.LicenseType
    plan?: EnumLicensePlanFieldUpdateOperationsInput | $Enums.LicensePlan
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    lockinMonths?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menus?: BusinessMenuUpdateOneRequiredWithoutBusiness_menu_categoriesNestedInput
  }

  export type BusinessMenuCategoryUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuCategoryUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    vip?: BoolFieldUpdateOperationsInput | boolean
    haveSchedule?: BoolFieldUpdateOperationsInput | boolean
    schedule?: NullableJsonNullValueInput | InputJsonValue
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessMenuUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menu_categories?: BusinessMenuCategoryUpdateManyWithoutBusiness_menusNestedInput
    business_products?: BusinessProductUpdateManyWithoutBusiness_menusNestedInput
  }

  export type BusinessMenuUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menu_categories?: BusinessMenuCategoryUncheckedUpdateManyWithoutBusiness_menusNestedInput
    business_products?: BusinessProductUncheckedUpdateManyWithoutBusiness_menusNestedInput
  }

  export type BusinessMenuUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_payment_history_details?: BusinessPaymentHistoryDetailUpdateOneRequiredWithoutBusiness_payment_historyNestedInput
  }

  export type business_payment_historyUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentDetailId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_payment_historyUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentDetailId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    stripeInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPaymentHistoryDetailUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_payment_history?: business_payment_historyUpdateManyWithoutBusiness_payment_history_detailsNestedInput
  }

  export type BusinessPaymentHistoryDetailUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_payment_history?: business_payment_historyUncheckedUpdateManyWithoutBusiness_payment_history_detailsNestedInput
  }

  export type BusinessPaymentHistoryDetailUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    taxesIncluded?: NullableBoolFieldUpdateOperationsInput | boolean | null
    periodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_phone_idsUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_phone_idsUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_phone_idsUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_menus?: BusinessMenuUpdateOneRequiredWithoutBusiness_productsNestedInput
  }

  export type BusinessProductUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessProductUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    menuId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    unityAmount?: FloatFieldUpdateOperationsInput | number
    stockBatches?: BusinessProductUpdatestockBatchesInput | number[]
    expirationDates?: BusinessProductUpdateexpirationDatesInput | Date[] | string[]
    unityConsumeStock?: IntFieldUpdateOperationsInput | number
    typeUnitConsumeMeasurement?: StringFieldUpdateOperationsInput | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    nameLastModificationEmployee?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supplier_informationUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_supplier_pictures?: BusinessSupplierPictureUpdateManyWithoutBusiness_supplier_informationNestedInput
  }

  export type business_supplier_informationUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_supplier_pictures?: BusinessSupplierPictureUncheckedUpdateManyWithoutBusiness_supplier_informationNestedInput
  }

  export type business_supplier_informationUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    inUse?: BoolFieldUpdateOperationsInput | boolean
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    business_supplier_information?: business_supplier_informationUpdateOneRequiredWithoutBusiness_supplier_picturesNestedInput
  }

  export type BusinessSupplierPictureUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessSupplierPictureUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    supplierId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type business_supporting_documents_attachedUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessWarehouseReplenishmentReportAIUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_product_linesNestedInput
  }

  export type client_order_product_linesUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_product_linesUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productSnapshot?: JsonNullValueInput | InputJsonValue
    quantity?: IntFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_thermal_printersUpdateWithoutBusinessesInput = {
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_thermal_printersNestedInput
  }

  export type client_order_thermal_printersUncheckedUpdateWithoutBusinessesInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type client_order_thermal_printersUncheckedUpdateManyWithoutBusinessesInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    printers?: client_order_thermal_printersUpdateprintersInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTicketUpdateWithoutBusinessesInput = {
    tickets?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_ticketsNestedInput
  }

  export type ClientOrderTicketUncheckedUpdateWithoutBusinessesInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    tickets?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTicketUncheckedUpdateManyWithoutBusinessesInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    tickets?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_orders?: ClientOrderUpdateOneRequiredWithoutClient_order_transactionsNestedInput
  }

  export type ClientOrderTransactionUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderTransactionUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    externalTransactionId?: StringFieldUpdateOperationsInput | string
    transactionAmount?: FloatFieldUpdateOperationsInput | number
    transactionCurrencyIso?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientOrderUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUpdateManyWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client_order_product_lines?: client_order_product_linesUncheckedUpdateManyWithoutClient_ordersNestedInput
    client_order_thermal_printers?: client_order_thermal_printersUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_tickets?: ClientOrderTicketUncheckedUpdateOneWithoutClient_ordersNestedInput
    client_order_transactions?: ClientOrderTransactionUncheckedUpdateManyWithoutClient_ordersNestedInput
  }

  export type ClientOrderUncheckedUpdateManyWithoutBusinessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    informationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    tableServed?: NullableStringFieldUpdateOperationsInput | string | null
    employeeServed?: NullableStringFieldUpdateOperationsInput | string | null
    refund?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}