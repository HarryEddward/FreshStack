networks:
  traefik-public:
    name: traefik-public
    external: true
  seaweedfs:
    driver: overlay
    attachable: true

volumes:
  seaweedfs_volume:
    driver: local
  seaweedfs_filer_data:
    driver: local


configs:
  s3_conf:
    external: true



secrets:
  seaweedfs_s3_access_key:
    external: true
  seaweedfs_s3_secret_key:
    external: true
  seaweedfs_s3_username:
    external: true

services:
  master:
    image: chrislusf/seaweedfs:latest
    command: "master -ip=master -ip.bind=0.0.0.0 -port=9333"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.seaweedfs-master.rule=Host(`www.cafebuy.es`) && PathPrefix(`/seaweedfs/master`)"
        - "traefik.http.routers.seaweedfs-master.entrypoints=websecure"
        - "traefik.http.routers.seaweedfs-master.tls.certresolver=myresolver"
        - "traefik.http.services.seaweedfs-master.loadbalancer.server.port=9333"
        - "traefik.http.middlewares.seaweedfs-master-strip.stripprefix.prefixes=/seaweedfs/master"
        - "traefik.http.middlewares.seaweedfs-master-strip.stripprefix.forceslash=false"
        - "traefik.http.routers.seaweedfs-master.middlewares=seaweedfs-master-strip"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - seaweedfs
      - traefik-public

  volume:
    image: chrislusf/seaweedfs:latest
    command: 'volume -mserver="master:9333" -ip.bind=0.0.0.0 -port=8080 -max=100 -publicUrl=volume:8080'
    volumes:
      - seaweedfs_volume:/data
    depends_on:
      - master
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - seaweedfs

  filer:
    image: chrislusf/seaweedfs:latest
    command: 'filer -master="master:9333" -ip.bind=0.0.0.0 -port=8888'
    volumes:
      - seaweedfs_filer_data:/data/filerldb2
    depends_on:
      - master
      - volume
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.seaweedfs-filer.rule=Host(`www.cafebuy.es`) && PathPrefix(`/seaweedfs/filer`)"
        - "traefik.http.routers.seaweedfs-filer.entrypoints=websecure"
        - "traefik.http.routers.seaweedfs-filer.tls.certresolver=myresolver"
        - "traefik.http.services.seaweedfs-filer.loadbalancer.server.port=8888"
        - "traefik.http.middlewares.seaweedfs-filer-strip.stripprefix.prefixes=/seaweedfs/filer"
        - "traefik.http.middlewares.seaweedfs-filer-strip.stripprefix.forceslash=false"
        - "traefik.http.routers.seaweedfs-filer.middlewares=seaweedfs-filer-strip"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - seaweedfs
      - traefik-public

  s3:
    image: chrislusf/seaweedfs:latest
    entrypoint: ["/bin/sh"]
    command:
      - -c
      - |
        set -e
        echo "Verificando secrets..."
        test -f /run/secrets/seaweedfs_s3_access_key || exit 1
        test -f /run/secrets/seaweedfs_s3_secret_key || exit 1
        test -f /run/secrets/seaweedfs_s3_username || exit 1
        
        echo "Leyendo secrets con cat..."
        S3_ACCESS_KEY="$$(cat /run/secrets/seaweedfs_s3_access_key | tr -d '\n\r')"
        S3_SECRET_KEY="$$(cat /run/secrets/seaweedfs_s3_secret_key | tr -d '\n\r')"
        S3_USERNAME="$$(cat /run/secrets/seaweedfs_s3_username | tr -d '\n\r')"
        
        echo "Username: $$S3_USERNAME"
        echo "AccessKey length: $$(echo "$$S3_ACCESS_KEY" | wc -c)"
        
        echo "Generando configuracion S3..."
        jq -n \
        --arg name "$S3_USERNAME" \
        --arg access "$S3_ACCESS_KEY" \
        --arg secret "$S3_SECRET_KEY" \
        '{
          "identities": [
            {
              "name": "anonymous",
              "actions": [
                "Read"
              ]
            },
            {
              "name": $name,
              "credentials": [
                {
                  "accessKey": $access,
                  "secretKey": $secret
                }
              ],
              "actions": [
                "Admin",
                "Read",
                "List",
                "Tagging",
                "Write"
              ]
            }
          ]
        }' > /etc/seaweedfs/s3.json

        
        echo "=== Configuracion S3 generada ==="
        cat /etc/seaweedfs/s3.json
        echo "================================="
        
        echo "Esperando filer..."
        sleep 5
        
        echo "Iniciando S3..."
        exec weed s3 -filer=filer:8888 -ip.bind=0.0.0.0 -port=8333 -config=/etc/seaweedfs/s3.json -allowEmptyFolder=true -allowDeleteBucketNotEmpty=false
    secrets:
      - seaweedfs_s3_access_key
      - seaweedfs_s3_secret_key
      - seaweedfs_s3_username
    configs:
      - source: s3_conf
        target: /etc/seaweedfs/s3.json.template
    depends_on:
      - master
      - volume
      - filer
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # S3 API en /seaweedfs/s3
        - "traefik.http.routers.seaweedfs-s3.rule=Host(`www.cafebuy.es`) && PathPrefix(`/seaweedfs/s3`)"
        - "traefik.http.routers.seaweedfs-s3.entrypoints=websecure"
        - "traefik.http.routers.seaweedfs-s3.tls.certresolver=myresolver"
        - "traefik.http.services.seaweedfs-s3.loadbalancer.server.port=8333"
        # Middleware para strip prefix
        - "traefik.http.middlewares.seaweedfs-s3-strip.stripprefix.prefixes=/seaweedfs/s3"
        - "traefik.http.middlewares.seaweedfs-s3-strip.stripprefix.forceslash=false"
        # Headers para S3
        - "traefik.http.middlewares.seaweedfs-s3-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
        - "traefik.http.middlewares.seaweedfs-s3-headers.headers.customrequestheaders.X-Forwarded-Host=www.cafebuy.es"
        - "traefik.http.middlewares.seaweedfs-s3-headers.headers.customresponseheaders.Access-Control-Allow-Origin=*"
        - "traefik.http.middlewares.seaweedfs-s3-headers.headers.customresponseheaders.Access-Control-Allow-Methods=GET,POST,PUT,DELETE,HEAD,OPTIONS"
        - "traefik.http.middlewares.seaweedfs-s3-headers.headers.customresponseheaders.Access-Control-Allow-Headers=*"
        # Aplicar middlewares
        - "traefik.http.routers.seaweedfs-s3.middlewares=seaweedfs-s3-strip,seaweedfs-s3-headers"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - seaweedfs
      - traefik-public

  webdav:
    image: chrislusf/seaweedfs:latest
    command: 'webdav -filer="filer:8888" -port=7333'
    depends_on:
      - master
      - volume
      - filer
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.seaweedfs-webdav.rule=Host(`www.cafebuy.es`) && PathPrefix(`/seaweedfs/webdav`)"
        - "traefik.http.routers.seaweedfs-webdav.entrypoints=websecure"
        - "traefik.http.routers.seaweedfs-webdav.tls.certresolver=myresolver"
        - "traefik.http.services.seaweedfs-webdav.loadbalancer.server.port=7333"
        - "traefik.http.middlewares.seaweedfs-webdav-strip.stripprefix.prefixes=/seaweedfs/webdav"
        - "traefik.http.middlewares.seaweedfs-webdav-strip.stripprefix.forceslash=false"
        - "traefik.http.routers.seaweedfs-webdav.middlewares=seaweedfs-webdav-strip"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - seaweedfs
      - traefik-public