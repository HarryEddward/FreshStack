version: "3.8"

services:
  traefik:
    image: traefik:v3.1  # Usamos v3.1 para producción, más reciente que v2.10
    command:
      - "--log.level=INFO"
      - "--api.dashboard=true"
      # Enable the Docker Swarm provider (instead of Docker provider)
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"

      # Watch for Swarm service changes (requires socket access)
      - "--providers.swarm.watch=true"

      # Recommended: Don't expose services by default; require explicit labels
      - "--providers.swarm.exposedbydefault=false"

      # Specify the default network for Traefik to connect to services
      - "--providers.swarm.network=traefik-public"
      - "--providers.file.directory=/etc/traefik/dynamic"  # Cargar configuración dinámica
      - "--providers.file.watch=true"  # Monitorear cambios
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-config:/etc/traefik/dynamic:ro"  # Volumen para config dinámica
    secrets:
      - source: ssl_cert
        target: /etc/traefik/certs/cafebuy.crt
      - source: ssl_key
        target: /etc/traefik/certs/cafebuy.key
    networks:
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.www.cafebuy.es`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.tls=true"
        #- "traefik.http.routers.traefik.middlewares=auth"
        #- "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$05$$ejemploHashedPassword"  # Genera con htpasswd

  # Ejemplo de servicio (adapta para client-app, employee-app, etc.)
  whoami:
    image: traefik/whoami
    deploy:
      replicas: 2
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`www.cafebuy.es`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

networks:
  traefik-public:
    external: true

volumes:
  traefik-config:

secrets:
  ssl_cert:
    external: true
  ssl_key:
    external: true